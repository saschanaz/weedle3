[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "AsyncIterable",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    AsyncIterable(
                        Double(
                            DoubleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Async(
                                        "async",
                                    ),
                                    Iterable(
                                        "iterable",
                                    ),
                                ),
                                generics: Generics {
                                    open_angle: LessThan(
                                        "<",
                                    ),
                                    body: (
                                        AttributedType {
                                            attributes: None,
                                            type_: Single(
                                                NonAny(
                                                    Integer(
                                                        MayBeNull {
                                                            type_: Long(
                                                                LongType {
                                                                    unsigned: None,
                                                                    long: Long(
                                                                        "long",
                                                                    ),
                                                                },
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                        Comma(
                                            ",",
                                        ),
                                        AttributedType {
                                            attributes: None,
                                            type_: Single(
                                                NonAny(
                                                    FloatingPoint(
                                                        MayBeNull {
                                                            type_: Float(
                                                                FloatType {
                                                                    unrestricted: None,
                                                                    float: Float(
                                                                        "float",
                                                                    ),
                                                                },
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    close_angle: GreaterThan(
                                        ">",
                                    ),
                                },
                                args: None,
                                semi_colon: SemiColon(
                                    ";",
                                ),
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "AsyncIterableWithExtAttr",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    AsyncIterable(
                        Double(
                            DoubleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Async(
                                        "async",
                                    ),
                                    Iterable(
                                        "iterable",
                                    ),
                                ),
                                generics: Generics {
                                    open_angle: LessThan(
                                        "<",
                                    ),
                                    body: (
                                        AttributedType {
                                            attributes: Some(
                                                Bracketed {
                                                    open_bracket: OpenBracket(
                                                        "[",
                                                    ),
                                                    body: Punctuated {
                                                        list: [
                                                            NoArgs(
                                                                ExtendedAttributeNoArgs(
                                                                    Identifier(
                                                                        "XAttr2",
                                                                    ),
                                                                ),
                                                            ),
                                                        ],
                                                        separator: PhantomData<weedle::lexer::keywords::Comma>,
                                                    },
                                                    close_bracket: CloseBracket(
                                                        "]",
                                                    ),
                                                },
                                            ),
                                            type_: Single(
                                                NonAny(
                                                    DOMString(
                                                        MayBeNull {
                                                            type_: DOMString(
                                                                "DOMString",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                        Comma(
                                            ",",
                                        ),
                                        AttributedType {
                                            attributes: Some(
                                                Bracketed {
                                                    open_bracket: OpenBracket(
                                                        "[",
                                                    ),
                                                    body: Punctuated {
                                                        list: [
                                                            NoArgs(
                                                                ExtendedAttributeNoArgs(
                                                                    Identifier(
                                                                        "XAttr3",
                                                                    ),
                                                                ),
                                                            ),
                                                        ],
                                                        separator: PhantomData<weedle::lexer::keywords::Comma>,
                                                    },
                                                    close_bracket: CloseBracket(
                                                        "]",
                                                    ),
                                                },
                                            ),
                                            type_: Single(
                                                NonAny(
                                                    Integer(
                                                        MayBeNull {
                                                            type_: Long(
                                                                LongType {
                                                                    unsigned: None,
                                                                    long: Long(
                                                                        "long",
                                                                    ),
                                                                },
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    close_angle: GreaterThan(
                                        ">",
                                    ),
                                },
                                args: None,
                                semi_colon: SemiColon(
                                    ";",
                                ),
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "AsyncIterableWithNoParam",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    AsyncIterable(
                        Double(
                            DoubleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Async(
                                        "async",
                                    ),
                                    Iterable(
                                        "iterable",
                                    ),
                                ),
                                generics: Generics {
                                    open_angle: LessThan(
                                        "<",
                                    ),
                                    body: (
                                        AttributedType {
                                            attributes: None,
                                            type_: Single(
                                                NonAny(
                                                    FloatingPoint(
                                                        MayBeNull {
                                                            type_: Float(
                                                                FloatType {
                                                                    unrestricted: None,
                                                                    float: Float(
                                                                        "float",
                                                                    ),
                                                                },
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                        Comma(
                                            ",",
                                        ),
                                        AttributedType {
                                            attributes: None,
                                            type_: Single(
                                                NonAny(
                                                    ByteString(
                                                        MayBeNull {
                                                            type_: ByteString(
                                                                "ByteString",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    close_angle: GreaterThan(
                                        ">",
                                    ),
                                },
                                args: Some(
                                    Parenthesized {
                                        open_paren: OpenParen(
                                            "(",
                                        ),
                                        body: Punctuated {
                                            list: [],
                                            separator: PhantomData<weedle::lexer::keywords::Comma>,
                                        },
                                        close_paren: CloseParen(
                                            ")",
                                        ),
                                    },
                                ),
                                semi_colon: SemiColon(
                                    ";",
                                ),
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "AsyncIterableWithParam",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    AsyncIterable(
                        Double(
                            DoubleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Async(
                                        "async",
                                    ),
                                    Iterable(
                                        "iterable",
                                    ),
                                ),
                                generics: Generics {
                                    open_angle: LessThan(
                                        "<",
                                    ),
                                    body: (
                                        AttributedType {
                                            attributes: None,
                                            type_: Single(
                                                NonAny(
                                                    FloatingPoint(
                                                        MayBeNull {
                                                            type_: Float(
                                                                FloatType {
                                                                    unrestricted: None,
                                                                    float: Float(
                                                                        "float",
                                                                    ),
                                                                },
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                        Comma(
                                            ",",
                                        ),
                                        AttributedType {
                                            attributes: None,
                                            type_: Single(
                                                NonAny(
                                                    ByteString(
                                                        MayBeNull {
                                                            type_: ByteString(
                                                                "ByteString",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    close_angle: GreaterThan(
                                        ">",
                                    ),
                                },
                                args: Some(
                                    Parenthesized {
                                        open_paren: OpenParen(
                                            "(",
                                        ),
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                NonAny(
                                                                    USVString(
                                                                        MayBeNull {
                                                                            type_: USVString(
                                                                                "USVString",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            Identifier(
                                                                "str",
                                                            ),
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: PhantomData<weedle::lexer::keywords::Comma>,
                                        },
                                        close_paren: CloseParen(
                                            ")",
                                        ),
                                    },
                                ),
                                semi_colon: SemiColon(
                                    ";",
                                ),
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "AsyncValueIterable",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    AsyncIterable(
                        Single(
                            SingleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Async(
                                        "async",
                                    ),
                                    Iterable(
                                        "iterable",
                                    ),
                                ),
                                generics: Generics {
                                    open_angle: LessThan(
                                        "<",
                                    ),
                                    body: AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            NonAny(
                                                FloatingPoint(
                                                    MayBeNull {
                                                        type_: Float(
                                                            FloatType {
                                                                unrestricted: None,
                                                                float: Float(
                                                                    "float",
                                                                ),
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    close_angle: GreaterThan(
                                        ">",
                                    ),
                                },
                                args: None,
                                semi_colon: SemiColon(
                                    ";",
                                ),
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "AsyncValueIterableWithNoParam",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    AsyncIterable(
                        Single(
                            SingleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Async(
                                        "async",
                                    ),
                                    Iterable(
                                        "iterable",
                                    ),
                                ),
                                generics: Generics {
                                    open_angle: LessThan(
                                        "<",
                                    ),
                                    body: AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            NonAny(
                                                FloatingPoint(
                                                    MayBeNull {
                                                        type_: Float(
                                                            FloatType {
                                                                unrestricted: None,
                                                                float: Float(
                                                                    "float",
                                                                ),
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    close_angle: GreaterThan(
                                        ">",
                                    ),
                                },
                                args: Some(
                                    Parenthesized {
                                        open_paren: OpenParen(
                                            "(",
                                        ),
                                        body: Punctuated {
                                            list: [],
                                            separator: PhantomData<weedle::lexer::keywords::Comma>,
                                        },
                                        close_paren: CloseParen(
                                            ")",
                                        ),
                                    },
                                ),
                                semi_colon: SemiColon(
                                    ";",
                                ),
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "AsyncValueIterableWithParams",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    AsyncIterable(
                        Single(
                            SingleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Async(
                                        "async",
                                    ),
                                    Iterable(
                                        "iterable",
                                    ),
                                ),
                                generics: Generics {
                                    open_angle: LessThan(
                                        "<",
                                    ),
                                    body: AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            NonAny(
                                                FloatingPoint(
                                                    MayBeNull {
                                                        type_: Float(
                                                            FloatType {
                                                                unrestricted: None,
                                                                float: Float(
                                                                    "float",
                                                                ),
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    close_angle: GreaterThan(
                                        ">",
                                    ),
                                },
                                args: Some(
                                    Parenthesized {
                                        open_paren: OpenParen(
                                            "(",
                                        ),
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                NonAny(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString(
                                                                                "DOMString",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            Identifier(
                                                                "str",
                                                            ),
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                NonAny(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: Short(
                                                                                ShortType {
                                                                                    unsigned: None,
                                                                                    short: Short(
                                                                                        "short",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            Identifier(
                                                                "s",
                                                            ),
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: PhantomData<weedle::lexer::keywords::Comma>,
                                        },
                                        close_paren: CloseParen(
                                            ")",
                                        ),
                                    },
                                ),
                                semi_colon: SemiColon(
                                    ";",
                                ),
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
]
