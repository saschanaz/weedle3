[
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback(
                "callback",
            ),
            identifier: Identifier(
                "AsyncOperationCallback",
            ),
            assign: Assign(
                "=",
            ),
            return_type: Undefined(
                Undefined(
                    "undefined",
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen(
                    "(",
                ),
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        NonAny(
                                            DOMString(
                                                MayBeNull {
                                                    type_: DOMString(
                                                        "DOMString",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    Identifier(
                                        "status",
                                    ),
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                },
                close_paren: CloseParen(
                    ")",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    CallbackInterface(
        CallbackInterfaceDefinition {
            attributes: None,
            callback: Callback(
                "callback",
            ),
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "EventHandler",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Undefined(
                                Undefined(
                                    "undefined",
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    Identifier(
                                        "eventOccurred",
                                    ),
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString(
                                                                        "DOMString",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "details",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback(
                "callback",
            ),
            identifier: Identifier(
                "SortCallback",
            ),
            assign: Assign(
                "=",
            ),
            return_type: Type(
                Single(
                    NonAny(
                        Boolean(
                            MayBeNull {
                                type_: Boolean(
                                    "boolean",
                                ),
                                q_mark: None,
                            },
                        ),
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen(
                    "(",
                ),
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Any(
                                                "any",
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    Identifier(
                                        "a",
                                    ),
                                ),
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Any(
                                                "any",
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    Identifier(
                                        "b",
                                    ),
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                },
                close_paren: CloseParen(
                    ")",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
]
