[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "InterfaceWithConstructor",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket(
                                        "[",
                                    ),
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Throws",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: PhantomData,
                                    },
                                    close_bracket: CloseBracket(
                                        "]",
                                    ),
                                },
                            ),
                            constructor: Constructor(
                                "constructor",
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long(
                                                                                "long",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "a",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
]
