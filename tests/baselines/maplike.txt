[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "",
            },
            identifier: Identifier(
                "MapLike",
            ),
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Maplike(
                        MaplikeInterfaceMember {
                            attributes: None,
                            readonly: None,
                            maplike: VariantToken {
                                variant: Maplike(
                                    "maplike",
                                ),
                                trivia: "\n  ",
                            },
                            generics: Generics {
                                open_angle: VariantToken {
                                    variant: LessThan(
                                        "<",
                                    ),
                                    trivia: "",
                                },
                                body: (
                                    AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            NonAny(
                                                Integer(
                                                    MayBeNull {
                                                        type_: Long(
                                                            LongType {
                                                                unsigned: None,
                                                                long: VariantToken {
                                                                    variant: Long(
                                                                        "long",
                                                                    ),
                                                                    trivia: "",
                                                                },
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    VariantToken {
                                        variant: Comma(
                                            ",",
                                        ),
                                        trivia: "",
                                    },
                                    AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            NonAny(
                                                FloatingPoint(
                                                    MayBeNull {
                                                        type_: Float(
                                                            FloatType {
                                                                unrestricted: None,
                                                                float: VariantToken {
                                                                    variant: Float(
                                                                        "float",
                                                                    ),
                                                                    trivia: " ",
                                                                },
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                ),
                                close_angle: VariantToken {
                                    variant: GreaterThan(
                                        ">",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "\n\n",
            },
            identifier: Identifier(
                "ReadOnlyMapLike",
            ),
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Maplike(
                        MaplikeInterfaceMember {
                            attributes: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            maplike: VariantToken {
                                variant: Maplike(
                                    "maplike",
                                ),
                                trivia: "",
                            },
                            generics: Generics {
                                open_angle: VariantToken {
                                    variant: LessThan(
                                        "<",
                                    ),
                                    trivia: "",
                                },
                                body: (
                                    AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            NonAny(
                                                Integer(
                                                    MayBeNull {
                                                        type_: Long(
                                                            LongType {
                                                                unsigned: None,
                                                                long: VariantToken {
                                                                    variant: Long(
                                                                        "long",
                                                                    ),
                                                                    trivia: "",
                                                                },
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    VariantToken {
                                        variant: Comma(
                                            ",",
                                        ),
                                        trivia: "",
                                    },
                                    AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            NonAny(
                                                FloatingPoint(
                                                    MayBeNull {
                                                        type_: Float(
                                                            FloatType {
                                                                unrestricted: None,
                                                                float: VariantToken {
                                                                    variant: Float(
                                                                        "float",
                                                                    ),
                                                                    trivia: " ",
                                                                },
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                ),
                                close_angle: VariantToken {
                                    variant: GreaterThan(
                                        ">",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "\n\n// Extracted from https://heycam.github.io/webidl/#idl-type-extended-attribute-associated-with on 2017-07-01\n\n",
            },
            identifier: Identifier(
                "I",
            ),
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Maplike(
                        MaplikeInterfaceMember {
                            attributes: None,
                            readonly: None,
                            maplike: VariantToken {
                                variant: Maplike(
                                    "maplike",
                                ),
                                trivia: "\n    ",
                            },
                            generics: Generics {
                                open_angle: VariantToken {
                                    variant: LessThan(
                                        "<",
                                    ),
                                    trivia: "",
                                },
                                body: (
                                    AttributedType {
                                        attributes: Some(
                                            Bracketed {
                                                open_bracket: VariantToken {
                                                    variant: OpenBracket(
                                                        "[",
                                                    ),
                                                    trivia: "",
                                                },
                                                body: Punctuated {
                                                    list: [
                                                        NoArgs(
                                                            ExtendedAttributeNoArgs(
                                                                Identifier(
                                                                    "XAttr2",
                                                                ),
                                                            ),
                                                        ),
                                                    ],
                                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                                },
                                                close_bracket: VariantToken {
                                                    variant: CloseBracket(
                                                        "]",
                                                    ),
                                                    trivia: "",
                                                },
                                            },
                                        ),
                                        type_: Single(
                                            NonAny(
                                                DOMString(
                                                    MayBeNull {
                                                        type_: VariantToken {
                                                            variant: DOMString(
                                                                "DOMString",
                                                            ),
                                                            trivia: " ",
                                                        },
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    VariantToken {
                                        variant: Comma(
                                            ",",
                                        ),
                                        trivia: "",
                                    },
                                    AttributedType {
                                        attributes: Some(
                                            Bracketed {
                                                open_bracket: VariantToken {
                                                    variant: OpenBracket(
                                                        "[",
                                                    ),
                                                    trivia: " ",
                                                },
                                                body: Punctuated {
                                                    list: [
                                                        NoArgs(
                                                            ExtendedAttributeNoArgs(
                                                                Identifier(
                                                                    "XAttr3",
                                                                ),
                                                            ),
                                                        ),
                                                    ],
                                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                                },
                                                close_bracket: VariantToken {
                                                    variant: CloseBracket(
                                                        "]",
                                                    ),
                                                    trivia: "",
                                                },
                                            },
                                        ),
                                        type_: Single(
                                            NonAny(
                                                Integer(
                                                    MayBeNull {
                                                        type_: Long(
                                                            LongType {
                                                                unsigned: None,
                                                                long: VariantToken {
                                                                    variant: Long(
                                                                        "long",
                                                                    ),
                                                                    trivia: " ",
                                                                },
                                                            },
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                ),
                                close_angle: VariantToken {
                                    variant: GreaterThan(
                                        ">",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
]
