[
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: ArgumentName(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "EventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: ArgumentName(
                                                            "eventInitDict",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                                Identifier(
                                                    "AudioWorklet",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Event",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventTarget",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventTarget",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "srcElement",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventTarget",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "currentTarget",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "EventTarget",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "composedPath",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "NONE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CAPTURING_PHASE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "AT_TARGET",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "BUBBLING_PHASE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "eventPhase",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "stopPropagation",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "cancelBubble",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "stopImmediatePropagation",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "bubbles",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "cancelable",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "returnValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "preventDefault",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "defaultPrevented",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "composed",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "isTrusted",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMHighResTimeStamp",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "timeStamp",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "initEvent",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "bubbles",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "cancelable",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "EventInit",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "bubbles",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "cancelable",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "composed",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: ArgumentName(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "CustomEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: ArgumentName(
                                                            "eventInitDict",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CustomEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Any(
                                        Any,
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "detail",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "initCustomEvent",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "bubbles",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "cancelable",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "detail",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "CustomEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Any,
                            ),
                        ),
                        identifier: Identifier(
                            "detail",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                                Identifier(
                                                    "AudioWorklet",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "EventTarget",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "addEventListener",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "EventListener",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "callback",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "AddEventListenerOptions",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Boolean(
                                                                                    MayBeNull {
                                                                                        type_: Boolean,
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "options",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "removeEventListener",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "EventListener",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "callback",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "EventListenerOptions",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Boolean(
                                                                                    MayBeNull {
                                                                                        type_: Boolean,
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "options",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "dispatchEvent",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Event",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "event",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    CallbackInterface(
        CallbackInterfaceDefinition {
            attributes: None,
            callback: Callback,
            interface: Interface,
            identifier: Identifier(
                "EventListener",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "handleEvent",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Event",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "event",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "EventListenerOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "capture",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "AddEventListenerOptions",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventListenerOptions",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "passive",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "once",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "AbortController",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "AbortSignal",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "signal",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "abort",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "AbortSignal",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "aborted",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "onabort",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NonElementParentNode",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getElementById",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "elementId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Document",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NonElementParentNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "DocumentFragment",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NonElementParentNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "DocumentOrShadowRoot",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Document",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "DocumentOrShadowRoot",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "ShadowRoot",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "DocumentOrShadowRoot",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "ParentNode",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "children",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "firstElementChild",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lastElementChild",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "childElementCount",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unscopable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "prepend",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Union(
                                                    MayBeNull {
                                                        type_: Parenthesized {
                                                            open_paren: OpenParen,
                                                            body: Punctuated {
                                                                list: [
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: Identifier(
                                                                                MayBeNull {
                                                                                    type_: Identifier(
                                                                                        "Node",
                                                                                    ),
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: DOMString(
                                                                                MayBeNull {
                                                                                    type_: DOMString,
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                                separator: Or,
                                                            },
                                                            close_paren: CloseParen,
                                                        },
                                                        q_mark: None,
                                                    },
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "nodes",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unscopable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "append",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Union(
                                                    MayBeNull {
                                                        type_: Parenthesized {
                                                            open_paren: OpenParen,
                                                            body: Punctuated {
                                                                list: [
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: Identifier(
                                                                                MayBeNull {
                                                                                    type_: Identifier(
                                                                                        "Node",
                                                                                    ),
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: DOMString(
                                                                                MayBeNull {
                                                                                    type_: DOMString,
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                                separator: Or,
                                                            },
                                                            close_paren: CloseParen,
                                                        },
                                                        q_mark: None,
                                                    },
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "nodes",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "querySelector",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "selectors",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "NodeList",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "querySelectorAll",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "selectors",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Document",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "ParentNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "DocumentFragment",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "ParentNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Element",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "ParentNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NonDocumentTypeChildNode",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "previousElementSibling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "nextElementSibling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Element",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NonDocumentTypeChildNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CharacterData",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NonDocumentTypeChildNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "ChildNode",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unscopable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "before",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Union(
                                                    MayBeNull {
                                                        type_: Parenthesized {
                                                            open_paren: OpenParen,
                                                            body: Punctuated {
                                                                list: [
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: Identifier(
                                                                                MayBeNull {
                                                                                    type_: Identifier(
                                                                                        "Node",
                                                                                    ),
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: DOMString(
                                                                                MayBeNull {
                                                                                    type_: DOMString,
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                                separator: Or,
                                                            },
                                                            close_paren: CloseParen,
                                                        },
                                                        q_mark: None,
                                                    },
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "nodes",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unscopable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "after",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Union(
                                                    MayBeNull {
                                                        type_: Parenthesized {
                                                            open_paren: OpenParen,
                                                            body: Punctuated {
                                                                list: [
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: Identifier(
                                                                                MayBeNull {
                                                                                    type_: Identifier(
                                                                                        "Node",
                                                                                    ),
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: DOMString(
                                                                                MayBeNull {
                                                                                    type_: DOMString,
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                                separator: Or,
                                                            },
                                                            close_paren: CloseParen,
                                                        },
                                                        q_mark: None,
                                                    },
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "nodes",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unscopable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "replaceWith",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Union(
                                                    MayBeNull {
                                                        type_: Parenthesized {
                                                            open_paren: OpenParen,
                                                            body: Punctuated {
                                                                list: [
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: Identifier(
                                                                                MayBeNull {
                                                                                    type_: Identifier(
                                                                                        "Node",
                                                                                    ),
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Single(
                                                                        AttributedNonAnyType {
                                                                            attributes: None,
                                                                            type_: DOMString(
                                                                                MayBeNull {
                                                                                    type_: DOMString,
                                                                                    q_mark: None,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                                separator: Or,
                                                            },
                                                            close_paren: CloseParen,
                                                        },
                                                        q_mark: None,
                                                    },
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "nodes",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unscopable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "remove",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "DocumentType",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "ChildNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Element",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "ChildNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CharacterData",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "ChildNode",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "Slotable",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLSlotElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "assignedSlot",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Element",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "Slotable",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Text",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "Slotable",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "NodeList",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Iterable(
                        Single(
                            SingleTypedIterable {
                                attributes: None,
                                iterable: Iterable,
                                generics: Generics {
                                    open_angle: LessThan,
                                    body: AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            Distinguishable(
                                                Identifier(
                                                    MayBeNull {
                                                        type_: Identifier(
                                                            "Node",
                                                        ),
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    close_angle: GreaterThan,
                                },
                                semi_colon: SemiColon,
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLCollection",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "namedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "MutationCallback",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: ArgumentName(
                                                            "callback",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MutationObserver",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "observe",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "target",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MutationObserverInit",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "options",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "disconnect",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "MutationRecord",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "takeRecords",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback,
            identifier: Identifier(
                "MutationCallback",
            ),
            assign: Assign,
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Undefined,
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Sequence(
                                                MayBeNull {
                                                    type_: SequenceType {
                                                        sequence: Sequence,
                                                        generics: Generics {
                                                            open_angle: LessThan,
                                                            body: AttributedType {
                                                                attributes: None,
                                                                type_: Single(
                                                                    Distinguishable(
                                                                        Identifier(
                                                                            MayBeNull {
                                                                                type_: Identifier(
                                                                                    "MutationRecord",
                                                                                ),
                                                                                q_mark: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                            },
                                                            close_angle: GreaterThan,
                                                        },
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: ArgumentName(
                                    "mutations",
                                ),
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "MutationObserver",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: ArgumentName(
                                    "observer",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MutationObserverInit",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "childList",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "attributes",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "characterData",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "subtree",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "attributeOldValue",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "characterDataOldValue",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "attributeFilter",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MutationRecord",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "addedNodes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "removedNodes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "previousSibling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "nextSibling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "attributeName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "attributeNamespace",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "oldValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Node",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "ELEMENT_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "ATTRIBUTE_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "TEXT_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CDATA_SECTION_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "4",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "ENTITY_REFERENCE_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "5",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "ENTITY_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "6",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "PROCESSING_INSTRUCTION_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "7",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "COMMENT_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "8",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "9",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_TYPE_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "10",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_FRAGMENT_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "11",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "NOTATION_NODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "12",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "nodeType",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "nodeName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "baseURI",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "isConnected",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Document",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "ownerDocument",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getRootNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "GetRootNodeOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "options",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "parentNode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "parentElement",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "hasChildNodes",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "childNodes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "firstChild",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "lastChild",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "previousSibling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "nextSibling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "nodeValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "textContent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "normalize",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "cloneNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "deep",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "isEqualNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "otherNode",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "isSameNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "otherNode",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_POSITION_DISCONNECTED",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x01",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_POSITION_PRECEDING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x02",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_POSITION_FOLLOWING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x04",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_POSITION_CONTAINS",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x08",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_POSITION_CONTAINED_BY",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x10",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x20",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Integer(
                                        MayBeNull {
                                            type_: Short(
                                                ShortType {
                                                    unsigned: Some(
                                                        Unsigned,
                                                    ),
                                                    short: Short,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "compareDocumentPosition",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "other",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "contains",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "other",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "lookupPrefix",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "lookupNamespaceURI",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "prefix",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "isDefaultNamespace",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "insertBefore",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "child",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "appendChild",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "replaceChild",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "child",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "removeChild",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "child",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "GetRootNodeOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "composed",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Document",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Node",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMImplementation",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "implementation",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "URL",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "documentURI",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "origin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "compatMode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "characterSet",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "charset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "inputEncoding",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "contentType",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DocumentType",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "doctype",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "documentElement",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLCollection",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getElementsByTagName",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLCollection",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getElementsByTagNameNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLCollection",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getElementsByClassName",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "classNames",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createElement",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: DOMString(
                                                                                    MayBeNull {
                                                                                        type_: DOMString,
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "ElementCreationOptions",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "options",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createElementNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: DOMString(
                                                                                    MayBeNull {
                                                                                        type_: DOMString,
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "ElementCreationOptions",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "options",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DocumentFragment",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createDocumentFragment",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Text",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createTextNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "CDATASection",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createCDATASection",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Comment",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createComment",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "ProcessingInstruction",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createProcessingInstruction",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "target",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "importNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "deep",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "adoptNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createAttribute",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createAttributeNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Event",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createEvent",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "interface",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Range",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createRange",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "NodeIterator",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createNodeIterator",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "root",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "whatToShow",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Hex(
                                                                HexLit(
                                                                    "0xFFFFFFFF",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "NodeFilter",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "filter",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "TreeWalker",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createTreeWalker",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "root",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "whatToShow",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Hex(
                                                                HexLit(
                                                                    "0xFFFFFFFF",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "NodeFilter",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "filter",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "XMLDocument",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Document",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ElementCreationOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "is",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DOMImplementation",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DocumentType",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createDocumentType",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "publicId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "systemId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "XMLDocument",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createDocument",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: Some(
                                                    Bracketed {
                                                        open_bracket: OpenBracket,
                                                        body: Punctuated {
                                                            list: [
                                                                Ident(
                                                                    ExtendedAttributeIdent {
                                                                        lhs_identifier: Identifier(
                                                                            "TreatNullAs",
                                                                        ),
                                                                        assign: Assign,
                                                                        rhs: Identifier(
                                                                            "EmptyString",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                            separator: Comma,
                                                        },
                                                        close_bracket: CloseBracket,
                                                    },
                                                ),
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "DocumentType",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "doctype",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Document",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "createHTMLDocument",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "title",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "hasFeature",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DocumentType",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Node",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "publicId",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "systemId",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DocumentFragment",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Node",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ShadowRoot",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "DocumentFragment",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ShadowRootMode",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "mode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "host",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "ShadowRootMode",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "open",
                        ),
                        StringLit(
                            "closed",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Element",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Node",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "namespaceURI",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "prefix",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "localName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "tagName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "id",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "className",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "value",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMTokenList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "classList",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unscopable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "slot",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "hasAttributes",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NamedNodeMap",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "attributes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                DOMString(
                                                                    MayBeNull {
                                                                        type_: DOMString,
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getAttributeNames",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getAttribute",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getAttributeNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setAttribute",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "value",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setAttributeNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "value",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "removeAttribute",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "removeAttributeNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "hasAttribute",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "hasAttributeNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getAttributeNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getAttributeNodeNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setAttributeNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Attr",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "attr",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setAttributeNodeNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Attr",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "attr",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "removeAttributeNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Attr",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "attr",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "ShadowRoot",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "attachShadow",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ShadowRootInit",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "init",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ShadowRoot",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "shadowRoot",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "closest",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "selectors",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "matches",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "selectors",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "webkitMatchesSelector",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "selectors",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLCollection",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getElementsByTagName",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLCollection",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getElementsByTagNameNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLCollection",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getElementsByClassName",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "classNames",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "insertAdjacentElement",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "where",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Element",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "element",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "insertAdjacentText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "where",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ShadowRootInit",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: Some(
                            Required,
                        ),
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ShadowRootMode",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "mode",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "NamedNodeMap",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getNamedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "getNamedItemNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setNamedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Attr",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "attr",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setNamedItemNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Attr",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "attr",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "removeNamedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "qualifiedName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Attr",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "removeNamedItemNS",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "namespace",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "localName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Attr",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Node",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "namespaceURI",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "prefix",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "localName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "ownerElement",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "specified",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CharacterData",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Node",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "data",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "substringData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "count",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "appendData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "insertData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "deleteData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "count",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "replaceData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "count",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: ArgumentName(
                                                            "data",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: String(
                                                                    StringLit(
                                                                        "",
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Text",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "CharacterData",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Text",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "splitText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "wholeText",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CDATASection",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Text",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ProcessingInstruction",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "CharacterData",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: ArgumentName(
                                                            "data",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: String(
                                                                    StringLit(
                                                                        "",
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Comment",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "CharacterData",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "AbstractRange",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "startContainer",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "startOffset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "endContainer",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "endOffset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "collapsed",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "StaticRange",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "AbstractRange",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Range",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "AbstractRange",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "commonAncestorContainer",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setStart",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setEnd",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setStartBefore",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setStartAfter",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setEndBefore",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "setEndAfter",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "collapse",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "toStart",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "selectNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "selectNodeContents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "START_TO_START",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "START_TO_END",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "END_TO_END",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "END_TO_START",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Integer(
                                        MayBeNull {
                                            type_: Short(
                                                ShortType {
                                                    unsigned: None,
                                                    short: Short,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "compareBoundaryPoints",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Short(
                                                                        ShortType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            short: Short,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "how",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Range",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "sourceRange",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "deleteContents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DocumentFragment",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "extractContents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DocumentFragment",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "cloneContents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "insertNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "surroundContents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "newParent",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Range",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "cloneRange",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "detach",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "isPointInRange",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Integer(
                                        MayBeNull {
                                            type_: Short(
                                                ShortType {
                                                    unsigned: None,
                                                    short: Short,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "comparePoint",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "intersectsNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Stringifier(
                        StringifierMember {
                            attributes: None,
                            stringifier: Stringifier,
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "NodeIterator",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "root",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "referenceNode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "pointerBeforeReferenceNode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "whatToShow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeFilter",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "filter",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "nextNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "previousNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "detach",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TreeWalker",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "root",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "whatToShow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeFilter",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "filter",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Node",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "currentNode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "parentNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "firstChild",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "lastChild",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "previousSibling",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "nextSibling",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "previousNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Node",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "nextNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    CallbackInterface(
        CallbackInterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            callback: Callback,
            interface: Interface,
            identifier: Identifier(
                "NodeFilter",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "FILTER_ACCEPT",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "FILTER_REJECT",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "FILTER_SKIP",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_ALL",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0xFFFFFFFF",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_ELEMENT",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_ATTRIBUTE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_TEXT",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x4",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_CDATA_SECTION",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x8",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_ENTITY_REFERENCE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x10",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_ENTITY",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x20",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_PROCESSING_INSTRUCTION",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x40",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_COMMENT",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x80",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_DOCUMENT",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x100",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_DOCUMENT_TYPE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x200",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_DOCUMENT_FRAGMENT",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x400",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Long(
                                        LongType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            long: Long,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "SHOW_NOTATION",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Hex(
                                    HexLit(
                                        "0x800",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Integer(
                                        MayBeNull {
                                            type_: Short(
                                                ShortType {
                                                    unsigned: Some(
                                                        Unsigned,
                                                    ),
                                                    short: Short,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "acceptNode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "node",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DOMTokenList",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "contains",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "token",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "add",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Single(
                                                    Distinguishable(
                                                        DOMString(
                                                            MayBeNull {
                                                                type_: DOMString,
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "tokens",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "remove",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Single(
                                                    Distinguishable(
                                                        DOMString(
                                                            MayBeNull {
                                                                type_: DOMString,
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "tokens",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "toggle",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "token",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "force",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "replace",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "token",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "newToken",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                OperationName(
                                    "supports",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: ArgumentName(
                                                    "token",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: Some(
                                Stringifier(
                                    Stringifier,
                                ),
                            ),
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: AttributeName(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Iterable(
                        Single(
                            SingleTypedIterable {
                                attributes: None,
                                iterable: Iterable,
                                generics: Generics {
                                    open_angle: LessThan,
                                    body: AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            Distinguishable(
                                                DOMString(
                                                    MayBeNull {
                                                        type_: DOMString,
                                                        q_mark: None,
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    close_angle: GreaterThan,
                                },
                                semi_colon: SemiColon,
                            },
                        ),
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
]
