[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "Union",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Union(
                                    MayBeNull {
                                        type_: Parenthesized {
                                            open_paren: OpenParen(
                                                "(",
                                            ),
                                            body: Punctuated {
                                                list: [
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Float(
                                                                        FloatType {
                                                                            unrestricted: None,
                                                                            float: Float(
                                                                                "float",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen(
                                                                    "(",
                                                                ),
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "Date",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "Event",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: PhantomData<weedle::lexer::keywords::Or>,
                                                                },
                                                                close_paren: CloseParen(
                                                                    ")",
                                                                ),
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                    Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen(
                                                                    "(",
                                                                ),
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "Node",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: DOMString(
                                                                                    MayBeNull {
                                                                                        type_: DOMString(
                                                                                            "DOMString",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: PhantomData<weedle::lexer::keywords::Or>,
                                                                },
                                                                close_paren: CloseParen(
                                                                    ")",
                                                                ),
                                                            },
                                                            q_mark: Some(
                                                                QuestionMark(
                                                                    "?",
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                separator: PhantomData<weedle::lexer::keywords::Or>,
                                            },
                                            close_paren: CloseParen(
                                                ")",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            },
                            identifier: Identifier(
                                Identifier(
                                    "test",
                                ),
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Union(
                                    MayBeNull {
                                        type_: Parenthesized {
                                            open_paren: OpenParen(
                                                "(",
                                            ),
                                            body: Punctuated {
                                                list: [
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: Some(
                                                                Bracketed {
                                                                    open_bracket: OpenBracket(
                                                                        "[",
                                                                    ),
                                                                    body: Punctuated {
                                                                        list: [
                                                                            NoArgs(
                                                                                ExtendedAttributeNoArgs(
                                                                                    Identifier(
                                                                                        "EnforceRange",
                                                                                    ),
                                                                                ),
                                                                            ),
                                                                        ],
                                                                        separator: PhantomData<weedle::lexer::keywords::Comma>,
                                                                    },
                                                                    close_bracket: CloseBracket(
                                                                        "]",
                                                                    ),
                                                                },
                                                            ),
                                                            type_: Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long(
                                                                                "long",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Date",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                separator: PhantomData<weedle::lexer::keywords::Or>,
                                            },
                                            close_paren: CloseParen(
                                                ")",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            },
                            identifier: Identifier(
                                Identifier(
                                    "test2",
                                ),
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
]
