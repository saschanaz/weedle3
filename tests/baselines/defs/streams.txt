[
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStream",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Object(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Object,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "underlyingSource",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "QueuingStrategy",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "strategy",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                    ],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Boolean,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "locked",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "cancel",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "reason",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Identifier(
                                                    "ReadableStreamReader",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getReader",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "ReadableStreamGetReaderOptions",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "options",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Identifier(
                                                    "ReadableStream",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "pipeThrough",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "ReadableWritablePair",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "transform",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "StreamPipeOptions",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "options",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                    ],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "pipeTo",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "WritableStream",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "destination",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "StreamPipeOptions",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "options",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                    ],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Token {
                                                    trivia: "\n  ",
                                                    value: Sequence,
                                                },
                                                generics: Generics {
                                                    open_angle: Token {
                                                        trivia: "",
                                                        value: LessThan,
                                                    },
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Token {
                                                                            trivia: "",
                                                                            value: Identifier(
                                                                                "ReadableStream",
                                                                            ),
                                                                        },
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: Token {
                                                        trivia: "",
                                                        value: GreaterThan,
                                                    },
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "tee",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    AsyncIterable(
                        Single(
                            SingleTypedAsyncIterable {
                                attributes: None,
                                async_iterable: (
                                    Token {
                                        trivia: "\n\n  ",
                                        value: Async,
                                    },
                                    Token {
                                        trivia: " ",
                                        value: Iterable,
                                    },
                                ),
                                generics: Generics {
                                    open_angle: Token {
                                        trivia: "",
                                        value: LessThan,
                                    },
                                    body: AttributedType {
                                        attributes: None,
                                        type_: Single(
                                            Any(
                                                Token {
                                                    trivia: "",
                                                    value: Any,
                                                },
                                            ),
                                        ),
                                    },
                                    close_angle: Token {
                                        trivia: "",
                                        value: GreaterThan,
                                    },
                                },
                                args: Some(
                                    Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Token {
                                                                trivia: "",
                                                                value: Optional,
                                                            },
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Token {
                                                                                trivia: " ",
                                                                                value: Identifier(
                                                                                    "ReadableStreamIteratorOptions",
                                                                                ),
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Token {
                                                            trivia: " ",
                                                            value: Identifier(
                                                                "options",
                                                            ),
                                                        },
                                                        default: Some(
                                                            Default {
                                                                assign: Token {
                                                                    trivia: " ",
                                                                    value: Assign,
                                                                },
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: Token {
                                                                            trivia: " ",
                                                                            value: OpenBrace,
                                                                        },
                                                                        close_brace: Token {
                                                                            trivia: "",
                                                                            value: CloseBrace,
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: [],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                ),
                                semi_colon: Token {
                                    trivia: "",
                                    value: SemiColon,
                                },
                            },
                        ),
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Token {
                trivia: "\n\n",
                value: Typedef,
            },
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: Token {
                                trivia: " ",
                                value: OpenParen,
                            },
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "ReadableStreamDefaultReader",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: " ",
                                                        value: Identifier(
                                                            "ReadableStreamBYOBReader",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: [
                                    Token {
                                        trivia: " ",
                                        value: Or,
                                    },
                                ],
                            },
                            close_paren: Token {
                                trivia: "",
                                value: CloseParen,
                            },
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamReader",
                ),
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Token {
                trivia: "\n\n",
                value: Enum,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamReaderMode",
                ),
            },
            values: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: PunctuatedNonEmpty {
                    list: [
                        Token {
                            trivia: " ",
                            value: StringLit(
                                "byob",
                            ),
                        },
                    ],
                    separator: [],
                },
                close_brace: Token {
                    trivia: " ",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamGetReaderOptions",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "ReadableStreamReaderMode",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "mode",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamIteratorOptions",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "preventCancel",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            false,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableWritablePair",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: Some(
                            Token {
                                trivia: "\n  ",
                                value: Required,
                            },
                        ),
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: " ",
                                            value: Identifier(
                                                "ReadableStream",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "readable",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: Some(
                            Token {
                                trivia: "\n  ",
                                value: Required,
                            },
                        ),
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: " ",
                                            value: Identifier(
                                                "WritableStream",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "writable",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "StreamPipeOptions",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "preventClose",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            false,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "preventAbort",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            false,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "preventCancel",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            false,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "AbortSignal",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "signal",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSource",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "UnderlyingSourceStartCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "start",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "UnderlyingSourcePullCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "pull",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "UnderlyingSourceCancelCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "cancel",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "ReadableStreamType",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "type",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: Token {
                                    trivia: "\n  ",
                                    value: OpenBracket,
                                },
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "EnforceRange",
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_bracket: Token {
                                    trivia: "",
                                    value: CloseBracket,
                                },
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: LongLong(
                                            LongLongType {
                                                unsigned: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Unsigned,
                                                    },
                                                ),
                                                long_long: (
                                                    Token {
                                                        trivia: " ",
                                                        value: Long,
                                                    },
                                                    Token {
                                                        trivia: " ",
                                                        value: Long,
                                                    },
                                                ),
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "autoAllocateChunkSize",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Token {
                trivia: "\n\n",
                value: Typedef,
            },
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: Token {
                                trivia: " ",
                                value: OpenParen,
                            },
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "ReadableStreamDefaultController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: " ",
                                                        value: Identifier(
                                                            "ReadableByteStreamController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: [
                                    Token {
                                        trivia: " ",
                                        value: Or,
                                    },
                                ],
                            },
                            close_paren: Token {
                                trivia: "",
                                value: CloseParen,
                            },
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamController",
                ),
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSourceStartCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Any(
                    Token {
                        trivia: " ",
                        value: Any,
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "ReadableStreamController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "controller",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSourcePullCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Promise(
                    PromiseType {
                        promise: Token {
                            trivia: " ",
                            value: Promise,
                        },
                        generics: Generics {
                            open_angle: Token {
                                trivia: "",
                                value: LessThan,
                            },
                            body: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            close_angle: Token {
                                trivia: "",
                                value: GreaterThan,
                            },
                        },
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "ReadableStreamController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "controller",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSourceCancelCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Promise(
                    PromiseType {
                        promise: Token {
                            trivia: " ",
                            value: Promise,
                        },
                        generics: Generics {
                            open_angle: Token {
                                trivia: "",
                                value: LessThan,
                            },
                            body: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            close_angle: Token {
                                trivia: "",
                                value: GreaterThan,
                            },
                        },
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Token {
                                        trivia: "",
                                        value: Optional,
                                    },
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Token {
                                                trivia: " ",
                                                value: Any,
                                            },
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "reason",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Token {
                trivia: "\n\n",
                value: Enum,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamType",
                ),
            },
            values: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: PunctuatedNonEmpty {
                    list: [
                        Token {
                            trivia: " ",
                            value: StringLit(
                                "bytes",
                            ),
                        },
                    ],
                    separator: [],
                },
                close_brace: Token {
                    trivia: " ",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamDefaultReader",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "ReadableStream",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "stream",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Promise(
                                        PromiseType {
                                            promise: Token {
                                                trivia: " ",
                                                value: Promise,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: Single(
                                                    Distinguishable(
                                                        Undefined(
                                                            MayBeNull {
                                                                type_: Token {
                                                                    trivia: "",
                                                                    value: Undefined,
                                                                },
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "closed",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "cancel",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "reason",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Any(
                                                    Token {
                                                        trivia: "",
                                                        value: Any,
                                                    },
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "read",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "releaseLock",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamBYOBReader",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "ReadableStream",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "stream",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Promise(
                                        PromiseType {
                                            promise: Token {
                                                trivia: " ",
                                                value: Promise,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: Single(
                                                    Distinguishable(
                                                        Undefined(
                                                            MayBeNull {
                                                                type_: Token {
                                                                    trivia: "",
                                                                    value: Undefined,
                                                                },
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "closed",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "cancel",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "reason",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Any(
                                                    Token {
                                                        trivia: "",
                                                        value: Any,
                                                    },
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "read",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "ArrayBufferView",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "view",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "releaseLock",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamDefaultController",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Token {
                                                                trivia: " ",
                                                                value: Unrestricted,
                                                            },
                                                        ),
                                                        double: Token {
                                                            trivia: " ",
                                                            value: Double,
                                                        },
                                                    },
                                                ),
                                                q_mark: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: QMark,
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "desiredSize",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "close",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "enqueue",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "chunk",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "error",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "e",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableByteStreamController",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "ReadableStreamBYOBRequest",
                                                    ),
                                                },
                                                q_mark: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: QMark,
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "byobRequest",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Token {
                                                                trivia: " ",
                                                                value: Unrestricted,
                                                            },
                                                        ),
                                                        double: Token {
                                                            trivia: " ",
                                                            value: Double,
                                                        },
                                                    },
                                                ),
                                                q_mark: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: QMark,
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "desiredSize",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "close",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "enqueue",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "ArrayBufferView",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "chunk",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "error",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "e",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ReadableStreamBYOBRequest",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "ArrayBufferView",
                                                    ),
                                                },
                                                q_mark: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: QMark,
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "view",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "respond",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: Some(
                                                    Bracketed {
                                                        open_bracket: Token {
                                                            trivia: "",
                                                            value: OpenBracket,
                                                        },
                                                        body: Punctuated {
                                                            list: [
                                                                NoArgs(
                                                                    ExtendedAttributeNoArgs(
                                                                        Token {
                                                                            trivia: "",
                                                                            value: Identifier(
                                                                                "EnforceRange",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            separator: [],
                                                        },
                                                        close_bracket: Token {
                                                            trivia: "",
                                                            value: CloseBracket,
                                                        },
                                                    },
                                                ),
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: LongLong(
                                                                        LongLongType {
                                                                            unsigned: Some(
                                                                                Token {
                                                                                    trivia: " ",
                                                                                    value: Unsigned,
                                                                                },
                                                                            ),
                                                                            long_long: (
                                                                                Token {
                                                                                    trivia: " ",
                                                                                    value: Long,
                                                                                },
                                                                                Token {
                                                                                    trivia: " ",
                                                                                    value: Long,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "bytesWritten",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "respondWithNewView",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "ArrayBufferView",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "view",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "WritableStream",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Object(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Object,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "underlyingSink",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "QueuingStrategy",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "strategy",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                    ],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Boolean,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "locked",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "abort",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "reason",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "close",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Identifier(
                                                    "WritableStreamDefaultWriter",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getWriter",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSink",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "UnderlyingSinkStartCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "start",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "UnderlyingSinkWriteCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "write",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "UnderlyingSinkCloseCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "close",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "UnderlyingSinkAbortCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "abort",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Token {
                                    trivia: "\n  ",
                                    value: Any,
                                },
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "type",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSinkStartCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Any(
                    Token {
                        trivia: " ",
                        value: Any,
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "WritableStreamDefaultController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "controller",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSinkWriteCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Promise(
                    PromiseType {
                        promise: Token {
                            trivia: " ",
                            value: Promise,
                        },
                        generics: Generics {
                            open_angle: Token {
                                trivia: "",
                                value: LessThan,
                            },
                            body: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            close_angle: Token {
                                trivia: "",
                                value: GreaterThan,
                            },
                        },
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "WritableStreamDefaultController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "controller",
                                    ),
                                },
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Token {
                                        trivia: " ",
                                        value: Optional,
                                    },
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Token {
                                                trivia: " ",
                                                value: Any,
                                            },
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "chunk",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [
                        Token {
                            trivia: "",
                            value: Comma,
                        },
                    ],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSinkCloseCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Promise(
                    PromiseType {
                        promise: Token {
                            trivia: " ",
                            value: Promise,
                        },
                        generics: Generics {
                            open_angle: Token {
                                trivia: "",
                                value: LessThan,
                            },
                            body: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            close_angle: Token {
                                trivia: "",
                                value: GreaterThan,
                            },
                        },
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "UnderlyingSinkAbortCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Promise(
                    PromiseType {
                        promise: Token {
                            trivia: " ",
                            value: Promise,
                        },
                        generics: Generics {
                            open_angle: Token {
                                trivia: "",
                                value: LessThan,
                            },
                            body: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            close_angle: Token {
                                trivia: "",
                                value: GreaterThan,
                            },
                        },
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Token {
                                        trivia: "",
                                        value: Optional,
                                    },
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Token {
                                                trivia: " ",
                                                value: Any,
                                            },
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "reason",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "WritableStreamDefaultWriter",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "WritableStream",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "stream",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Promise(
                                        PromiseType {
                                            promise: Token {
                                                trivia: " ",
                                                value: Promise,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: Single(
                                                    Distinguishable(
                                                        Undefined(
                                                            MayBeNull {
                                                                type_: Token {
                                                                    trivia: "",
                                                                    value: Undefined,
                                                                },
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "closed",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Token {
                                                                trivia: " ",
                                                                value: Unrestricted,
                                                            },
                                                        ),
                                                        double: Token {
                                                            trivia: " ",
                                                            value: Double,
                                                        },
                                                    },
                                                ),
                                                q_mark: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: QMark,
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "desiredSize",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Promise(
                                        PromiseType {
                                            promise: Token {
                                                trivia: " ",
                                                value: Promise,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: Single(
                                                    Distinguishable(
                                                        Undefined(
                                                            MayBeNull {
                                                                type_: Token {
                                                                    trivia: "",
                                                                    value: Undefined,
                                                                },
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "ready",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "abort",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "reason",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "close",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "releaseLock",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n  ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "write",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "chunk",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "WritableStreamDefaultController",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "error",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "e",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "TransformStream",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Object(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Object,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "transformer",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "\n              ",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "QueuingStrategy",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "writableStrategy",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "\n              ",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "QueuingStrategy",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "readableStrategy",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                    ],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "ReadableStream",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "readable",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "WritableStream",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "writable",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Transformer",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "TransformerStartCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "start",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "TransformerTransformCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "transform",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "TransformerFlushCallback",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "flush",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Token {
                                    trivia: "\n  ",
                                    value: Any,
                                },
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "readableType",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Token {
                                    trivia: "\n  ",
                                    value: Any,
                                },
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "writableType",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "TransformerStartCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Any(
                    Token {
                        trivia: " ",
                        value: Any,
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "TransformStreamDefaultController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "controller",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "TransformerFlushCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Promise(
                    PromiseType {
                        promise: Token {
                            trivia: " ",
                            value: Promise,
                        },
                        generics: Generics {
                            open_angle: Token {
                                trivia: "",
                                value: LessThan,
                            },
                            body: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            close_angle: Token {
                                trivia: "",
                                value: GreaterThan,
                            },
                        },
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "TransformStreamDefaultController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "controller",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "TransformerTransformCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Promise(
                    PromiseType {
                        promise: Token {
                            trivia: " ",
                            value: Promise,
                        },
                        generics: Generics {
                            open_angle: Token {
                                trivia: "",
                                value: LessThan,
                            },
                            body: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            close_angle: Token {
                                trivia: "",
                                value: GreaterThan,
                            },
                        },
                    },
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "TransformStreamDefaultController",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "controller",
                                    ),
                                },
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Token {
                                        trivia: " ",
                                        value: Optional,
                                    },
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Token {
                                                trivia: " ",
                                                value: Any,
                                            },
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "chunk",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [
                        Token {
                            trivia: "",
                            value: Comma,
                        },
                    ],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "TransformStreamDefaultController",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Token {
                                                                trivia: " ",
                                                                value: Unrestricted,
                                                            },
                                                        ),
                                                        double: Token {
                                                            trivia: " ",
                                                            value: Double,
                                                        },
                                                    },
                                                ),
                                                q_mark: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: QMark,
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "desiredSize",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "enqueue",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "chunk",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "error",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Token {
                                                                trivia: " ",
                                                                value: Any,
                                                            },
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "reason",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "terminate",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "QueuingStrategy",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: Some(
                                                    Token {
                                                        trivia: "\n  ",
                                                        value: Unrestricted,
                                                    },
                                                ),
                                                double: Token {
                                                    trivia: " ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "highWaterMark",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n  ",
                                            value: Identifier(
                                                "QueuingStrategySize",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "size",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "QueuingStrategySize",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Distinguishable(
                    FloatingPoint(
                        MayBeNull {
                            type_: Double(
                                DoubleType {
                                    unrestricted: Some(
                                        Token {
                                            trivia: " ",
                                            value: Unrestricted,
                                        },
                                    ),
                                    double: Token {
                                        trivia: " ",
                                        value: Double,
                                    },
                                },
                            ),
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Token {
                                        trivia: "",
                                        value: Optional,
                                    },
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Token {
                                                trivia: " ",
                                                value: Any,
                                            },
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "chunk",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "QueuingStrategyInit",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: Some(
                            Token {
                                trivia: "\n  ",
                                value: Required,
                            },
                        ),
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Unrestricted,
                                                    },
                                                ),
                                                double: Token {
                                                    trivia: " ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "highWaterMark",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ByteLengthQueuingStrategy",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "QueuingStrategyInit",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "init",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Token {
                                                                trivia: " ",
                                                                value: Unrestricted,
                                                            },
                                                        ),
                                                        double: Token {
                                                            trivia: " ",
                                                            value: Double,
                                                        },
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "highWaterMark",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "Function",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "size",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    list: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worker",
                                                    ),
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Worklet",
                                                    ),
                                                },
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "CountQueuingStrategy",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Token {
                                trivia: "\n  ",
                                value: Constructor,
                            },
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "QueuingStrategyInit",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "init",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Token {
                                                                trivia: " ",
                                                                value: Unrestricted,
                                                            },
                                                        ),
                                                        double: Token {
                                                            trivia: " ",
                                                            value: Double,
                                                        },
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "highWaterMark",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n  ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: " ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "Function",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "size",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Eof(
        Token {
            trivia: "\n",
            value: (),
        },
    ),
]
