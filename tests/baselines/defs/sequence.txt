[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Token {
                trivia: "// Extracted from http://dev.w3.org/2006/webapi/WebIDL/ on 2011-05-06\n// edited to remove sequence as attributes, now invalid\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Canvas",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n  ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "drawPolygon",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Token {
                                                                            trivia: "",
                                                                            value: Sequence,
                                                                        },
                                                                        generics: Generics {
                                                                            open_angle: Token {
                                                                                trivia: "",
                                                                                value: LessThan,
                                                                            },
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        FloatingPoint(
                                                                                            MayBeNull {
                                                                                                type_: Float(
                                                                                                    FloatType {
                                                                                                        unrestricted: None,
                                                                                                        float: Token {
                                                                                                            trivia: "",
                                                                                                            value: Float,
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: Token {
                                                                                trivia: "",
                                                                                value: GreaterThan,
                                                                            },
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "coordinates",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Token {
                                                    trivia: "\n  ",
                                                    value: Sequence,
                                                },
                                                generics: Generics {
                                                    open_angle: Token {
                                                        trivia: "",
                                                        value: LessThan,
                                                    },
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                FloatingPoint(
                                                                    MayBeNull {
                                                                        type_: Float(
                                                                            FloatType {
                                                                                unrestricted: None,
                                                                                float: Token {
                                                                                    trivia: "",
                                                                                    value: Float,
                                                                                },
                                                                            },
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: Token {
                                                        trivia: "",
                                                        value: GreaterThan,
                                                    },
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getInflectionPoints",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n  // ...\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Token {
                trivia: "\n\n// Extracted from https://heycam.github.io/webidl/#idl-type-extended-attribute-associated-with on 2017-07-01\n\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "I",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "f1",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Token {
                                                                            trivia: "",
                                                                            value: Sequence,
                                                                        },
                                                                        generics: Generics {
                                                                            open_angle: Token {
                                                                                trivia: "",
                                                                                value: LessThan,
                                                                            },
                                                                            body: AttributedType {
                                                                                attributes: Some(
                                                                                    Bracketed {
                                                                                        open_bracket: Token {
                                                                                            trivia: "",
                                                                                            value: OpenBracket,
                                                                                        },
                                                                                        body: Punctuated {
                                                                                            list: [
                                                                                                NoArgs(
                                                                                                    ExtendedAttributeNoArgs(
                                                                                                        Token {
                                                                                                            trivia: "",
                                                                                                            value: Identifier(
                                                                                                                "XAttr",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                ),
                                                                                            ],
                                                                                            separator: [],
                                                                                        },
                                                                                        close_bracket: Token {
                                                                                            trivia: "",
                                                                                            value: CloseBracket,
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        Integer(
                                                                                            MayBeNull {
                                                                                                type_: Long(
                                                                                                    LongType {
                                                                                                        unsigned: None,
                                                                                                        long: Token {
                                                                                                            trivia: " ",
                                                                                                            value: Long,
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: Token {
                                                                                trivia: "",
                                                                                value: GreaterThan,
                                                                            },
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "arg",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
]
