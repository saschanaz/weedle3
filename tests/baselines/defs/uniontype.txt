[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Token {
                trivia: "",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Union",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Union(
                                    MayBeNull {
                                        type_: Parenthesized {
                                            open_paren: Token {
                                                trivia: " ",
                                                value: OpenParen,
                                            },
                                            body: Punctuated {
                                                list: [
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Float(
                                                                        FloatType {
                                                                            unrestricted: None,
                                                                            float: Token {
                                                                                trivia: "",
                                                                                value: Float,
                                                                            },
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: Token {
                                                                    trivia: " ",
                                                                    value: OpenParen,
                                                                },
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Token {
                                                                                            trivia: "",
                                                                                            value: Identifier(
                                                                                                "Date",
                                                                                            ),
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Token {
                                                                                            trivia: " ",
                                                                                            value: Identifier(
                                                                                                "Event",
                                                                                            ),
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: PhantomData<weedle::term::Token<weedle::term::Or>>,
                                                                },
                                                                close_paren: Token {
                                                                    trivia: "",
                                                                    value: CloseParen,
                                                                },
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                    Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: Token {
                                                                    trivia: " ",
                                                                    value: OpenParen,
                                                                },
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Token {
                                                                                            trivia: "",
                                                                                            value: Identifier(
                                                                                                "Node",
                                                                                            ),
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: DOMString(
                                                                                    MayBeNull {
                                                                                        type_: Token {
                                                                                            trivia: " ",
                                                                                            value: DOMString,
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: PhantomData<weedle::term::Token<weedle::term::Or>>,
                                                                },
                                                                close_paren: Token {
                                                                    trivia: "",
                                                                    value: CloseParen,
                                                                },
                                                            },
                                                            q_mark: Some(
                                                                Token {
                                                                    trivia: "",
                                                                    value: QMark,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                separator: PhantomData<weedle::term::Token<weedle::term::Or>>,
                                            },
                                            close_paren: Token {
                                                trivia: "",
                                                value: CloseParen,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "test",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Union(
                                    MayBeNull {
                                        type_: Parenthesized {
                                            open_paren: Token {
                                                trivia: " ",
                                                value: OpenParen,
                                            },
                                            body: Punctuated {
                                                list: [
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: Some(
                                                                Bracketed {
                                                                    open_bracket: Token {
                                                                        trivia: "",
                                                                        value: OpenBracket,
                                                                    },
                                                                    body: Punctuated {
                                                                        list: [
                                                                            NoArgs(
                                                                                ExtendedAttributeNoArgs(
                                                                                    Token {
                                                                                        trivia: "",
                                                                                        value: Identifier(
                                                                                            "EnforceRange",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ],
                                                                        separator: PhantomData<weedle::term::Token<weedle::term::Comma>>,
                                                                    },
                                                                    close_bracket: Token {
                                                                        trivia: "",
                                                                        value: CloseBracket,
                                                                    },
                                                                },
                                                            ),
                                                            type_: Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Token {
                                                                                trivia: " ",
                                                                                value: Long,
                                                                            },
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "Date",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                separator: PhantomData<weedle::term::Token<weedle::term::Or>>,
                                            },
                                            close_paren: Token {
                                                trivia: "",
                                                value: CloseParen,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "test2",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
]
