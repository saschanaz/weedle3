[
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLAllCollection",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Union(
                                MayBeNull {
                                    type_: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "HTMLCollection",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "Element",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Or,
                                        },
                                        close_paren: CloseParen,
                                    },
                                    q_mark: Some(
                                        QMark,
                                    ),
                                },
                            ),
                            identifier: Some(
                                Identifier(
                                    "namedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Union(
                                MayBeNull {
                                    type_: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "HTMLCollection",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "Element",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Or,
                                        },
                                        close_paren: CloseParen,
                                    },
                                    q_mark: Some(
                                        QMark,
                                    ),
                                },
                            ),
                            identifier: Some(
                                Identifier(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "nameOrIndex",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLFormControlsCollection",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLCollection",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Union(
                                MayBeNull {
                                    type_: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "RadioNodeList",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "Element",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Or,
                                        },
                                        close_paren: CloseParen,
                                    },
                                    q_mark: Some(
                                        QMark,
                                    ),
                                },
                            ),
                            identifier: Some(
                                Identifier(
                                    "namedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "RadioNodeList",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "NodeList",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLOptionsCollection",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLCollection",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: Some(
                                Setter(
                                    Setter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "HTMLOptionElement",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "option",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "add",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "HTMLOptionElement",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "HTMLOptGroupElement",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "element",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "HTMLElement",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Integer(
                                                                                    MayBeNull {
                                                                                        type_: Long(
                                                                                            LongType {
                                                                                                unsigned: None,
                                                                                                long: Long,
                                                                                            },
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: Some(
                                                                QMark,
                                                            ),
                                                        },
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "before",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "remove",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectedIndex",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DOMStringList",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "contains",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "string",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "DocumentReadyState",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "loading",
                        ),
                        StringLit(
                            "interactive",
                        ),
                        StringLit(
                            "complete",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "HTMLScriptElement",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "SVGScriptElement",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "HTMLOrSVGScriptElement",
            ),
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "OverrideBuiltins",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "Document",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "href",
                                                    ),
                                                },
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Location",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "location",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "domain",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "referrer",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cookie",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lastModified",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DocumentReadyState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readyState",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Object(
                                        MayBeNull {
                                            type_: Object,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "title",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dir",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "body",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLHeadElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "head",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "images",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "embeds",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "plugins",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "links",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "forms",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scripts",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "NodeList",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getElementsByName",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "elementName",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLOrSVGScriptElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "currentScript",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Document",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "open",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "replace",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "WindowProxy",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "open",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "features",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "write",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Single(
                                                    Distinguishable(
                                                        DOMString(
                                                            MayBeNull {
                                                                type_: DOMString,
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "text",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "writeln",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Single(
                                                    Distinguishable(
                                                        DOMString(
                                                            MayBeNull {
                                                                type_: DOMString,
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "text",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultView",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "activeElement",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "hasFocus",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "designMode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "execCommand",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "commandId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "showUI",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "value",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "queryCommandEnabled",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "commandId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "queryCommandIndeterm",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "commandId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "queryCommandState",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "commandId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "queryCommandSupported",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "commandId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "queryCommandValue",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "commandId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "LenientThis",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onreadystatechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Document",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "GlobalEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Document",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "DocumentAndElementEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Element",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "title",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lang",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "translate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dir",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hidden",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "click",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "accessKey",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "accessKeyLabel",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "draggable",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "spellcheck",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autocapitalize",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "innerText",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "GlobalEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "DocumentAndElementEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "ElementContentEditable",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLUnknownElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "HTMLOrSVGElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMStringMap",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dataset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "nonce",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "tabIndex",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "focus",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "FocusOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "blur",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "HTMLOrSVGElement",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "SVGElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "HTMLOrSVGElement",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "OverrideBuiltins",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DOMStringMap",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: Some(
                                Setter(
                                    Setter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "value",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: Some(
                                Deleter(
                                    Deleter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLHtmlElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLHeadElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTitleElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "text",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLBaseElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "href",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLLinkElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "href",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "crossOrigin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rel",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "as",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "value",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMTokenList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "relList",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "media",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "integrity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hreflang",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "value",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMTokenList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "sizes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "referrerPolicy",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLLinkElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "LinkStyle",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLMetaElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "httpEquiv",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "content",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLStyleElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "media",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLStyleElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "LinkStyle",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLBodyElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLBodyElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "WindowEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLHeadingElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLParagraphElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLHRElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLPreElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLQuoteElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cite",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLOListElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "reversed",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "start",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLUListElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLMenuElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLLIElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLDListElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLDivElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLAnchorElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "download",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ping",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rel",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "value",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMTokenList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "relList",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hreflang",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "text",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "referrerPolicy",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLAnchorElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "HTMLHyperlinkElementUtils",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLDataElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTimeElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dateTime",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLSpanElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLBRElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "HTMLHyperlinkElementUtils",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: Some(
                                Stringifier,
                            ),
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "href",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "origin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "protocol",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "username",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "password",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "host",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hostname",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "port",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "pathname",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "search",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hash",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLModElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cite",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dateTime",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLPictureElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLSourceElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "srcset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "sizes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "media",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                            NamedArgList(
                                ExtendedAttributeNamedArgList {
                                    lhs_identifier: Identifier(
                                        "NamedConstructor",
                                    ),
                                    assign: Assign,
                                    rhs_identifier: Identifier(
                                        "Image",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: Long(
                                                                                LongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long: Long,
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "width",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: Long(
                                                                                LongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long: Long,
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "height",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLImageElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "alt",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "srcset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "sizes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "crossOrigin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "useMap",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "isMap",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "naturalWidth",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "naturalHeight",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "complete",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "currentSrc",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "referrerPolicy",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "decoding",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Undefined,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "decode",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLIFrameElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "srcdoc",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "value",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMTokenList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "sandbox",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "allowFullscreen",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "allowPaymentRequest",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "allowUserMedia",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "referrerPolicy",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Document",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "contentDocument",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "contentWindow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Document",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getSVGDocument",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLEmbedElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Document",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getSVGDocument",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLObjectElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "data",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "typeMustMatch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "useMap",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Document",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "contentDocument",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "contentWindow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Document",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getSVGDocument",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "willValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ValidityState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validationMessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setCustomValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "error",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLParamElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLVideoElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLMediaElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "videoWidth",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "videoHeight",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "poster",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "playsInline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                            NamedArgList(
                                ExtendedAttributeNamedArgList {
                                    lhs_identifier: Identifier(
                                        "NamedConstructor",
                                    ),
                                    assign: Assign,
                                    rhs_identifier: Identifier(
                                        "Audio",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "src",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLAudioElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLMediaElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTrackElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "kind",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "srclang",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "default",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "NONE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "LOADING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "LOADED",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "ERROR",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readyState",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TextTrack",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "track",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "CanPlayTypeResult",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "",
                        ),
                        StringLit(
                            "maybe",
                        ),
                        StringLit(
                            "probably",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "MediaStream",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "MediaSource",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "Blob",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "MediaProvider",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLMediaElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MediaError",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "error",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MediaProvider",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "srcObject",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "currentSrc",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "crossOrigin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "NETWORK_EMPTY",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "NETWORK_IDLE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "NETWORK_LOADING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "NETWORK_NO_SOURCE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "networkState",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "preload",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TimeRanges",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "buffered",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "load",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "CanPlayTypeResult",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "canPlayType",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "HAVE_NOTHING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "HAVE_METADATA",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "HAVE_CURRENT_DATA",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "HAVE_FUTURE_DATA",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "HAVE_ENOUGH_DATA",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "4",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readyState",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "seeking",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "currentTime",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "fastSeek",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "time",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "duration",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Object(
                                        MayBeNull {
                                            type_: Object,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getStartDate",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "paused",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultPlaybackRate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "playbackRate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TimeRanges",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "played",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TimeRanges",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "seekable",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ended",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autoplay",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "loop",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Undefined,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "play",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "pause",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "controls",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "volume",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "muted",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultMuted",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "AudioTrackList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "audioTracks",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "VideoTrackList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "videoTracks",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TextTrackList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "textTracks",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "TextTrack",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "addTextTrack",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "TextTrackKind",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "kind",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "label",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "language",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MediaError",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "MEDIA_ERR_ABORTED",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "MEDIA_ERR_NETWORK",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "MEDIA_ERR_DECODE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "MEDIA_ERR_SRC_NOT_SUPPORTED",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "4",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "code",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "message",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "AudioTrackList",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "AudioTrack",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "AudioTrack",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getTrackById",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "id",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onchange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onaddtrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onremovetrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "AudioTrack",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "id",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "kind",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "language",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "enabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "VideoTrackList",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "VideoTrack",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "VideoTrack",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getTrackById",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "id",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectedIndex",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onchange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onaddtrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onremovetrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "VideoTrack",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "id",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "kind",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "language",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selected",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TextTrackList",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "TextTrack",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "TextTrack",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getTrackById",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "id",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onchange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onaddtrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onremovetrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "TextTrackMode",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "disabled",
                        ),
                        StringLit(
                            "hidden",
                        ),
                        StringLit(
                            "showing",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "TextTrackKind",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "subtitles",
                        ),
                        StringLit(
                            "captions",
                        ),
                        StringLit(
                            "descriptions",
                        ),
                        StringLit(
                            "chapters",
                        ),
                        StringLit(
                            "metadata",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TextTrack",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TextTrackKind",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "kind",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "language",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "id",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "inBandMetadataTrackDispatchType",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TextTrackMode",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "mode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TextTrackCueList",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cues",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TextTrackCueList",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "activeCues",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "addCue",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "TextTrackCue",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cue",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "removeCue",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "TextTrackCue",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cue",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncuechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TextTrackCueList",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "TextTrackCue",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "TextTrackCue",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getCueById",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "id",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TextTrackCue",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "TextTrack",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "track",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "id",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "startTime",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "endTime",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "pauseOnExit",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onenter",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onexit",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TimeRanges",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    FloatingPoint(
                                        MayBeNull {
                                            type_: Double(
                                                DoubleType {
                                                    unrestricted: None,
                                                    double: Double,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "start",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    FloatingPoint(
                                        MayBeNull {
                                            type_: Double(
                                                DoubleType {
                                                    unrestricted: None,
                                                    double: Double,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "end",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "TrackEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TrackEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Union(
                                    MayBeNull {
                                        type_: Parenthesized {
                                            open_paren: OpenParen,
                                            body: Punctuated {
                                                list: [
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "VideoTrack",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "AudioTrack",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "TextTrack",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                separator: Or,
                                            },
                                            close_paren: CloseParen,
                                        },
                                        q_mark: Some(
                                            QMark,
                                        ),
                                    },
                                ),
                            },
                            identifier: Identifier(
                                "track",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "TrackEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: OpenParen,
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "VideoTrack",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "AudioTrack",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "TextTrack",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Or,
                                    },
                                    close_paren: CloseParen,
                                },
                                q_mark: Some(
                                    QMark,
                                ),
                            },
                        ),
                        identifier: Identifier(
                            "track",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLMapElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "areas",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLAreaElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "alt",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "coords",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "shape",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "download",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ping",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rel",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "value",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMTokenList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "relList",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "referrerPolicy",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLAreaElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "HTMLHyperlinkElementUtils",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTableElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLTableCaptionElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "caption",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLTableCaptionElement",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createCaption",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "deleteCaption",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLTableSectionElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "tHead",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLTableSectionElement",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createTHead",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "deleteTHead",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLTableSectionElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "tFoot",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLTableSectionElement",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createTFoot",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "deleteTFoot",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "tBodies",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLTableSectionElement",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createTBody",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rows",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLTableRowElement",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "insertRow",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Dec(
                                                                DecLit(
                                                                    "-1",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "deleteRow",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTableCaptionElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTableColElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "span",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTableSectionElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rows",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLTableRowElement",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "insertRow",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Dec(
                                                                DecLit(
                                                                    "-1",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "deleteRow",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTableRowElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rowIndex",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "sectionRowIndex",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cells",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLTableCellElement",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "insertCell",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Dec(
                                                                DecLit(
                                                                    "-1",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "deleteCell",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTableCellElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "colSpan",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rowSpan",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "headers",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cellIndex",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scope",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "abbr",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "OverrideBuiltins",
                                    ),
                                ),
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLFormElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "acceptCharset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "action",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autocomplete",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "enctype",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "encoding",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "method",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "noValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormControlsCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "elements",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Union(
                                MayBeNull {
                                    type_: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "RadioNodeList",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                                Single(
                                                    AttributedNonAnyType {
                                                        attributes: None,
                                                        type_: Identifier(
                                                            MayBeNull {
                                                                type_: Identifier(
                                                                    "Element",
                                                                ),
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Or,
                                        },
                                        close_paren: CloseParen,
                                    },
                                    q_mark: None,
                                },
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "submit",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reset",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLLabelElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "htmlFor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "control",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLInputElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "accept",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "alt",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autocomplete",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autofocus",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultChecked",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "checked",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dirName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "disabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "FileList",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "files",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formAction",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formEnctype",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formMethod",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formNoValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formTarget",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "indeterminate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "list",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "max",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "maxLength",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "min",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "minLength",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "multiple",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "pattern",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "placeholder",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readOnly",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "required",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "size",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "step",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Object(
                                            MayBeNull {
                                                type_: Object,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "valueAsDate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "valueAsNumber",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "stepUp",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "n",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Dec(
                                                                DecLit(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "stepDown",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "n",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Dec(
                                                                DecLit(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "willValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ValidityState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validationMessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setCustomValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "error",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "labels",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "select",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectionStart",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectionEnd",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectionDirection",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setRangeText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "replacement",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setRangeText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "replacement",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "start",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "end",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "SelectionMode",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "selectionMode",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "preserve",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setSelectionRange",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "start",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "end",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "direction",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLButtonElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autofocus",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "disabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formAction",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formEnctype",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formMethod",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formNoValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "formTarget",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "willValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ValidityState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validationMessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setCustomValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "error",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "labels",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLSelectElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autocomplete",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autofocus",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "disabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "multiple",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "required",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "size",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLOptionsCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "options",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Element",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "HTMLOptionElement",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "namedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "add",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "HTMLOptionElement",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "HTMLOptGroupElement",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "element",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen,
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "HTMLElement",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Integer(
                                                                                    MayBeNull {
                                                                                        type_: Long(
                                                                                            LongType {
                                                                                                unsigned: None,
                                                                                                long: Long,
                                                                                            },
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: Or,
                                                                },
                                                                close_paren: CloseParen,
                                                            },
                                                            q_mark: Some(
                                                                QMark,
                                                            ),
                                                        },
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "before",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "remove",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "remove",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: Some(
                                Setter(
                                    Setter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "HTMLOptionElement",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "option",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectedOptions",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectedIndex",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "willValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ValidityState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validationMessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setCustomValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "error",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "labels",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLDataListElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "options",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLOptGroupElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "disabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                            NamedArgList(
                                ExtendedAttributeNamedArgList {
                                    lhs_identifier: Identifier(
                                        "NamedConstructor",
                                    ),
                                    assign: Assign,
                                    rhs_identifier: Identifier(
                                        "Option",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "text",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: String(
                                                                    StringLit(
                                                                        "",
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "value",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Boolean(
                                                                        MayBeNull {
                                                                            type_: Boolean,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "defaultSelected",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: Boolean(
                                                                    BooleanLit(
                                                                        false,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Boolean(
                                                                        MayBeNull {
                                                                            type_: Boolean,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "selected",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: Boolean(
                                                                    BooleanLit(
                                                                        false,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLOptionElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "disabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultSelected",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selected",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "text",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "index",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTextAreaElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autocomplete",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "autofocus",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cols",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dirName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "disabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "maxLength",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "minLength",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "placeholder",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readOnly",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "required",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rows",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "wrap",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "textLength",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "willValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ValidityState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validationMessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setCustomValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "error",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "labels",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "select",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectionStart",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectionEnd",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "selectionDirection",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setRangeText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "replacement",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setRangeText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "replacement",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "start",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "end",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "SelectionMode",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "selectionMode",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "preserve",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setSelectionRange",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "start",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "end",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "direction",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLOutputElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "value",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMTokenList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "htmlFor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defaultValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "willValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ValidityState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validationMessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setCustomValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "error",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "labels",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLProgressElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "max",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "position",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "labels",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLMeterElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "value",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "min",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "max",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "low",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "high",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "optimum",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "NodeList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "labels",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLFieldSetElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "disabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "elements",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "willValidate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ValidityState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "validationMessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "checkValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reportValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setCustomValidity",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "error",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLLegendElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLFormElement",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "form",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "SelectionMode",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "select",
                        ),
                        StringLit(
                            "start",
                        ),
                        StringLit(
                            "end",
                        ),
                        StringLit(
                            "preserve",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ValidityState",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "valueMissing",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "typeMismatch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "patternMismatch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "tooLong",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "tooShort",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rangeUnderflow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rangeOverflow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "stepMismatch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "badInput",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "customError",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "valid",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLDetailsElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "open",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLDialogElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "open",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "returnValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "show",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "showModal",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "returnValue",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLScriptElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "noModule",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "async",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "defer",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "crossOrigin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "text",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "integrity",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLTemplateElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DocumentFragment",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "content",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLSlotElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "Node",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "assignedNodes",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "AssignedNodesOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "Element",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "assignedElements",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "AssignedNodesOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "AssignedNodesOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "flatten",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "CanvasRenderingContext2D",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ImageBitmapRenderingContext",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "WebGLRenderingContext",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "RenderingContext",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLCanvasElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "RenderingContext",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getContext",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "contextId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    USVString(
                                        MayBeNull {
                                            type_: USVString,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "toDataURL",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "quality",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "toBlob",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "BlobCallback",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "_callback",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "quality",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "OffscreenCanvas",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "transferControlToOffscreen",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback,
            identifier: Identifier(
                "BlobCallback",
            ),
            assign: Assign,
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Undefined,
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "Blob",
                                                    ),
                                                    q_mark: Some(
                                                        QMark,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "blob",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "HTMLImageElement",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "SVGImageElement",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "HTMLOrSVGImageElement",
            ),
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "HTMLOrSVGImageElement",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "HTMLVideoElement",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "HTMLCanvasElement",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ImageBitmap",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "OffscreenCanvas",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "CanvasImageSource",
            ),
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "CanvasFillRule",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "nonzero",
                        ),
                        StringLit(
                            "evenodd",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "CanvasRenderingContext2DSettings",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "alpha",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "ImageSmoothingQuality",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "low",
                        ),
                        StringLit(
                            "medium",
                        ),
                        StringLit(
                            "high",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCanvasElement",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "canvas",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasState",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasTransform",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasCompositing",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasImageSmoothing",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasFillStrokeStyles",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasShadowStyles",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasFilters",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasRect",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasDrawPath",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasUserInterface",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasText",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasDrawImage",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasImageData",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasPathDrawingStyles",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasTextDrawingStyles",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "CanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasPath",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasState",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "save",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "restore",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasTransform",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "scale",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "rotate",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "angle",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "translate",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "transform",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "a",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "b",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "c",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "d",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "e",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "f",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "NewObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DOMMatrix",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getTransform",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setTransform",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "a",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "b",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "c",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "d",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "e",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "f",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setTransform",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "DOMMatrix2DInit",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "transform",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "resetTransform",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasCompositing",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "globalAlpha",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "globalCompositeOperation",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasImageSmoothing",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "imageSmoothingEnabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ImageSmoothingQuality",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "imageSmoothingQuality",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasFillStrokeStyles",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Union(
                                    MayBeNull {
                                        type_: Parenthesized {
                                            open_paren: OpenParen,
                                            body: Punctuated {
                                                list: [
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasGradient",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasPattern",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                separator: Or,
                                            },
                                            close_paren: CloseParen,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            },
                            identifier: Identifier(
                                "strokeStyle",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Union(
                                    MayBeNull {
                                        type_: Parenthesized {
                                            open_paren: OpenParen,
                                            body: Punctuated {
                                                list: [
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasGradient",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    Single(
                                                        AttributedNonAnyType {
                                                            attributes: None,
                                                            type_: Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasPattern",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                separator: Or,
                                            },
                                            close_paren: CloseParen,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            },
                            identifier: Identifier(
                                "fillStyle",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "CanvasGradient",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createLinearGradient",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x0",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y0",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x1",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y1",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "CanvasGradient",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createRadialGradient",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x0",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y0",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "r0",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x1",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y1",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "r1",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "CanvasPattern",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createPattern",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasImageSource",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "image",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: Some(
                                                    Bracketed {
                                                        open_bracket: OpenBracket,
                                                        body: Punctuated {
                                                            list: [
                                                                Ident(
                                                                    ExtendedAttributeIdent {
                                                                        lhs_identifier: Identifier(
                                                                            "TreatNullAs",
                                                                        ),
                                                                        assign: Assign,
                                                                        rhs: Identifier(
                                                                            "EmptyString",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                            separator: Comma,
                                                        },
                                                        close_bracket: CloseBracket,
                                                    },
                                                ),
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "repetition",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasShadowStyles",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "shadowOffsetX",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "shadowOffsetY",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "shadowBlur",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "shadowColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasFilters",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "filter",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasRect",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clearRect",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "w",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "h",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "fillRect",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "w",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "h",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "strokeRect",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "w",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "h",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasDrawPath",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "beginPath",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "fill",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasFillRule",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "fillRule",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "nonzero",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "fill",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasFillRule",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "fillRule",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "nonzero",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "stroke",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "stroke",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clip",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasFillRule",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "fillRule",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "nonzero",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clip",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasFillRule",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "fillRule",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "nonzero",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "resetClip",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "isPointInPath",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasFillRule",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "fillRule",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "nonzero",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "isPointInPath",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasFillRule",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "fillRule",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "nonzero",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "isPointInStroke",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "isPointInStroke",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasUserInterface",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "drawFocusIfNeeded",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Element",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "element",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "drawFocusIfNeeded",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Element",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "element",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "scrollPathIntoView",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "scrollPathIntoView",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasText",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "fillText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "text",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "maxWidth",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "strokeText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "text",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "maxWidth",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "TextMetrics",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "measureText",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "text",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasDrawImage",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "drawImage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasImageSource",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "image",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "drawImage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasImageSource",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "image",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dw",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dh",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "drawImage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "CanvasImageSource",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "image",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sw",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sh",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dw",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dh",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasImageData",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "ImageData",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createImageData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sw",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sh",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "ImageData",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createImageData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageData",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "imagedata",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "ImageData",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getImageData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sw",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sh",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "putImageData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageData",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "imagedata",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "putImageData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageData",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "imagedata",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dirtyX",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dirtyY",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dirtyWidth",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "dirtyHeight",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "CanvasLineCap",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "butt",
                        ),
                        StringLit(
                            "round",
                        ),
                        StringLit(
                            "square",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "CanvasLineJoin",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "round",
                        ),
                        StringLit(
                            "bevel",
                        ),
                        StringLit(
                            "miter",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "CanvasTextAlign",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "start",
                        ),
                        StringLit(
                            "end",
                        ),
                        StringLit(
                            "left",
                        ),
                        StringLit(
                            "right",
                        ),
                        StringLit(
                            "center",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "CanvasTextBaseline",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "top",
                        ),
                        StringLit(
                            "hanging",
                        ),
                        StringLit(
                            "middle",
                        ),
                        StringLit(
                            "alphabetic",
                        ),
                        StringLit(
                            "ideographic",
                        ),
                        StringLit(
                            "bottom",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "CanvasDirection",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "ltr",
                        ),
                        StringLit(
                            "rtl",
                        ),
                        StringLit(
                            "inherit",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasPathDrawingStyles",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lineWidth",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "CanvasLineCap",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lineCap",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "CanvasLineJoin",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lineJoin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "miterLimit",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setLineDash",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Sequence,
                                                                        generics: Generics {
                                                                            open_angle: LessThan,
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        FloatingPoint(
                                                                                            MayBeNull {
                                                                                                type_: Double(
                                                                                                    DoubleType {
                                                                                                        unrestricted: Some(
                                                                                                            Unrestricted,
                                                                                                        ),
                                                                                                        double: Double,
                                                                                                    },
                                                                                                ),
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: GreaterThan,
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "segments",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                FloatingPoint(
                                                                    MayBeNull {
                                                                        type_: Double(
                                                                            DoubleType {
                                                                                unrestricted: Some(
                                                                                    Unrestricted,
                                                                                ),
                                                                                double: Double,
                                                                            },
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getLineDash",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: Some(
                                                            Unrestricted,
                                                        ),
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lineDashOffset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasTextDrawingStyles",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "font",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "CanvasTextAlign",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "textAlign",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "CanvasTextBaseline",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "textBaseline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "CanvasDirection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "direction",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "CanvasPath",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "closePath",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "moveTo",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "lineTo",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "quadraticCurveTo",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cpx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cpy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "bezierCurveTo",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cp1x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cp1y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cp2x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cp2y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "arcTo",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x1",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y1",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x2",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y2",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "radius",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "rect",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "w",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "h",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "arc",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "radius",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "startAngle",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "endAngle",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "anticlockwise",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "ellipse",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "radiusX",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "radiusY",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "rotation",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "startAngle",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: Some(
                                                                                Unrestricted,
                                                                            ),
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "endAngle",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "anticlockwise",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CanvasGradient",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "addColorStop",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Double(
                                                                        DoubleType {
                                                                            unrestricted: None,
                                                                            double: Double,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "offset",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "color",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CanvasPattern",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setTransform",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "DOMMatrix2DInit",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "transform",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "TextMetrics",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "actualBoundingBoxLeft",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "actualBoundingBoxRight",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "fontBoundingBoxAscent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "fontBoundingBoxDescent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "actualBoundingBoxAscent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "actualBoundingBoxDescent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "emHeightAscent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "emHeightDescent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hangingBaseline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "alphabeticBaseline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Double(
                                                    DoubleType {
                                                        unrestricted: None,
                                                        double: Double,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ideographicBaseline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: Long(
                                                                                LongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long: Long,
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "sw",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: Long(
                                                                                LongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long: Long,
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "sh",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Uint8ClampedArray(
                                                                        MayBeNull {
                                                                            type_: Uint8ClampedArray,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "data",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: Long(
                                                                                LongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long: Long,
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "sw",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: Long(
                                                                                LongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long: Long,
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "sh",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Serializable",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ImageData",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Uint8ClampedArray(
                                            MayBeNull {
                                                type_: Uint8ClampedArray,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "data",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Union(
                                                                MayBeNull {
                                                                    type_: Parenthesized {
                                                                        open_paren: OpenParen,
                                                                        body: Punctuated {
                                                                            list: [
                                                                                Single(
                                                                                    AttributedNonAnyType {
                                                                                        attributes: None,
                                                                                        type_: Identifier(
                                                                                            MayBeNull {
                                                                                                type_: Identifier(
                                                                                                    "Path2D",
                                                                                                ),
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                Single(
                                                                                    AttributedNonAnyType {
                                                                                        attributes: None,
                                                                                        type_: DOMString(
                                                                                            MayBeNull {
                                                                                                type_: DOMString,
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            separator: Or,
                                                                        },
                                                                        close_paren: CloseParen,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "path",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Path2D",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "addPath",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Path2D",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "path",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "DOMMatrix2DInit",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "transform",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Path2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasPath",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ImageBitmapRenderingContext",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCanvasElement",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "canvas",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "transferFromImageBitmap",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageBitmap",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "bitmap",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ImageBitmapRenderingContextSettings",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "alpha",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "OffscreenCanvasRenderingContext2D",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "WebGLRenderingContext",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "OffscreenRenderingContext",
            ),
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ImageEncodeOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "type",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "image/png",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: Some(
                                                    Unrestricted,
                                                ),
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "quality",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Float(
                                    Value(
                                        FloatValueLit(
                                            "1.0",
                                        ),
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "OffscreenRenderingContextId",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "2d",
                        ),
                        StringLit(
                            "webgl",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: Some(
                                                            Bracketed {
                                                                open_bracket: OpenBracket,
                                                                body: Punctuated {
                                                                    list: [
                                                                        NoArgs(
                                                                            ExtendedAttributeNoArgs(
                                                                                Identifier(
                                                                                    "EnforceRange",
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    ],
                                                                    separator: Comma,
                                                                },
                                                                close_bracket: CloseBracket,
                                                            },
                                                        ),
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: LongLong(
                                                                                LongLongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long_long: (
                                                                                        Long,
                                                                                        Long,
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "width",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: Some(
                                                            Bracketed {
                                                                open_bracket: OpenBracket,
                                                                body: Punctuated {
                                                                    list: [
                                                                        NoArgs(
                                                                            ExtendedAttributeNoArgs(
                                                                                Identifier(
                                                                                    "EnforceRange",
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    ],
                                                                    separator: Comma,
                                                                },
                                                                close_bracket: CloseBracket,
                                                            },
                                                        ),
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Integer(
                                                                        MayBeNull {
                                                                            type_: LongLong(
                                                                                LongLongType {
                                                                                    unsigned: Some(
                                                                                        Unsigned,
                                                                                    ),
                                                                                    long_long: (
                                                                                        Long,
                                                                                        Long,
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "height",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Transferable",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "OffscreenCanvas",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: LongLong(
                                                    LongLongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long_long: (
                                                            Long,
                                                            Long,
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: LongLong(
                                                    LongLongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long_long: (
                                                            Long,
                                                            Long,
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "OffscreenRenderingContext",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getContext",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "OffscreenRenderingContextId",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "contextId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "ImageBitmap",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "transferToImageBitmap",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "Blob",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "convertToBlob",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageEncodeOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "commit",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "OffscreenCanvas",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "canvas",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasState",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasTransform",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasCompositing",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasImageSmoothing",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasFillStrokeStyles",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasShadowStyles",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasFilters",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasRect",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasDrawPath",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasDrawImage",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasImageData",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasPathDrawingStyles",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "OffscreenCanvasRenderingContext2D",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "CanvasPath",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CustomElementRegistry",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "define",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Function",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "constructor",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ElementDefinitionOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Any(
                                    Any,
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "get",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Undefined,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "whenDefined",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "upgrade",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Node",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "root",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ElementDefinitionOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "extends",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "FocusOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "preventScroll",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "ElementContentEditable",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "contentEditable",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "isContentEditable",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "inputMode",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DataTransfer",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dropEffect",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "effectAllowed",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DataTransferItemList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "items",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setDragImage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Element",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "image",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "x",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "y",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FrozenArrayType(
                                            MayBeNull {
                                                type_: FrozenArrayType {
                                                    frozen_array: FrozenArray,
                                                    generics: Generics {
                                                        open_angle: LessThan,
                                                        body: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        close_angle: GreaterThan,
                                                    },
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "types",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "format",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "format",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clearData",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "format",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "FileList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "files",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DataTransferItemList",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DataTransferItem",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DataTransferItem",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "add",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "DataTransferItem",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "add",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "File",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "remove",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clear",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DataTransferItem",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "kind",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getAsString",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "FunctionStringCallback",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "_callback",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "File",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getAsFile",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback,
            identifier: Identifier(
                "FunctionStringCallback",
            ),
            assign: Assign,
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Undefined,
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            DOMString(
                                                MayBeNull {
                                                    type_: DOMString,
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "data",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "DragEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DragEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "MouseEvent",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DataTransfer",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "dataTransfer",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "DragEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "MouseEventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "DataTransfer",
                                        ),
                                        q_mark: Some(
                                            QMark,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "dataTransfer",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Global",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Window",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "window",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "self",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Document",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "document",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "PutForwards",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "href",
                                                    ),
                                                },
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Location",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "location",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "History",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "history",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "CustomElementRegistry",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "customElements",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "BarProp",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "locationbar",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "BarProp",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "menubar",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "BarProp",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "personalbar",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "BarProp",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scrollbars",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "BarProp",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "statusbar",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "BarProp",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "toolbar",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "status",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "closed",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "stop",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "focus",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "blur",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "frames",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "top",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Any(
                                        Any,
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "opener",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "parent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Element",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "frameElement",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "WindowProxy",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "open",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "about:blank",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "target",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "_blank",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: Some(
                                                        Bracketed {
                                                            open_bracket: OpenBracket,
                                                            body: Punctuated {
                                                                list: [
                                                                    Ident(
                                                                        ExtendedAttributeIdent {
                                                                            lhs_identifier: Identifier(
                                                                                "TreatNullAs",
                                                                            ),
                                                                            assign: Assign,
                                                                            rhs: Identifier(
                                                                                "EmptyString",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                                separator: Comma,
                                                            },
                                                            close_bracket: CloseBracket,
                                                        },
                                                    ),
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "features",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Object(
                                        MayBeNull {
                                            type_: Object,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: None,
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Navigator",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "navigator",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ApplicationCache",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "applicationCache",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "alert",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "alert",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "confirm",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "prompt",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "default",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "print",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Integer(
                                        MayBeNull {
                                            type_: Long(
                                                LongType {
                                                    unsigned: Some(
                                                        Unsigned,
                                                    ),
                                                    long: Long,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "requestAnimationFrame",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "FrameRequestCallback",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "callback",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "cancelAnimationFrame",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "handle",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "postMessage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "targetOrigin",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Sequence,
                                                                        generics: Generics {
                                                                            open_angle: LessThan,
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        Object(
                                                                                            MayBeNull {
                                                                                                type_: Object,
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: GreaterThan,
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "transfer",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyArray(
                                                            EmptyArrayLit {
                                                                open_bracket: OpenBracket,
                                                                close_bracket: CloseBracket,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Window",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "GlobalEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Window",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "WindowEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback,
            identifier: Identifier(
                "FrameRequestCallback",
            ),
            assign: Assign,
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Undefined,
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "DOMHighResTimeStamp",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "time",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "BarProp",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "visible",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "ScrollRestoration",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "auto",
                        ),
                        StringLit(
                            "manual",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "History",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "ScrollRestoration",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scrollRestoration",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Any(
                                        Any,
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "state",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "go",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "delta",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Oct(
                                                                OctLit(
                                                                    "0",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "back",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "forward",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "pushState",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "title",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "replaceState",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "title",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Location",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: Some(
                                Stringifier(
                                    Stringifier,
                                ),
                            ),
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "href",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "origin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "protocol",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "host",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hostname",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "port",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "pathname",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "search",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hash",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "assign",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "replace",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "reload",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Unforgeable",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "DOMStringList",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ancestorOrigins",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "PopStateEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "PopStateEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Any(
                                        Any,
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "state",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "PopStateEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Any,
                            ),
                        ),
                        identifier: Identifier(
                            "state",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "HashChangeEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HashChangeEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oldURL",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "newURL",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "HashChangeEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                USVString(
                                    MayBeNull {
                                        type_: USVString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "oldURL",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                USVString(
                                    MayBeNull {
                                        type_: USVString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "newURL",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "PageTransitionEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "PageTransitionEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "persisted",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "PageTransitionEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "persisted",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "BeforeUnloadEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "returnValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ApplicationCache",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "UNCACHED",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "IDLE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CHECKING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "DOWNLOADING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "UPDATEREADY",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "4",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "OBSOLETE",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "5",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "status",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "update",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "abort",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "swapCache",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onchecking",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onnoupdate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondownloading",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onprogress",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onupdateready",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncached",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onobsolete",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NavigatorOnLine",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onLine",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "ErrorEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ErrorEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "message",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "filename",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lineno",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "colno",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Any(
                                        Any,
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "error",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ErrorEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "message",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                USVString(
                                    MayBeNull {
                                        type_: USVString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "filename",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "lineno",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Integer(
                                    Oct(
                                        OctLit(
                                            "0",
                                        ),
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "colno",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Integer(
                                    Oct(
                                        OctLit(
                                            "0",
                                        ),
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Any,
                            ),
                        ),
                        identifier: Identifier(
                            "error",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "PromiseRejectionEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "PromiseRejectionEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Promise(
                                        PromiseType {
                                            promise: Promise,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: Single(
                                                    Any(
                                                        Any,
                                                    ),
                                                ),
                                                close_angle: GreaterThan,
                                            },
                                        },
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "promise",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Any(
                                        Any,
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "reason",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "PromiseRejectionEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: Some(
                            Required,
                        ),
                        type_: Single(
                            Promise(
                                PromiseType {
                                    promise: Promise,
                                    generics: Generics {
                                        open_angle: LessThan,
                                        body: Single(
                                            Any(
                                                Any,
                                            ),
                                        ),
                                        close_angle: GreaterThan,
                                    },
                                },
                            ),
                        ),
                        identifier: Identifier(
                            "promise",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Any,
                            ),
                        ),
                        identifier: Identifier(
                            "reason",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "TreatNonObjectAsNull",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            callback: Callback,
            identifier: Identifier(
                "EventHandlerNonNull",
            ),
            assign: Assign,
            return_type: Single(
                Any(
                    Any,
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "Event",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "event",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Single(
                    Distinguishable(
                        Identifier(
                            MayBeNull {
                                type_: Identifier(
                                    "EventHandlerNonNull",
                                ),
                                q_mark: Some(
                                    QMark,
                                ),
                            },
                        ),
                    ),
                ),
            },
            identifier: Identifier(
                "EventHandler",
            ),
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "TreatNonObjectAsNull",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            callback: Callback,
            identifier: Identifier(
                "OnErrorEventHandlerNonNull",
            ),
            assign: Assign,
            return_type: Single(
                Any(
                    Any,
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Union(
                                        MayBeNull {
                                            type_: Parenthesized {
                                                open_paren: OpenParen,
                                                body: Punctuated {
                                                    list: [
                                                        Single(
                                                            AttributedNonAnyType {
                                                                attributes: None,
                                                                type_: Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "Event",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        Single(
                                                            AttributedNonAnyType {
                                                                attributes: None,
                                                                type_: DOMString(
                                                                    MayBeNull {
                                                                        type_: DOMString,
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                    separator: Or,
                                                },
                                                close_paren: CloseParen,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                },
                                identifier: Identifier(
                                    "event",
                                ),
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Optional,
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            DOMString(
                                                MayBeNull {
                                                    type_: DOMString,
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "source",
                                ),
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Optional,
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Integer(
                                                MayBeNull {
                                                    type_: Long(
                                                        LongType {
                                                            unsigned: Some(
                                                                Unsigned,
                                                            ),
                                                            long: Long,
                                                        },
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "lineno",
                                ),
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Optional,
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Integer(
                                                MayBeNull {
                                                    type_: Long(
                                                        LongType {
                                                            unsigned: Some(
                                                                Unsigned,
                                                            ),
                                                            long: Long,
                                                        },
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "colno",
                                ),
                                default: None,
                            },
                        ),
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: Some(
                                    Optional,
                                ),
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Any(
                                            Any,
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "error",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Single(
                    Distinguishable(
                        Identifier(
                            MayBeNull {
                                type_: Identifier(
                                    "OnErrorEventHandlerNonNull",
                                ),
                                q_mark: Some(
                                    QMark,
                                ),
                            },
                        ),
                    ),
                ),
            },
            identifier: Identifier(
                "OnErrorEventHandler",
            ),
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "TreatNonObjectAsNull",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            callback: Callback,
            identifier: Identifier(
                "OnBeforeUnloadEventHandlerNonNull",
            ),
            assign: Assign,
            return_type: Single(
                Distinguishable(
                    DOMString(
                        MayBeNull {
                            type_: DOMString,
                            q_mark: Some(
                                QMark,
                            ),
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "Event",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "event",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Single(
                    Distinguishable(
                        Identifier(
                            MayBeNull {
                                type_: Identifier(
                                    "OnBeforeUnloadEventHandlerNonNull",
                                ),
                                q_mark: Some(
                                    QMark,
                                ),
                            },
                        ),
                    ),
                ),
            },
            identifier: Identifier(
                "OnBeforeUnloadEventHandler",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "GlobalEventHandlers",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onabort",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onauxclick",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onblur",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncancel",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncanplay",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncanplaythrough",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onchange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onclick",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onclose",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncontextmenu",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncuechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondblclick",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondrag",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondragend",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondragenter",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondragexit",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondragleave",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondragover",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondragstart",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondrop",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondurationchange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onemptied",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onended",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "OnErrorEventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onfocus",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oninput",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oninvalid",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onkeydown",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onkeypress",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onkeyup",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onload",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onloadeddata",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onloadedmetadata",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onloadend",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onloadstart",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmousedown",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "LenientThis",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmouseenter",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "LenientThis",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmouseleave",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmousemove",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmouseout",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmouseover",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmouseup",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onwheel",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onpause",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onplay",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onplaying",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onprogress",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onratechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onreset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onresize",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onscroll",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onsecuritypolicyviolation",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onseeked",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onseeking",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onselect",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onstalled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onsubmit",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onsuspend",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ontimeupdate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ontoggle",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onvolumechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onwaiting",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "WindowEventHandlers",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onafterprint",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onbeforeprint",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "OnBeforeUnloadEventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onbeforeunload",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onhashchange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onlanguagechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessageerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onoffline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ononline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onpagehide",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onpageshow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onpopstate",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onrejectionhandled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onstorage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onunhandledrejection",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onunload",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "DocumentAndElementEventHandlers",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncopy",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oncut",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onpaste",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: DOMString(
                                                MayBeNull {
                                                    type_: DOMString,
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "Function",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "TimerHandler",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "WindowOrWorkerGlobalScope",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "origin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "btoa",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    ByteString(
                                        MayBeNull {
                                            type_: ByteString,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "atob",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Integer(
                                        MayBeNull {
                                            type_: Long(
                                                LongType {
                                                    unsigned: None,
                                                    long: Long,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setTimeout",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "TimerHandler",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "handler",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "timeout",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Oct(
                                                                OctLit(
                                                                    "0",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Single(
                                                    Any(
                                                        Any,
                                                    ),
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "arguments",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clearTimeout",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "handle",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Oct(
                                                                OctLit(
                                                                    "0",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Integer(
                                        MayBeNull {
                                            type_: Long(
                                                LongType {
                                                    unsigned: None,
                                                    long: Long,
                                                },
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setInterval",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "TimerHandler",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "handler",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "timeout",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Oct(
                                                                OctLit(
                                                                    "0",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Single(
                                                    Any(
                                                        Any,
                                                    ),
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "arguments",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clearInterval",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "handle",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Integer(
                                                            Oct(
                                                                OctLit(
                                                                    "0",
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "ImageBitmap",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createImageBitmap",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageBitmapSource",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "image",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageBitmapOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "ImageBitmap",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "createImageBitmap",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageBitmapSource",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "image",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sx",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sy",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sw",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: None,
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "sh",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ImageBitmapOptions",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "options",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Window",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "WindowOrWorkerGlobalScope",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "WorkerGlobalScope",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "WindowOrWorkerGlobalScope",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Navigator",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Navigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorID",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Navigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorLanguage",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Navigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorOnLine",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Navigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorContentUtils",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Navigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorCookies",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Navigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorPlugins",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Navigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorConcurrentHardware",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NavigatorID",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "appCodeName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "appName",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "appVersion",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "platform",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "product",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "Exposed",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "productSub",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "userAgent",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "Exposed",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vendor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "Exposed",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vendorSub",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "NavigatorID",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "Exposed",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "taintEnabled",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "Exposed",
                                                    ),
                                                    assign: Assign,
                                                    rhs: Identifier(
                                                        "Window",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oscpu",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NavigatorLanguage",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "language",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FrozenArrayType(
                                            MayBeNull {
                                                type_: FrozenArrayType {
                                                    frozen_array: FrozenArray,
                                                    generics: Generics {
                                                        open_angle: LessThan,
                                                        body: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        close_angle: GreaterThan,
                                                    },
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "languages",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NavigatorContentUtils",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "registerProtocolHandler",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "scheme",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "title",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "unregisterProtocolHandler",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "scheme",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "url",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NavigatorCookies",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cookieEnabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NavigatorPlugins",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "PluginArray",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "plugins",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MimeTypeArray",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "mimeTypes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationMixinMember {
                            attributes: None,
                            stringifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Boolean(
                                        MayBeNull {
                                            type_: Boolean,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "javaEnabled",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "PluginArray",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "refresh",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "reload",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Plugin",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "Plugin",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "namedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MimeTypeArray",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MimeType",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MimeType",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "namedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "LegacyUnenumerableNamedProperties",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Plugin",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "description",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "filename",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MimeType",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "item",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MimeType",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "namedItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "name",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MimeType",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "description",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "suffixes",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Plugin",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "enabledPlugin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Serializable",
                                    ),
                                ),
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Transferable",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "ImageBitmap",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "CanvasImageSource",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "Blob",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ImageData",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "ImageBitmapSource",
            ),
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "ImageOrientation",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "none",
                        ),
                        StringLit(
                            "flipY",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "PremultiplyAlpha",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "none",
                        ),
                        StringLit(
                            "premultiply",
                        ),
                        StringLit(
                            "default",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "ColorSpaceConversion",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "none",
                        ),
                        StringLit(
                            "default",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "ResizeQuality",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "pixelated",
                        ),
                        StringLit(
                            "low",
                        ),
                        StringLit(
                            "medium",
                        ),
                        StringLit(
                            "high",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ImageBitmapOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ImageOrientation",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "imageOrientation",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "none",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "PremultiplyAlpha",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "premultiplyAlpha",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "default",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ColorSpaceConversion",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "colorSpaceConversion",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "default",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: OpenBracket,
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Identifier(
                                                    "EnforceRange",
                                                ),
                                            ),
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_bracket: CloseBracket,
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "resizeWidth",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: OpenBracket,
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Identifier(
                                                    "EnforceRange",
                                                ),
                                            ),
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_bracket: CloseBracket,
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "resizeHeight",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ResizeQuality",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "resizeQuality",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "low",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "MessageEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                                Identifier(
                                                    "AudioWorklet",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MessageEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Any(
                                        Any,
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "data",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "origin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lastEventId",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MessageEventSource",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "source",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        FrozenArrayType(
                                            MayBeNull {
                                                type_: FrozenArrayType {
                                                    frozen_array: FrozenArray,
                                                    generics: Generics {
                                                        open_angle: LessThan,
                                                        body: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "MessagePort",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        close_angle: GreaterThan,
                                                    },
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ports",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "initMessageEvent",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "type",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "bubbles",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "cancelable",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Boolean(
                                                            BooleanLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "origin",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "lastEventId",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MessageEventSource",
                                                                    ),
                                                                    q_mark: Some(
                                                                        QMark,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "source",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: Null(
                                                            Null,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Sequence,
                                                                        generics: Generics {
                                                                            open_angle: LessThan,
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        Identifier(
                                                                                            MayBeNull {
                                                                                                type_: Identifier(
                                                                                                    "MessagePort",
                                                                                                ),
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: GreaterThan,
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "ports",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyArray(
                                                            EmptyArrayLit {
                                                                open_bracket: OpenBracket,
                                                                close_bracket: CloseBracket,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MessageEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Any(
                                Any,
                            ),
                        ),
                        identifier: Identifier(
                            "data",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                USVString(
                                    MayBeNull {
                                        type_: USVString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "origin",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "lastEventId",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "MessageEventSource",
                                        ),
                                        q_mark: Some(
                                            QMark,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "source",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MessagePort",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "ports",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: EmptyArray(
                                    EmptyArrayLit {
                                        open_bracket: OpenBracket,
                                        close_bracket: CloseBracket,
                                    },
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "WindowProxy",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "MessagePort",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ServiceWorker",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "MessageEventSource",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    USVString(
                                                                        MayBeNull {
                                                                            type_: USVString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "url",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "EventSourceInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventSourceInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "EventSource",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "url",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "withCredentials",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CONNECTING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "OPEN",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CLOSED",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readyState",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onopen",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "EventSourceInit",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "withCredentials",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "BinaryType",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "blob",
                        ),
                        StringLit(
                            "arraybuffer",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    USVString(
                                                                        MayBeNull {
                                                                            type_: USVString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "url",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Union(
                                                                MayBeNull {
                                                                    type_: Parenthesized {
                                                                        open_paren: OpenParen,
                                                                        body: Punctuated {
                                                                            list: [
                                                                                Single(
                                                                                    AttributedNonAnyType {
                                                                                        attributes: None,
                                                                                        type_: DOMString(
                                                                                            MayBeNull {
                                                                                                type_: DOMString,
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                Single(
                                                                                    AttributedNonAnyType {
                                                                                        attributes: None,
                                                                                        type_: Sequence(
                                                                                            MayBeNull {
                                                                                                type_: SequenceType {
                                                                                                    sequence: Sequence,
                                                                                                    generics: Generics {
                                                                                                        open_angle: LessThan,
                                                                                                        body: AttributedType {
                                                                                                            attributes: None,
                                                                                                            type_: Single(
                                                                                                                Distinguishable(
                                                                                                                    DOMString(
                                                                                                                        MayBeNull {
                                                                                                                            type_: DOMString,
                                                                                                                            q_mark: None,
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                        close_angle: GreaterThan,
                                                                                                    },
                                                                                                },
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            separator: Or,
                                                                        },
                                                                        close_paren: CloseParen,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "protocols",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyArray(
                                                                    EmptyArrayLit {
                                                                        open_bracket: OpenBracket,
                                                                        close_bracket: CloseBracket,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "WebSocket",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "url",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CONNECTING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Oct(
                                    OctLit(
                                        "0",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "OPEN",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "1",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CLOSING",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "2",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Const(
                        ConstMember {
                            attributes: None,
                            const_: Const,
                            const_type: Integer(
                                MayBeNull {
                                    type_: Short(
                                        ShortType {
                                            unsigned: Some(
                                                Unsigned,
                                            ),
                                            short: Short,
                                        },
                                    ),
                                    q_mark: None,
                                },
                            ),
                            identifier: Identifier(
                                "CLOSED",
                            ),
                            assign: Assign,
                            const_value: Integer(
                                Dec(
                                    DecLit(
                                        "3",
                                    ),
                                ),
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readyState",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: LongLong(
                                                    LongLongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long_long: (
                                                            Long,
                                                            Long,
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bufferedAmount",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onopen",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onclose",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "extensions",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "protocol",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: Some(
                                                        Bracketed {
                                                            open_bracket: OpenBracket,
                                                            body: Punctuated {
                                                                list: [
                                                                    NoArgs(
                                                                        ExtendedAttributeNoArgs(
                                                                            Identifier(
                                                                                "Clamp",
                                                                            ),
                                                                        ),
                                                                    ),
                                                                ],
                                                                separator: Comma,
                                                            },
                                                            close_bracket: CloseBracket,
                                                        },
                                                    ),
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Short(
                                                                        ShortType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            short: Short,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "code",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "reason",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "BinaryType",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "binaryType",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "send",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            USVString(
                                                                MayBeNull {
                                                                    type_: USVString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "send",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Blob",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "send",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            ArrayBuffer(
                                                                MayBeNull {
                                                                    type_: ArrayBuffer,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "send",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ArrayBufferView",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "data",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "CloseEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "CloseEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "wasClean",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        short: Short,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "code",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "reason",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "CloseEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "wasClean",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Short(
                                            ShortType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                short: Short,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "code",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Integer(
                                    Oct(
                                        OctLit(
                                            "0",
                                        ),
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                USVString(
                                    MayBeNull {
                                        type_: USVString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "reason",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MessageChannel",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MessagePort",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "port1",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MessagePort",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "port2",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                                Identifier(
                                                    "AudioWorklet",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Transferable",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MessagePort",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "postMessage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Sequence,
                                                                        generics: Generics {
                                                                            open_angle: LessThan,
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        Object(
                                                                                            MayBeNull {
                                                                                                type_: Object,
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: GreaterThan,
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "transfer",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyArray(
                                                            EmptyArrayLit {
                                                                open_bracket: OpenBracket,
                                                                close_bracket: CloseBracket,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "start",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessageerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "name",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "BroadcastChannel",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "postMessage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessageerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Worker",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "WorkerGlobalScope",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WorkerGlobalScope",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "self",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WorkerLocation",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "location",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WorkerNavigator",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "navigator",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "importScripts",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Variadic(
                                            VariadicArgument {
                                                attributes: None,
                                                type_: Single(
                                                    Distinguishable(
                                                        USVString(
                                                            MayBeNull {
                                                                type_: USVString,
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                ellipsis: Ellipsis,
                                                identifier: Identifier(
                                                    "urls",
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "OnErrorEventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onlanguagechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onoffline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ononline",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onrejectionhandled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onunhandledrejection",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Global",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Worker",
                                                ),
                                                Identifier(
                                                    "DedicatedWorker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "DedicatedWorker",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "DedicatedWorkerGlobalScope",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "WorkerGlobalScope",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "postMessage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Sequence,
                                                                        generics: Generics {
                                                                            open_angle: LessThan,
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        Object(
                                                                                            MayBeNull {
                                                                                                type_: Object,
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: GreaterThan,
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "transfer",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyArray(
                                                            EmptyArrayLit {
                                                                open_bracket: OpenBracket,
                                                                close_bracket: CloseBracket,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessageerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Global",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Worker",
                                                ),
                                                Identifier(
                                                    "SharedWorker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "SharedWorker",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "SharedWorkerGlobalScope",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "WorkerGlobalScope",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "close",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onconnect",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "AbstractWorker",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    USVString(
                                                                        MayBeNull {
                                                                            type_: USVString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "scriptURL",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "WorkerOptions",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "options",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Worker",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "terminate",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "postMessage",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any,
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "message",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Sequence,
                                                                        generics: Generics {
                                                                            open_angle: LessThan,
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    Distinguishable(
                                                                                        Object(
                                                                                            MayBeNull {
                                                                                                type_: Object,
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: GreaterThan,
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "transfer",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyArray(
                                                            EmptyArrayLit {
                                                                open_bracket: OpenBracket,
                                                                close_bracket: CloseBracket,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmessageerror",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "WorkerOptions",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "WorkerType",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "type",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "classic",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "RequestCredentials",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "credentials",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "omit",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "name",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "WorkerType",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "classic",
                        ),
                        StringLit(
                            "module",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Worker",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "AbstractWorker",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    USVString(
                                                                        MayBeNull {
                                                                            type_: USVString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "scriptURL",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Union(
                                                                MayBeNull {
                                                                    type_: Parenthesized {
                                                                        open_paren: OpenParen,
                                                                        body: Punctuated {
                                                                            list: [
                                                                                Single(
                                                                                    AttributedNonAnyType {
                                                                                        attributes: None,
                                                                                        type_: DOMString(
                                                                                            MayBeNull {
                                                                                                type_: DOMString,
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                Single(
                                                                                    AttributedNonAnyType {
                                                                                        attributes: None,
                                                                                        type_: Identifier(
                                                                                            MayBeNull {
                                                                                                type_: Identifier(
                                                                                                    "WorkerOptions",
                                                                                                ),
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            separator: Or,
                                                                        },
                                                                        close_paren: CloseParen,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "options",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            IdentList(
                                ExtendedAttributeIdentList {
                                    identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    list: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Identifier(
                                                    "Window",
                                                ),
                                                Identifier(
                                                    "Worker",
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "SharedWorker",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MessagePort",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "port",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "SharedWorker",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "AbstractWorker",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "NavigatorConcurrentHardware",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: LongLong(
                                                    LongLongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long_long: (
                                                            Long,
                                                            Long,
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hardwareConcurrency",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Worker",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "WorkerNavigator",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "WorkerNavigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorID",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "WorkerNavigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorLanguage",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "WorkerNavigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorOnLine",
            ),
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "WorkerNavigator",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "NavigatorConcurrentHardware",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Worker",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "WorkerLocation",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: Some(
                                Stringifier(
                                    Stringifier,
                                ),
                            ),
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "href",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "origin",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "protocol",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "host",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hostname",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "port",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "pathname",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "search",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hash",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "Storage",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "length",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "key",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned,
                                                                            ),
                                                                            long: Long,
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "index",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    DOMString(
                                        MayBeNull {
                                            type_: DOMString,
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "key",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Setter(
                                    Setter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "setItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "key",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "value",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Deleter(
                                    Deleter,
                                ),
                            ),
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "removeItem",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "key",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clear",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "WindowSessionStorage",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Storage",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "sessionStorage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Window",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "WindowSessionStorage",
            ),
            semi_colon: SemiColon,
        },
    ),
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface,
            mixin: Mixin,
            identifier: Identifier(
                "WindowLocalStorage",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: None,
                            stringifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Storage",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "localStorage",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "Window",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "WindowLocalStorage",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: Some(
                                                            Optional,
                                                        ),
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "StorageEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: Some(
                                                            Default {
                                                                assign: Assign,
                                                                value: EmptyDictionary(
                                                                    EmptyDictionaryLit {
                                                                        open_brace: OpenBrace,
                                                                        close_brace: CloseBrace,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "StorageEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "key",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "oldValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "newValue",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "url",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Storage",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "storageArea",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "StorageEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: Some(
                                            QMark,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "key",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: Some(
                                            QMark,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "oldValue",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: Some(
                                            QMark,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "newValue",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                USVString(
                                    MayBeNull {
                                        type_: USVString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "url",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: String(
                                    StringLit(
                                        "",
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "Storage",
                                        ),
                                        q_mark: Some(
                                            QMark,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "storageArea",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Null(
                                    Null,
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLMarqueeElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "behavior",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bgColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "direction",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hspace",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "loop",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scrollAmount",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scrollDelay",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "trueSpeed",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vspace",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onbounce",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onfinish",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onstart",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "start",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "stop",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLFrameSetElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cols",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rows",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    IncludesStatement(
        IncludesStatementDefinition {
            attributes: None,
            lhs_identifier: Identifier(
                "HTMLFrameSetElement",
            ),
            includes: Includes,
            rhs_identifier: Identifier(
                "WindowEventHandlers",
            ),
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLFrameElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scrolling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "src",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "frameBorder",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "longDesc",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "noResize",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Document",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "contentDocument",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "WindowProxy",
                                                ),
                                                q_mark: Some(
                                                    QMark,
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "contentWindow",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "marginHeight",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "marginWidth",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLAnchorElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "coords",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "charset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rev",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "shape",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLAreaElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "noHref",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLBodyElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "text",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "link",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vLink",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "aLink",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bgColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "background",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLBRElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "clear",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLTableCaptionElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLTableColElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "chOff",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vAlign",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLDirectoryElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "compact",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLDivElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLDListElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "compact",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLEmbedElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "HTMLConstructor",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "HTMLFontElement",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "HTMLElement",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "color",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "face",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "size",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLHeadingElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLHRElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "color",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "noShade",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "size",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLHtmlElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "version",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLIFrameElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scrolling",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "frameBorder",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "longDesc",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "marginHeight",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "marginWidth",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLImageElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "name",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "lowsrc",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hspace",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vspace",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        USVString(
                                            MayBeNull {
                                                type_: USVString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "longDesc",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "border",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLInputElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "useMap",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLLegendElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLLIElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLLinkElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "charset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rev",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "target",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLMenuElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "compact",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLMetaElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "scheme",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLObjectElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "archive",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "code",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "declare",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "hspace",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "standby",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned,
                                                        ),
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vspace",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "codeBase",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "codeType",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "border",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLOListElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "compact",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLParagraphElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLParamElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "valueType",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLPreElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: None,
                                                        long: Long,
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLStyleElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLScriptElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "charset",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "event",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "htmlFor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLTableElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "border",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "frame",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "rules",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "summary",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bgColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cellPadding",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "cellSpacing",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLTableSectionElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "chOff",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vAlign",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLTableCellElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "axis",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "height",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "width",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "chOff",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "noWrap",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vAlign",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bgColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLTableRowElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "align",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ch",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "chOff",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vAlign",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bgColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "HTMLUListElement",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "compact",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "type",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "Document",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "fgColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "linkColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "vlinkColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "alinkColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "CEReactions",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: Some(
                                    Bracketed {
                                        open_bracket: OpenBracket,
                                        body: Punctuated {
                                            list: [
                                                Ident(
                                                    ExtendedAttributeIdent {
                                                        lhs_identifier: Identifier(
                                                            "TreatNullAs",
                                                        ),
                                                        assign: Assign,
                                                        rhs: Identifier(
                                                            "EmptyString",
                                                        ),
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_bracket: CloseBracket,
                                    },
                                ),
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bgColor",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "anchors",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "applets",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clear",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "captureEvents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "releaseEvents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "HTMLAllCollection",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "all",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "Window",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "captureEvents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "releaseEvents",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Replaceable",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "External",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "external",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "NoInterfaceObject",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "External",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "AddSearchProvider",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "IsSearchProviderInstalled",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
]
