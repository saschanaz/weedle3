[
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "Constructor",
                                    ),
                                ),
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "MediaStream",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "stream",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Sequence(
                                                                        MayBeNull {
                                                                            type_: SequenceType {
                                                                                sequence: Sequence,
                                                                                generics: Generics {
                                                                                    open_angle: LessThan,
                                                                                    body: AttributedType {
                                                                                        attributes: None,
                                                                                        type_: Single(
                                                                                            Distinguishable(
                                                                                                Identifier(
                                                                                                    MayBeNull {
                                                                                                        type_: Identifier(
                                                                                                            "MediaStreamTrack",
                                                                                                        ),
                                                                                                        q_mark: None,
                                                                                                    },
                                                                                                ),
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                    close_angle: GreaterThan,
                                                                                },
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "tracks",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MediaStream",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "id",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "MediaStreamTrack",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getAudioTracks",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "MediaStreamTrack",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getVideoTracks",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Sequence,
                                                generics: Generics {
                                                    open_angle: LessThan,
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Identifier(
                                                                            "MediaStreamTrack",
                                                                        ),
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: GreaterThan,
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getTracks",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaStreamTrack",
                                            ),
                                            q_mark: Some(
                                                QMark,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getTrackById",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "trackId",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "addTrack",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MediaStreamTrack",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "track",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "removeTrack",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MediaStreamTrack",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "track",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaStream",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clone",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "active",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onaddtrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onremovetrack",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MediaStreamTrack",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "kind",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "id",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "enabled",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Boolean,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "muted",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onmute",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onunmute",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MediaStreamTrackState",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "readyState",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "onended",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaStreamTrack",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "clone",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "stop",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaTrackCapabilities",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getCapabilities",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaTrackConstraints",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getConstraints",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaTrackSettings",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getSettings",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Undefined,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "applyConstraints",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MediaTrackConstraints",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "constraints",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "MediaStreamTrackState",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "live",
                        ),
                        StringLit(
                            "ended",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MediaTrackSupportedConstraints",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "width",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "height",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "aspectRatio",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "frameRate",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "facingMode",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "resizeMode",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "volume",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleRate",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleSize",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "echoCancellation",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "autoGainControl",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "noiseSuppression",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "latency",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "channelCount",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "deviceId",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "groupId",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        true,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MediaTrackCapabilities",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ULongRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "width",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ULongRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "height",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "DoubleRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "aspectRatio",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "DoubleRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "frameRate",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "facingMode",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "resizeMode",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "DoubleRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "volume",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ULongRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleRate",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ULongRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleSize",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "echoCancellation",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "autoGainControl",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Boolean,
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "noiseSuppression",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "DoubleRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "latency",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ULongRange",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "channelCount",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "deviceId",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "groupId",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MediaTrackConstraints",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "MediaTrackConstraintSet",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MediaTrackConstraintSet",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "advanced",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MediaTrackConstraintSet",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainULong",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "width",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainULong",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "height",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDouble",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "aspectRatio",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDouble",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "frameRate",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDOMString",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "facingMode",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDOMString",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "resizeMode",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDouble",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "volume",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainULong",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleRate",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainULong",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleSize",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainBoolean",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "echoCancellation",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainBoolean",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "autoGainControl",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainBoolean",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "noiseSuppression",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDouble",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "latency",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainULong",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "channelCount",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDOMString",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "deviceId",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "ConstrainDOMString",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "groupId",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MediaTrackSettings",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "width",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "height",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "aspectRatio",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "frameRate",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "facingMode",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "resizeMode",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "volume",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleRate",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "sampleSize",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "echoCancellation",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "autoGainControl",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "noiseSuppression",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "latency",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "channelCount",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "deviceId",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: DOMString,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "groupId",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "VideoFacingModeEnum",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "user",
                        ),
                        StringLit(
                            "environment",
                        ),
                        StringLit(
                            "left",
                        ),
                        StringLit(
                            "right",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "VideoResizeModeEnum",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "none",
                        ),
                        StringLit(
                            "crop-and-scale",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Identifier(
                                        "Constructor",
                                    ),
                                    args: Parenthesized {
                                        open_paren: OpenParen,
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: DOMString,
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "type",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Identifier(
                                                                                "MediaStreamTrackEventInit",
                                                                            ),
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Identifier(
                                                            "eventInitDict",
                                                        ),
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: Comma,
                                        },
                                        close_paren: CloseParen,
                                    },
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MediaStreamTrackEvent",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "Event",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MediaStreamTrack",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "track",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MediaStreamTrackEventInit",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventInit",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: Some(
                            Required,
                        ),
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Identifier(
                                            "MediaStreamTrack",
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "track",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "Navigator",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SameObject",
                                                    ),
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SecureContext",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MediaDevices",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "mediaDevices",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "SecureContext",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MediaDevices",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "EventTarget",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "EventHandler",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "ondevicechange",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Sequence(
                                                        MayBeNull {
                                                            type_: SequenceType {
                                                                sequence: Sequence,
                                                                generics: Generics {
                                                                    open_angle: LessThan,
                                                                    body: AttributedType {
                                                                        attributes: None,
                                                                        type_: Single(
                                                                            Distinguishable(
                                                                                Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "MediaDeviceInfo",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    },
                                                                    close_angle: GreaterThan,
                                                                },
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "enumerateDevices",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Identifier(
                                        "SecureContext",
                                    ),
                                ),
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "MediaDeviceInfo",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "deviceId",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "MediaDeviceKind",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "kind",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "label",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly,
                            ),
                            attribute: Attribute,
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString,
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "groupId",
                            ),
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Default",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Object(
                                        MayBeNull {
                                            type_: Object,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "toJSON",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Enum,
            identifier: Identifier(
                "MediaDeviceKind",
            ),
            values: Braced {
                open_brace: OpenBrace,
                body: PunctuatedNonEmpty {
                    list: [
                        StringLit(
                            "audioinput",
                        ),
                        StringLit(
                            "audiooutput",
                        ),
                        StringLit(
                            "videoinput",
                        ),
                    ],
                    separator: Comma,
                },
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: OpenBracket,
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Identifier(
                                        "Exposed",
                                    ),
                                    assign: Assign,
                                    rhs: Identifier(
                                        "Window",
                                    ),
                                },
                            ),
                        ],
                        separator: Comma,
                    },
                    close_bracket: CloseBracket,
                },
            ),
            interface: Interface,
            identifier: Identifier(
                "InputDeviceInfo",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "MediaDeviceInfo",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaTrackCapabilities",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getCapabilities",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "Navigator",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket,
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "SecureContext",
                                                    ),
                                                ),
                                            ),
                                        ],
                                        separator: Comma,
                                    },
                                    close_bracket: CloseBracket,
                                },
                            ),
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Undefined,
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getUserMedia",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MediaStreamConstraints",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "constraints",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "NavigatorUserMediaSuccessCallback",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "successCallback",
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "NavigatorUserMediaErrorCallback",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "errorCallback",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Partial,
            interface: Interface,
            identifier: Identifier(
                "MediaDevices",
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Identifier(
                                                "MediaTrackSupportedConstraints",
                                            ),
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getSupportedConstraints",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Promise,
                                        generics: Generics {
                                            open_angle: LessThan,
                                            body: Single(
                                                Distinguishable(
                                                    Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "MediaStream",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: GreaterThan,
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "getUserMedia",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen,
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional,
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "MediaStreamConstraints",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "constraints",
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign,
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: OpenBrace,
                                                                close_brace: CloseBrace,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_paren: CloseParen,
                            },
                            semi_colon: SemiColon,
                        },
                    ),
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "MediaStreamConstraints",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: OpenParen,
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Boolean(
                                                        MayBeNull {
                                                            type_: Boolean,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "MediaTrackConstraints",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Or,
                                    },
                                    close_paren: CloseParen,
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Identifier(
                            "video",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: OpenParen,
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Boolean(
                                                        MayBeNull {
                                                            type_: Boolean,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "MediaTrackConstraints",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Or,
                                    },
                                    close_paren: CloseParen,
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Identifier(
                            "audio",
                        ),
                        default: Some(
                            Default {
                                assign: Assign,
                                value: Boolean(
                                    BooleanLit(
                                        false,
                                    ),
                                ),
                            },
                        ),
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback,
            identifier: Identifier(
                "NavigatorUserMediaSuccessCallback",
            ),
            assign: Assign,
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Undefined,
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "MediaStream",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "stream",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Callback,
            identifier: Identifier(
                "NavigatorUserMediaErrorCallback",
            ),
            assign: Assign,
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Undefined,
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: OpenParen,
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "MediaStreamError",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Identifier(
                                    "error",
                                ),
                                default: None,
                            },
                        ),
                    ],
                    separator: Comma,
                },
                close_paren: CloseParen,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Single(
                    Distinguishable(
                        Object(
                            MayBeNull {
                                type_: Object,
                                q_mark: None,
                            },
                        ),
                    ),
                ),
            },
            identifier: Identifier(
                "MediaStreamError",
            ),
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "DoubleRange",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "max",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "min",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ConstrainDoubleRange",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "DoubleRange",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "exact",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Double,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "ideal",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ULongRange",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: OpenBracket,
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Identifier(
                                                    "Clamp",
                                                ),
                                            ),
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_bracket: CloseBracket,
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "max",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: OpenBracket,
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Identifier(
                                                    "Clamp",
                                                ),
                                            ),
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_bracket: CloseBracket,
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "min",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ConstrainULongRange",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "ULongRange",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: OpenBracket,
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Identifier(
                                                    "Clamp",
                                                ),
                                            ),
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_bracket: CloseBracket,
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "exact",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: OpenBracket,
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Identifier(
                                                    "Clamp",
                                                ),
                                            ),
                                        ),
                                    ],
                                    separator: Comma,
                                },
                                close_bracket: CloseBracket,
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Unsigned,
                                                ),
                                                long: Long,
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "ideal",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ConstrainBooleanParameters",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "exact",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Boolean,
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "ideal",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ConstrainDOMStringParameters",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: OpenParen,
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: DOMString(
                                                        MayBeNull {
                                                            type_: DOMString,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Sequence(
                                                        MayBeNull {
                                                            type_: SequenceType {
                                                                sequence: Sequence,
                                                                generics: Generics {
                                                                    open_angle: LessThan,
                                                                    body: AttributedType {
                                                                        attributes: None,
                                                                        type_: Single(
                                                                            Distinguishable(
                                                                                DOMString(
                                                                                    MayBeNull {
                                                                                        type_: DOMString,
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    },
                                                                    close_angle: GreaterThan,
                                                                },
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Or,
                                    },
                                    close_paren: CloseParen,
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Identifier(
                            "exact",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: OpenParen,
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: DOMString(
                                                        MayBeNull {
                                                            type_: DOMString,
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Sequence(
                                                        MayBeNull {
                                                            type_: SequenceType {
                                                                sequence: Sequence,
                                                                generics: Generics {
                                                                    open_angle: LessThan,
                                                                    body: AttributedType {
                                                                        attributes: None,
                                                                        type_: Single(
                                                                            Distinguishable(
                                                                                DOMString(
                                                                                    MayBeNull {
                                                                                        type_: DOMString,
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    },
                                                                    close_angle: GreaterThan,
                                                                },
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: Or,
                                    },
                                    close_paren: CloseParen,
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Identifier(
                            "ideal",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: Some(
                                                Bracketed {
                                                    open_bracket: OpenBracket,
                                                    body: Punctuated {
                                                        list: [
                                                            NoArgs(
                                                                ExtendedAttributeNoArgs(
                                                                    Identifier(
                                                                        "Clamp",
                                                                    ),
                                                                ),
                                                            ),
                                                        ],
                                                        separator: Comma,
                                                    },
                                                    close_bracket: CloseBracket,
                                                },
                                            ),
                                            type_: Integer(
                                                MayBeNull {
                                                    type_: Long(
                                                        LongType {
                                                            unsigned: Some(
                                                                Unsigned,
                                                            ),
                                                            long: Long,
                                                        },
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ConstrainULongRange",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "ConstrainULong",
            ),
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: FloatingPoint(
                                                MayBeNull {
                                                    type_: Double(
                                                        DoubleType {
                                                            unrestricted: None,
                                                            double: Double,
                                                        },
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ConstrainDoubleRange",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "ConstrainDouble",
            ),
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Boolean(
                                                MayBeNull {
                                                    type_: Boolean,
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ConstrainBooleanParameters",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "ConstrainBoolean",
            ),
            semi_colon: SemiColon,
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Typedef,
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: OpenParen,
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: DOMString(
                                                MayBeNull {
                                                    type_: DOMString,
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Sequence(
                                                MayBeNull {
                                                    type_: SequenceType {
                                                        sequence: Sequence,
                                                        generics: Generics {
                                                            open_angle: LessThan,
                                                            body: AttributedType {
                                                                attributes: None,
                                                                type_: Single(
                                                                    Distinguishable(
                                                                        DOMString(
                                                                            MayBeNull {
                                                                                type_: DOMString,
                                                                                q_mark: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                            },
                                                            close_angle: GreaterThan,
                                                        },
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Identifier(
                                                        "ConstrainDOMStringParameters",
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: Or,
                            },
                            close_paren: CloseParen,
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Identifier(
                "ConstrainDOMString",
            ),
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "Capabilities",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "Settings",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "ConstraintSet",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace,
                body: [],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Dictionary,
            identifier: Identifier(
                "Constraints",
            ),
            inheritance: Some(
                Inheritance {
                    colon: Colon,
                    identifier: Identifier(
                        "ConstraintSet",
                    ),
                },
            ),
            members: Braced {
                open_brace: OpenBrace,
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Sequence,
                                            generics: Generics {
                                                open_angle: LessThan,
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "ConstraintSet",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: GreaterThan,
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Identifier(
                            "advanced",
                        ),
                        default: None,
                        semi_colon: SemiColon,
                    },
                ],
                close_brace: CloseBrace,
            },
            semi_colon: SemiColon,
        },
    ),
]
