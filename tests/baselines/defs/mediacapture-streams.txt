[
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    rhs: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Window",
                                        ),
                                    },
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Token {
                                        trivia: "\n ",
                                        value: Identifier(
                                            "Constructor",
                                        ),
                                    },
                                ),
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Token {
                                        trivia: "\n ",
                                        value: Identifier(
                                            "Constructor",
                                        ),
                                    },
                                    args: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Token {
                                                                                trivia: "",
                                                                                value: Identifier(
                                                                                    "MediaStream",
                                                                                ),
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Token {
                                                            trivia: " ",
                                                            value: Identifier(
                                                                "stream",
                                                            ),
                                                        },
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: [],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Token {
                                        trivia: "\n ",
                                        value: Identifier(
                                            "Constructor",
                                        ),
                                    },
                                    args: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Sequence(
                                                                        MayBeNull {
                                                                            type_: SequenceType {
                                                                                sequence: Token {
                                                                                    trivia: "",
                                                                                    value: Sequence,
                                                                                },
                                                                                generics: Generics {
                                                                                    open_angle: Token {
                                                                                        trivia: "",
                                                                                        value: LessThan,
                                                                                    },
                                                                                    body: AttributedType {
                                                                                        attributes: None,
                                                                                        type_: Single(
                                                                                            Distinguishable(
                                                                                                Identifier(
                                                                                                    MayBeNull {
                                                                                                        type_: Token {
                                                                                                            trivia: "",
                                                                                                            value: Identifier(
                                                                                                                "MediaStreamTrack",
                                                                                                            ),
                                                                                                        },
                                                                                                        q_mark: None,
                                                                                                    },
                                                                                                ),
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                    close_angle: Token {
                                                                                        trivia: "",
                                                                                        value: GreaterThan,
                                                                                    },
                                                                                },
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Token {
                                                            trivia: " ",
                                                            value: Identifier(
                                                                "tracks",
                                                            ),
                                                        },
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: [],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [
                            Token {
                                trivia: "",
                                value: Comma,
                            },
                            Token {
                                trivia: "",
                                value: Comma,
                            },
                            Token {
                                trivia: "",
                                value: Comma,
                            },
                        ],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaStream",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "EventTarget",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: DOMString,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "id",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Token {
                                                    trivia: "\n    ",
                                                    value: Sequence,
                                                },
                                                generics: Generics {
                                                    open_angle: Token {
                                                        trivia: "",
                                                        value: LessThan,
                                                    },
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Token {
                                                                            trivia: "",
                                                                            value: Identifier(
                                                                                "MediaStreamTrack",
                                                                            ),
                                                                        },
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: Token {
                                                        trivia: "",
                                                        value: GreaterThan,
                                                    },
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getAudioTracks",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Token {
                                                    trivia: "\n    ",
                                                    value: Sequence,
                                                },
                                                generics: Generics {
                                                    open_angle: Token {
                                                        trivia: "",
                                                        value: LessThan,
                                                    },
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Token {
                                                                            trivia: "",
                                                                            value: Identifier(
                                                                                "MediaStreamTrack",
                                                                            ),
                                                                        },
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: Token {
                                                        trivia: "",
                                                        value: GreaterThan,
                                                    },
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getVideoTracks",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Sequence(
                                        MayBeNull {
                                            type_: SequenceType {
                                                sequence: Token {
                                                    trivia: "\n    ",
                                                    value: Sequence,
                                                },
                                                generics: Generics {
                                                    open_angle: Token {
                                                        trivia: "",
                                                        value: LessThan,
                                                    },
                                                    body: AttributedType {
                                                        attributes: None,
                                                        type_: Single(
                                                            Distinguishable(
                                                                Identifier(
                                                                    MayBeNull {
                                                                        type_: Token {
                                                                            trivia: "",
                                                                            value: Identifier(
                                                                                "MediaStreamTrack",
                                                                            ),
                                                                        },
                                                                        q_mark: None,
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                    close_angle: Token {
                                                        trivia: "",
                                                        value: GreaterThan,
                                                    },
                                                },
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getTracks",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaStreamTrack",
                                                ),
                                            },
                                            q_mark: Some(
                                                Token {
                                                    trivia: "",
                                                    value: QMark,
                                                },
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getTrackById",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: DOMString,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "trackId",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "addTrack",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "MediaStreamTrack",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "track",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "removeTrack",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "MediaStreamTrack",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "track",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaStream",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "clone",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Boolean,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "active",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n                    ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "EventHandler",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "onaddtrack",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n                    ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "EventHandler",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "onremovetrack",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    rhs: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Window",
                                        ),
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaStreamTrack",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "EventTarget",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: DOMString,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "kind",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: DOMString,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "id",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: DOMString,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "label",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n                    ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Boolean,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "enabled",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Boolean(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Boolean,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "muted",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n                    ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "EventHandler",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "onmute",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n                    ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "EventHandler",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "onunmute",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "MediaStreamTrackState",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "readyState",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n                    ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "EventHandler",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "onended",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaStreamTrack",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "clone",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "stop",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaTrackCapabilities",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getCapabilities",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaTrackConstraints",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getConstraints",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaTrackSettings",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getSettings",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n    ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Undefined(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Undefined,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "applyConstraints",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "MediaTrackConstraints",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "constraints",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Token {
                trivia: "\n\n",
                value: Enum,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaStreamTrackState",
                ),
            },
            values: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: PunctuatedNonEmpty {
                    list: [
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "live",
                            ),
                        },
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "ended",
                            ),
                        },
                    ],
                    separator: PhantomData<weedle::term::Token<weedle::term::Comma>>,
                },
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaTrackSupportedConstraints",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "width",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "height",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "aspectRatio",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "frameRate",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "facingMode",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "resizeMode",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "volume",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleRate",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleSize",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "echoCancellation",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "autoGainControl",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "noiseSuppression",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "latency",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "channelCount",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "deviceId",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "groupId",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            true,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaTrackCapabilities",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ULongRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "width",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ULongRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "height",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "DoubleRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "aspectRatio",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "DoubleRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "frameRate",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Token {
                                                trivia: "\n             ",
                                                value: Sequence,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: DOMString,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "facingMode",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Token {
                                                trivia: "\n             ",
                                                value: Sequence,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: DOMString,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "resizeMode",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "DoubleRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "volume",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ULongRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleRate",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ULongRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleSize",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Token {
                                                trivia: "\n             ",
                                                value: Sequence,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Boolean,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "echoCancellation",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Token {
                                                trivia: "\n             ",
                                                value: Sequence,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Boolean,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "autoGainControl",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Token {
                                                trivia: "\n             ",
                                                value: Sequence,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Boolean(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Boolean,
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "noiseSuppression",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "DoubleRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "latency",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ULongRange",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "channelCount",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: DOMString,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "deviceId",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: DOMString,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "groupId",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaTrackConstraints",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "MediaTrackConstraintSet",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Token {
                                                trivia: "\n             ",
                                                value: Sequence,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "MediaTrackConstraintSet",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "advanced",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaTrackConstraintSet",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainULong",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "width",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainULong",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "height",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDouble",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "aspectRatio",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDouble",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "frameRate",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDOMString",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "facingMode",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDOMString",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "resizeMode",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDouble",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "volume",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainULong",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleRate",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainULong",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleSize",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainBoolean",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "echoCancellation",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainBoolean",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "autoGainControl",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainBoolean",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "noiseSuppression",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDouble",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "latency",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainULong",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "channelCount",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDOMString",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "deviceId",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Identifier(
                                                "ConstrainDOMString",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "groupId",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaTrackSettings",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Token {
                                                    trivia: "\n             ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "width",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Token {
                                                    trivia: "\n             ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "height",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "aspectRatio",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "frameRate",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: DOMString,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "facingMode",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: DOMString,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "resizeMode",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "volume",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Token {
                                                    trivia: "\n             ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleRate",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Token {
                                                    trivia: "\n             ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "sampleSize",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "echoCancellation",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "autoGainControl",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "noiseSuppression",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "latency",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: None,
                                                long: Token {
                                                    trivia: "\n             ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "channelCount",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: DOMString,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "deviceId",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                DOMString(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: DOMString,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "groupId",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Token {
                trivia: "\n\n",
                value: Enum,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "VideoFacingModeEnum",
                ),
            },
            values: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: PunctuatedNonEmpty {
                    list: [
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "user",
                            ),
                        },
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "environment",
                            ),
                        },
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "left",
                            ),
                        },
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "right",
                            ),
                        },
                    ],
                    separator: PhantomData<weedle::term::Token<weedle::term::Comma>>,
                },
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Token {
                trivia: "\n\n",
                value: Enum,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "VideoResizeModeEnum",
                ),
            },
            values: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: PunctuatedNonEmpty {
                    list: [
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "none",
                            ),
                        },
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "crop-and-scale",
                            ),
                        },
                    ],
                    separator: PhantomData<weedle::term::Token<weedle::term::Comma>>,
                },
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    rhs: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Window",
                                        ),
                                    },
                                },
                            ),
                            ArgList(
                                ExtendedAttributeArgList {
                                    identifier: Token {
                                        trivia: "\n ",
                                        value: Identifier(
                                            "Constructor",
                                        ),
                                    },
                                    args: Parenthesized {
                                        open_paren: Token {
                                            trivia: "",
                                            value: OpenParen,
                                        },
                                        body: Punctuated {
                                            list: [
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: Token {
                                                                                trivia: "",
                                                                                value: DOMString,
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Token {
                                                            trivia: " ",
                                                            value: Identifier(
                                                                "type",
                                                            ),
                                                        },
                                                        default: None,
                                                    },
                                                ),
                                                Single(
                                                    SingleArgument {
                                                        attributes: None,
                                                        optional: None,
                                                        type_: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                Distinguishable(
                                                                    Identifier(
                                                                        MayBeNull {
                                                                            type_: Token {
                                                                                trivia: " ",
                                                                                value: Identifier(
                                                                                    "MediaStreamTrackEventInit",
                                                                                ),
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        identifier: Token {
                                                            trivia: " ",
                                                            value: Identifier(
                                                                "eventInitDict",
                                                            ),
                                                        },
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            separator: [
                                                Token {
                                                    trivia: "",
                                                    value: Comma,
                                                },
                                            ],
                                        },
                                        close_paren: Token {
                                            trivia: "",
                                            value: CloseParen,
                                        },
                                    },
                                },
                            ),
                        ],
                        separator: [
                            Token {
                                trivia: "",
                                value: Comma,
                            },
                        ],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaStreamTrackEvent",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "Event",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: Token {
                                        trivia: "\n    ",
                                        value: OpenBracket,
                                    },
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "SameObject",
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ],
                                        separator: [],
                                    },
                                    close_bracket: Token {
                                        trivia: "",
                                        value: CloseBracket,
                                    },
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "MediaStreamTrack",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "track",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaStreamTrackEventInit",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "EventInit",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: Some(
                            Token {
                                trivia: "\n    ",
                                value: Required,
                            },
                        ),
                        type_: Single(
                            Distinguishable(
                                Identifier(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: " ",
                                            value: Identifier(
                                                "MediaStreamTrack",
                                            ),
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "track",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Token {
                trivia: "\n\n",
                value: Partial,
            },
            interface: Token {
                trivia: " ",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Navigator",
                ),
            },
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: Token {
                                        trivia: "\n    ",
                                        value: OpenBracket,
                                    },
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "SameObject",
                                                        ),
                                                    },
                                                ),
                                            ),
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Token {
                                                        trivia: " ",
                                                        value: Identifier(
                                                            "SecureContext",
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ],
                                        separator: [
                                            Token {
                                                trivia: "",
                                                value: Comma,
                                            },
                                        ],
                                    },
                                    close_bracket: Token {
                                        trivia: "",
                                        value: CloseBracket,
                                    },
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "MediaDevices",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "mediaDevices",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    rhs: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Window",
                                        ),
                                    },
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Token {
                                        trivia: " ",
                                        value: Identifier(
                                            "SecureContext",
                                        ),
                                    },
                                ),
                            ),
                        ],
                        separator: [
                            Token {
                                trivia: "",
                                value: Comma,
                            },
                        ],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaDevices",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "EventTarget",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Token {
                                trivia: "\n                    ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "EventHandler",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "ondevicechange",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n    ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Sequence(
                                                        MayBeNull {
                                                            type_: SequenceType {
                                                                sequence: Token {
                                                                    trivia: "",
                                                                    value: Sequence,
                                                                },
                                                                generics: Generics {
                                                                    open_angle: Token {
                                                                        trivia: "",
                                                                        value: LessThan,
                                                                    },
                                                                    body: AttributedType {
                                                                        attributes: None,
                                                                        type_: Single(
                                                                            Distinguishable(
                                                                                Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Token {
                                                                                            trivia: "",
                                                                                            value: Identifier(
                                                                                                "MediaDeviceInfo",
                                                                                            ),
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    },
                                                                    close_angle: Token {
                                                                        trivia: "",
                                                                        value: GreaterThan,
                                                                    },
                                                                },
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "enumerateDevices",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    rhs: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Window",
                                        ),
                                    },
                                },
                            ),
                            NoArgs(
                                ExtendedAttributeNoArgs(
                                    Token {
                                        trivia: " ",
                                        value: Identifier(
                                            "SecureContext",
                                        ),
                                    },
                                ),
                            ),
                        ],
                        separator: [
                            Token {
                                trivia: "",
                                value: Comma,
                            },
                        ],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: "\n",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaDeviceInfo",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: DOMString,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "deviceId",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        Identifier(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "MediaDeviceKind",
                                                    ),
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "kind",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: DOMString,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "label",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                Token {
                                    trivia: "\n    ",
                                    value: ReadOnly,
                                },
                            ),
                            attribute: Token {
                                trivia: "        ",
                                value: Attribute,
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Distinguishable(
                                        DOMString(
                                            MayBeNull {
                                                type_: Token {
                                                    trivia: " ",
                                                    value: DOMString,
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Token {
                                trivia: " ",
                                value: Identifier(
                                    "groupId",
                                ),
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: Token {
                                        trivia: "\n    ",
                                        value: OpenBracket,
                                    },
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "Default",
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ],
                                        separator: [],
                                    },
                                    close_bracket: Token {
                                        trivia: "",
                                        value: CloseBracket,
                                    },
                                },
                            ),
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Object(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: " ",
                                                value: Object,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "toJSON",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Enum(
        EnumDefinition {
            attributes: None,
            enum_: Token {
                trivia: "\n\n",
                value: Enum,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaDeviceKind",
                ),
            },
            values: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: PunctuatedNonEmpty {
                    list: [
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "audioinput",
                            ),
                        },
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "audiooutput",
                            ),
                        },
                        Token {
                            trivia: "\n    ",
                            value: StringLit(
                                "videoinput",
                            ),
                        },
                    ],
                    separator: PhantomData<weedle::term::Token<weedle::term::Comma>>,
                },
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: Some(
                Bracketed {
                    open_bracket: Token {
                        trivia: "\n\n",
                        value: OpenBracket,
                    },
                    body: Punctuated {
                        list: [
                            Ident(
                                ExtendedAttributeIdent {
                                    lhs_identifier: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Exposed",
                                        ),
                                    },
                                    assign: Token {
                                        trivia: "",
                                        value: Assign,
                                    },
                                    rhs: Token {
                                        trivia: "",
                                        value: Identifier(
                                            "Window",
                                        ),
                                    },
                                },
                            ),
                        ],
                        separator: [],
                    },
                    close_bracket: Token {
                        trivia: "",
                        value: CloseBracket,
                    },
                },
            ),
            interface: Token {
                trivia: " ",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "InputDeviceInfo",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "MediaDeviceInfo",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaTrackCapabilities",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getCapabilities",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Token {
                trivia: "\n\n",
                value: Partial,
            },
            interface: Token {
                trivia: " ",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Navigator",
                ),
            },
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: Token {
                                        trivia: "\n    ",
                                        value: OpenBracket,
                                    },
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "SecureContext",
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ],
                                        separator: [],
                                    },
                                    close_bracket: Token {
                                        trivia: "",
                                        value: CloseBracket,
                                    },
                                },
                            ),
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Undefined(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Undefined,
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getUserMedia",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "MediaStreamConstraints",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "constraints",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "NavigatorUserMediaSuccessCallback",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "successCallback",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "NavigatorUserMediaErrorCallback",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "errorCallback",
                                                    ),
                                                },
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: [
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                        Token {
                                            trivia: "",
                                            value: Comma,
                                        },
                                    ],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    PartialInterface(
        PartialInterfaceDefinition {
            attributes: None,
            partial: Token {
                trivia: "\n\n",
                value: Partial,
            },
            interface: Token {
                trivia: " ",
                value: Interface,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaDevices",
                ),
            },
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Distinguishable(
                                    Identifier(
                                        MayBeNull {
                                            type_: Token {
                                                trivia: "\n    ",
                                                value: Identifier(
                                                    "MediaTrackSupportedConstraints",
                                                ),
                                            },
                                            q_mark: None,
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getSupportedConstraints",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            return_type: Single(
                                Promise(
                                    PromiseType {
                                        promise: Token {
                                            trivia: "\n    ",
                                            value: Promise,
                                        },
                                        generics: Generics {
                                            open_angle: Token {
                                                trivia: "",
                                                value: LessThan,
                                            },
                                            body: Single(
                                                Distinguishable(
                                                    Identifier(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Identifier(
                                                                    "MediaStream",
                                                                ),
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                            close_angle: Token {
                                                trivia: "",
                                                value: GreaterThan,
                                            },
                                        },
                                    },
                                ),
                            ),
                            identifier: Some(
                                Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "getUserMedia",
                                    ),
                                },
                            ),
                            args: Parenthesized {
                                open_paren: Token {
                                    trivia: "",
                                    value: OpenParen,
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Token {
                                                        trivia: "",
                                                        value: Optional,
                                                    },
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: " ",
                                                                        value: Identifier(
                                                                            "MediaStreamConstraints",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Token {
                                                    trivia: " ",
                                                    value: Identifier(
                                                        "constraints",
                                                    ),
                                                },
                                                default: Some(
                                                    Default {
                                                        assign: Token {
                                                            trivia: " ",
                                                            value: Assign,
                                                        },
                                                        value: EmptyDictionary(
                                                            EmptyDictionaryLit {
                                                                open_brace: Token {
                                                                    trivia: " ",
                                                                    value: OpenBrace,
                                                                },
                                                                close_brace: Token {
                                                                    trivia: "",
                                                                    value: CloseBrace,
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_paren: Token {
                                    trivia: "",
                                    value: CloseParen,
                                },
                            },
                            semi_colon: Token {
                                trivia: "",
                                value: SemiColon,
                            },
                        },
                    ),
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaStreamConstraints",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: Token {
                                        trivia: "\n             ",
                                        value: OpenParen,
                                    },
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Boolean(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Boolean,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Identifier(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: " ",
                                                                value: Identifier(
                                                                    "MediaTrackConstraints",
                                                                ),
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: [
                                            Token {
                                                trivia: " ",
                                                value: Or,
                                            },
                                        ],
                                    },
                                    close_paren: Token {
                                        trivia: "",
                                        value: CloseParen,
                                    },
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "video",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            false,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: Token {
                                        trivia: "\n             ",
                                        value: OpenParen,
                                    },
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Boolean(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: Boolean,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Identifier(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: " ",
                                                                value: Identifier(
                                                                    "MediaTrackConstraints",
                                                                ),
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: [
                                            Token {
                                                trivia: " ",
                                                value: Or,
                                            },
                                        ],
                                    },
                                    close_paren: Token {
                                        trivia: "",
                                        value: CloseParen,
                                    },
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "audio",
                            ),
                        },
                        default: Some(
                            Default {
                                assign: Token {
                                    trivia: " ",
                                    value: Assign,
                                },
                                value: Boolean(
                                    Token {
                                        trivia: " ",
                                        value: BooleanLit(
                                            false,
                                        ),
                                    },
                                ),
                            },
                        ),
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "NavigatorUserMediaSuccessCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Token {
                                trivia: " ",
                                value: Undefined,
                            },
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "MediaStream",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "stream",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Callback(
        CallbackDefinition {
            attributes: None,
            callback: Token {
                trivia: "\n\n",
                value: Callback,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "NavigatorUserMediaErrorCallback",
                ),
            },
            assign: Token {
                trivia: " ",
                value: Assign,
            },
            return_type: Single(
                Distinguishable(
                    Undefined(
                        MayBeNull {
                            type_: Token {
                                trivia: " ",
                                value: Undefined,
                            },
                            q_mark: None,
                        },
                    ),
                ),
            ),
            arguments: Parenthesized {
                open_paren: Token {
                    trivia: " ",
                    value: OpenParen,
                },
                body: Punctuated {
                    list: [
                        Single(
                            SingleArgument {
                                attributes: None,
                                optional: None,
                                type_: AttributedType {
                                    attributes: None,
                                    type_: Single(
                                        Distinguishable(
                                            Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Identifier(
                                                            "MediaStreamError",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        ),
                                    ),
                                },
                                identifier: Token {
                                    trivia: " ",
                                    value: Identifier(
                                        "error",
                                    ),
                                },
                                default: None,
                            },
                        ),
                    ],
                    separator: [],
                },
                close_paren: Token {
                    trivia: "",
                    value: CloseParen,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Token {
                trivia: "\n\n",
                value: Typedef,
            },
            type_: AttributedType {
                attributes: None,
                type_: Single(
                    Distinguishable(
                        Object(
                            MayBeNull {
                                type_: Token {
                                    trivia: " ",
                                    value: Object,
                                },
                                q_mark: None,
                            },
                        ),
                    ),
                ),
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "MediaStreamError",
                ),
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "DoubleRange",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "max",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "min",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainDoubleRange",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "DoubleRange",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "exact",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                FloatingPoint(
                                    MayBeNull {
                                        type_: Double(
                                            DoubleType {
                                                unrestricted: None,
                                                double: Token {
                                                    trivia: "\n             ",
                                                    value: Double,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "ideal",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ULongRange",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: Token {
                                    trivia: "\n             ",
                                    value: OpenBracket,
                                },
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Clamp",
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_bracket: Token {
                                    trivia: "",
                                    value: CloseBracket,
                                },
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Unsigned,
                                                    },
                                                ),
                                                long: Token {
                                                    trivia: " ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "max",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: Token {
                                    trivia: "\n             ",
                                    value: OpenBracket,
                                },
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Clamp",
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_bracket: Token {
                                    trivia: "",
                                    value: CloseBracket,
                                },
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Unsigned,
                                                    },
                                                ),
                                                long: Token {
                                                    trivia: " ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "min",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainULongRange",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "ULongRange",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: Token {
                                    trivia: "\n             ",
                                    value: OpenBracket,
                                },
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Clamp",
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_bracket: Token {
                                    trivia: "",
                                    value: CloseBracket,
                                },
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Unsigned,
                                                    },
                                                ),
                                                long: Token {
                                                    trivia: " ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "exact",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: Some(
                            Bracketed {
                                open_bracket: Token {
                                    trivia: "\n             ",
                                    value: OpenBracket,
                                },
                                body: Punctuated {
                                    list: [
                                        NoArgs(
                                            ExtendedAttributeNoArgs(
                                                Token {
                                                    trivia: "",
                                                    value: Identifier(
                                                        "Clamp",
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    separator: [],
                                },
                                close_bracket: Token {
                                    trivia: "",
                                    value: CloseBracket,
                                },
                            },
                        ),
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Integer(
                                    MayBeNull {
                                        type_: Long(
                                            LongType {
                                                unsigned: Some(
                                                    Token {
                                                        trivia: " ",
                                                        value: Unsigned,
                                                    },
                                                ),
                                                long: Token {
                                                    trivia: " ",
                                                    value: Long,
                                                },
                                            },
                                        ),
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "ideal",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainBooleanParameters",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "exact",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Boolean(
                                    MayBeNull {
                                        type_: Token {
                                            trivia: "\n             ",
                                            value: Boolean,
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "ideal",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainDOMStringParameters",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: Token {
                                        trivia: "\n             ",
                                        value: OpenParen,
                                    },
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: DOMString(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: DOMString,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Sequence(
                                                        MayBeNull {
                                                            type_: SequenceType {
                                                                sequence: Token {
                                                                    trivia: " ",
                                                                    value: Sequence,
                                                                },
                                                                generics: Generics {
                                                                    open_angle: Token {
                                                                        trivia: "",
                                                                        value: LessThan,
                                                                    },
                                                                    body: AttributedType {
                                                                        attributes: None,
                                                                        type_: Single(
                                                                            Distinguishable(
                                                                                DOMString(
                                                                                    MayBeNull {
                                                                                        type_: Token {
                                                                                            trivia: "",
                                                                                            value: DOMString,
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    },
                                                                    close_angle: Token {
                                                                        trivia: "",
                                                                        value: GreaterThan,
                                                                    },
                                                                },
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: [
                                            Token {
                                                trivia: " ",
                                                value: Or,
                                            },
                                        ],
                                    },
                                    close_paren: Token {
                                        trivia: "",
                                        value: CloseParen,
                                    },
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "exact",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Union(
                            MayBeNull {
                                type_: Parenthesized {
                                    open_paren: Token {
                                        trivia: "\n             ",
                                        value: OpenParen,
                                    },
                                    body: Punctuated {
                                        list: [
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: DOMString(
                                                        MayBeNull {
                                                            type_: Token {
                                                                trivia: "",
                                                                value: DOMString,
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            Single(
                                                AttributedNonAnyType {
                                                    attributes: None,
                                                    type_: Sequence(
                                                        MayBeNull {
                                                            type_: SequenceType {
                                                                sequence: Token {
                                                                    trivia: " ",
                                                                    value: Sequence,
                                                                },
                                                                generics: Generics {
                                                                    open_angle: Token {
                                                                        trivia: "",
                                                                        value: LessThan,
                                                                    },
                                                                    body: AttributedType {
                                                                        attributes: None,
                                                                        type_: Single(
                                                                            Distinguishable(
                                                                                DOMString(
                                                                                    MayBeNull {
                                                                                        type_: Token {
                                                                                            trivia: "",
                                                                                            value: DOMString,
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    },
                                                                    close_angle: Token {
                                                                        trivia: "",
                                                                        value: GreaterThan,
                                                                    },
                                                                },
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: [
                                            Token {
                                                trivia: " ",
                                                value: Or,
                                            },
                                        ],
                                    },
                                    close_paren: Token {
                                        trivia: "",
                                        value: CloseParen,
                                    },
                                },
                                q_mark: None,
                            },
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "ideal",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Token {
                trivia: "\n\n",
                value: Typedef,
            },
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: Token {
                                trivia: " ",
                                value: OpenParen,
                            },
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: Some(
                                                Bracketed {
                                                    open_bracket: Token {
                                                        trivia: "",
                                                        value: OpenBracket,
                                                    },
                                                    body: Punctuated {
                                                        list: [
                                                            NoArgs(
                                                                ExtendedAttributeNoArgs(
                                                                    Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "Clamp",
                                                                        ),
                                                                    },
                                                                ),
                                                            ),
                                                        ],
                                                        separator: [],
                                                    },
                                                    close_bracket: Token {
                                                        trivia: "",
                                                        value: CloseBracket,
                                                    },
                                                },
                                            ),
                                            type_: Integer(
                                                MayBeNull {
                                                    type_: Long(
                                                        LongType {
                                                            unsigned: Some(
                                                                Token {
                                                                    trivia: " ",
                                                                    value: Unsigned,
                                                                },
                                                            ),
                                                            long: Token {
                                                                trivia: " ",
                                                                value: Long,
                                                            },
                                                        },
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: " ",
                                                        value: Identifier(
                                                            "ConstrainULongRange",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: [
                                    Token {
                                        trivia: " ",
                                        value: Or,
                                    },
                                ],
                            },
                            close_paren: Token {
                                trivia: "",
                                value: CloseParen,
                            },
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainULong",
                ),
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Token {
                trivia: "\n\n",
                value: Typedef,
            },
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: Token {
                                trivia: " ",
                                value: OpenParen,
                            },
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: FloatingPoint(
                                                MayBeNull {
                                                    type_: Double(
                                                        DoubleType {
                                                            unrestricted: None,
                                                            double: Token {
                                                                trivia: "",
                                                                value: Double,
                                                            },
                                                        },
                                                    ),
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: " ",
                                                        value: Identifier(
                                                            "ConstrainDoubleRange",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: [
                                    Token {
                                        trivia: " ",
                                        value: Or,
                                    },
                                ],
                            },
                            close_paren: Token {
                                trivia: "",
                                value: CloseParen,
                            },
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainDouble",
                ),
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Token {
                trivia: "\n\n",
                value: Typedef,
            },
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: Token {
                                trivia: " ",
                                value: OpenParen,
                            },
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Boolean(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: Boolean,
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: " ",
                                                        value: Identifier(
                                                            "ConstrainBooleanParameters",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: [
                                    Token {
                                        trivia: " ",
                                        value: Or,
                                    },
                                ],
                            },
                            close_paren: Token {
                                trivia: "",
                                value: CloseParen,
                            },
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainBoolean",
                ),
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: Token {
                trivia: "\n\n",
                value: Typedef,
            },
            type_: AttributedType {
                attributes: None,
                type_: Union(
                    MayBeNull {
                        type_: Parenthesized {
                            open_paren: Token {
                                trivia: " ",
                                value: OpenParen,
                            },
                            body: Punctuated {
                                list: [
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: DOMString(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: "",
                                                        value: DOMString,
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Sequence(
                                                MayBeNull {
                                                    type_: SequenceType {
                                                        sequence: Token {
                                                            trivia: " ",
                                                            value: Sequence,
                                                        },
                                                        generics: Generics {
                                                            open_angle: Token {
                                                                trivia: "",
                                                                value: LessThan,
                                                            },
                                                            body: AttributedType {
                                                                attributes: None,
                                                                type_: Single(
                                                                    Distinguishable(
                                                                        DOMString(
                                                                            MayBeNull {
                                                                                type_: Token {
                                                                                    trivia: "",
                                                                                    value: DOMString,
                                                                                },
                                                                                q_mark: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                            },
                                                            close_angle: Token {
                                                                trivia: "",
                                                                value: GreaterThan,
                                                            },
                                                        },
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                    Single(
                                        AttributedNonAnyType {
                                            attributes: None,
                                            type_: Identifier(
                                                MayBeNull {
                                                    type_: Token {
                                                        trivia: " ",
                                                        value: Identifier(
                                                            "ConstrainDOMStringParameters",
                                                        ),
                                                    },
                                                    q_mark: None,
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                separator: [
                                    Token {
                                        trivia: " ",
                                        value: Or,
                                    },
                                    Token {
                                        trivia: " ",
                                        value: Or,
                                    },
                                ],
                            },
                            close_paren: Token {
                                trivia: "",
                                value: CloseParen,
                            },
                        },
                        q_mark: None,
                    },
                ),
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstrainDOMString",
                ),
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Capabilities",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Settings",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "ConstraintSet",
                ),
            },
            inheritance: None,
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
    Dictionary(
        DictionaryDefinition {
            attributes: None,
            dictionary: Token {
                trivia: "\n\n",
                value: Dictionary,
            },
            identifier: Token {
                trivia: " ",
                value: Identifier(
                    "Constraints",
                ),
            },
            inheritance: Some(
                Inheritance {
                    colon: Token {
                        trivia: " ",
                        value: Colon,
                    },
                    identifier: Token {
                        trivia: " ",
                        value: Identifier(
                            "ConstraintSet",
                        ),
                    },
                },
            ),
            members: Braced {
                open_brace: Token {
                    trivia: " ",
                    value: OpenBrace,
                },
                body: [
                    DictionaryMember {
                        attributes: None,
                        required: None,
                        type_: Single(
                            Distinguishable(
                                Sequence(
                                    MayBeNull {
                                        type_: SequenceType {
                                            sequence: Token {
                                                trivia: "\n             ",
                                                value: Sequence,
                                            },
                                            generics: Generics {
                                                open_angle: Token {
                                                    trivia: "",
                                                    value: LessThan,
                                                },
                                                body: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Distinguishable(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Token {
                                                                        trivia: "",
                                                                        value: Identifier(
                                                                            "ConstraintSet",
                                                                        ),
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                close_angle: Token {
                                                    trivia: "",
                                                    value: GreaterThan,
                                                },
                                            },
                                        },
                                        q_mark: None,
                                    },
                                ),
                            ),
                        ),
                        identifier: Token {
                            trivia: " ",
                            value: Identifier(
                                "advanced",
                            ),
                        },
                        default: None,
                        semi_colon: Token {
                            trivia: "",
                            value: SemiColon,
                        },
                    },
                ],
                close_brace: Token {
                    trivia: "\n",
                    value: CloseBrace,
                },
            },
            semi_colon: Token {
                trivia: "",
                value: SemiColon,
            },
        },
    ),
]
