[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "Circle",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Constructor(
                                "constructor",
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Constructor(
                                "constructor",
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            FloatingPoint(
                                                                MayBeNull {
                                                                    type_: Float(
                                                                        FloatType {
                                                                            unrestricted: None,
                                                                            float: Float(
                                                                                "float",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "radius",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Constructor(
                                "constructor",
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: Some(
                                                    Optional(
                                                        "optional",
                                                    ),
                                                ),
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "string",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "str",
                                                    ),
                                                ),
                                                default: Some(
                                                    Default {
                                                        assign: Assign(
                                                            "=",
                                                        ),
                                                        value: String(
                                                            StringLit(
                                                                "",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Constructor(
                                "constructor",
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Sequence(
                                                                MayBeNull {
                                                                    type_: SequenceType {
                                                                        sequence: Sequence(
                                                                            "sequence",
                                                                        ),
                                                                        generics: Generics {
                                                                            open_angle: LessThan(
                                                                                "<",
                                                                            ),
                                                                            body: AttributedType {
                                                                                attributes: None,
                                                                                type_: Single(
                                                                                    NonAny(
                                                                                        Identifier(
                                                                                            MayBeNull {
                                                                                                type_: Identifier(
                                                                                                    "string",
                                                                                                ),
                                                                                                q_mark: None,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            close_angle: GreaterThan(
                                                                                ">",
                                                                            ),
                                                                        },
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "seq",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Constructor(
                        ConstructorInterfaceMember {
                            attributes: None,
                            constructor: Constructor(
                                "constructor",
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Union(
                                                        MayBeNull {
                                                            type_: Parenthesized {
                                                                open_paren: OpenParen(
                                                                    "(",
                                                                ),
                                                                body: Punctuated {
                                                                    list: [
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "Type1",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Single(
                                                                            AttributedNonAnyType {
                                                                                attributes: None,
                                                                                type_: Identifier(
                                                                                    MayBeNull {
                                                                                        type_: Identifier(
                                                                                            "Type2",
                                                                                        ),
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                    separator: PhantomData<weedle::lexer::keywords::Or>,
                                                                },
                                                                close_paren: CloseParen(
                                                                    ")",
                                                                ),
                                                            },
                                                            q_mark: None,
                                                        },
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "union",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Float(
                                                    FloatType {
                                                        unrestricted: None,
                                                        float: Float(
                                                            "float",
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                Identifier(
                                    "r",
                                ),
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Float(
                                                    FloatType {
                                                        unrestricted: None,
                                                        float: Float(
                                                            "float",
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                Identifier(
                                    "cx",
                                ),
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Float(
                                                    FloatType {
                                                        unrestricted: None,
                                                        float: Float(
                                                            "float",
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                Identifier(
                                    "cy",
                                ),
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly(
                                    "readonly",
                                ),
                            ),
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Float(
                                                    FloatType {
                                                        unrestricted: None,
                                                        float: Float(
                                                            "float",
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                Identifier(
                                    "circumference",
                                ),
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
]
