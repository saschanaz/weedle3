[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "Foo",
                ),
                trivia: " ",
            },
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: " ",
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Type(
                                Single(
                                    Promise(
                                        PromiseType {
                                            promise: VariantToken {
                                                variant: Promise(
                                                    "Promise",
                                                ),
                                                trivia: "\n  ",
                                            },
                                            generics: Generics {
                                                open_angle: VariantToken {
                                                    variant: LessThan(
                                                        "<",
                                                    ),
                                                    trivia: "",
                                                },
                                                body: Type(
                                                    Single(
                                                        Promise(
                                                            PromiseType {
                                                                promise: VariantToken {
                                                                    variant: Promise(
                                                                        "Promise",
                                                                    ),
                                                                    trivia: "",
                                                                },
                                                                generics: Generics {
                                                                    open_angle: VariantToken {
                                                                        variant: LessThan(
                                                                            "<",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                    body: Type(
                                                                        Single(
                                                                            NonAny(
                                                                                Sequence(
                                                                                    MayBeNull {
                                                                                        type_: SequenceType {
                                                                                            sequence: VariantToken {
                                                                                                variant: Sequence(
                                                                                                    "sequence",
                                                                                                ),
                                                                                                trivia: "",
                                                                                            },
                                                                                            generics: Generics {
                                                                                                open_angle: VariantToken {
                                                                                                    variant: LessThan(
                                                                                                        "<",
                                                                                                    ),
                                                                                                    trivia: "",
                                                                                                },
                                                                                                body: AttributedType {
                                                                                                    attributes: None,
                                                                                                    type_: Single(
                                                                                                        NonAny(
                                                                                                            DOMString(
                                                                                                                MayBeNull {
                                                                                                                    type_: VariantToken {
                                                                                                                        variant: DOMString(
                                                                                                                            "DOMString",
                                                                                                                        ),
                                                                                                                        trivia: "",
                                                                                                                    },
                                                                                                                    q_mark: Some(
                                                                                                                        VariantToken {
                                                                                                                            variant: QuestionMark(
                                                                                                                                "?",
                                                                                                                            ),
                                                                                                                            trivia: "",
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        ),
                                                                                                    ),
                                                                                                },
                                                                                                close_angle: VariantToken {
                                                                                                    variant: GreaterThan(
                                                                                                        ">",
                                                                                                    ),
                                                                                                    trivia: "",
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        q_mark: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    ),
                                                                    close_angle: VariantToken {
                                                                        variant: GreaterThan(
                                                                            ">",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: VariantToken {
                                                    variant: GreaterThan(
                                                        ">",
                                                    ),
                                                    trivia: "",
                                                },
                                            },
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    VariantToken {
                                        variant: Identifier(
                                            "bar",
                                        ),
                                        trivia: " ",
                                    },
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Promise(
                                        PromiseType {
                                            promise: VariantToken {
                                                variant: Promise(
                                                    "Promise",
                                                ),
                                                trivia: " ",
                                            },
                                            generics: Generics {
                                                open_angle: VariantToken {
                                                    variant: LessThan(
                                                        "<",
                                                    ),
                                                    trivia: "",
                                                },
                                                body: Type(
                                                    Single(
                                                        NonAny(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: VariantToken {
                                                                        variant: DOMString(
                                                                            "DOMString",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                ),
                                                close_angle: VariantToken {
                                                    variant: GreaterThan(
                                                        ">",
                                                    ),
                                                    trivia: "",
                                                },
                                            },
                                        },
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                VariantToken {
                                    variant: Identifier(
                                        "baz",
                                    ),
                                    trivia: " ",
                                },
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FrozenArrayType(
                                            MayBeNull {
                                                type_: FrozenArrayType {
                                                    frozen_array: VariantToken {
                                                        variant: FrozenArray(
                                                            "FrozenArray",
                                                        ),
                                                        trivia: " ",
                                                    },
                                                    generics: Generics {
                                                        open_angle: VariantToken {
                                                            variant: LessThan(
                                                                "<",
                                                            ),
                                                            trivia: "",
                                                        },
                                                        body: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                NonAny(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: VariantToken {
                                                                                variant: DOMString(
                                                                                    "DOMString",
                                                                                ),
                                                                                trivia: "",
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        close_angle: VariantToken {
                                                            variant: GreaterThan(
                                                                ">",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                VariantToken {
                                    variant: Identifier(
                                        "frozen",
                                    ),
                                    trivia: " ",
                                },
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        ObservableArrayType(
                                            MayBeNull {
                                                type_: ObservableArrayType {
                                                    observable_array: VariantToken {
                                                        variant: ObservableArray(
                                                            "ObservableArray",
                                                        ),
                                                        trivia: " ",
                                                    },
                                                    generics: Generics {
                                                        open_angle: VariantToken {
                                                            variant: LessThan(
                                                                "<",
                                                            ),
                                                            trivia: "",
                                                        },
                                                        body: AttributedType {
                                                            attributes: None,
                                                            type_: Single(
                                                                NonAny(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: VariantToken {
                                                                                variant: DOMString(
                                                                                    "DOMString",
                                                                                ),
                                                                                trivia: "",
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        close_angle: VariantToken {
                                                            variant: GreaterThan(
                                                                ">",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                VariantToken {
                                    variant: Identifier(
                                        "observable",
                                    ),
                                    trivia: " ",
                                },
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "\n\n",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "ExtendedFoo",
                ),
                trivia: " ",
            },
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: " ",
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FrozenArrayType(
                                            MayBeNull {
                                                type_: FrozenArrayType {
                                                    frozen_array: VariantToken {
                                                        variant: FrozenArray(
                                                            "FrozenArray",
                                                        ),
                                                        trivia: " ",
                                                    },
                                                    generics: Generics {
                                                        open_angle: VariantToken {
                                                            variant: LessThan(
                                                                "<",
                                                            ),
                                                            trivia: "",
                                                        },
                                                        body: AttributedType {
                                                            attributes: Some(
                                                                Bracketed {
                                                                    open_bracket: VariantToken {
                                                                        variant: OpenBracket(
                                                                            "[",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                    body: Punctuated {
                                                                        list: [
                                                                            NoArgs(
                                                                                ExtendedAttributeNoArgs(
                                                                                    VariantToken {
                                                                                        variant: Identifier(
                                                                                            "Foo",
                                                                                        ),
                                                                                        trivia: "",
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ],
                                                                        separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                                                    },
                                                                    close_bracket: VariantToken {
                                                                        variant: CloseBracket(
                                                                            "]",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                },
                                                            ),
                                                            type_: Single(
                                                                NonAny(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: VariantToken {
                                                                                variant: DOMString(
                                                                                    "DOMString",
                                                                                ),
                                                                                trivia: " ",
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        close_angle: VariantToken {
                                                            variant: GreaterThan(
                                                                ">",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                VariantToken {
                                    variant: Identifier(
                                        "frozen",
                                    ),
                                    trivia: " ",
                                },
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        ObservableArrayType(
                                            MayBeNull {
                                                type_: ObservableArrayType {
                                                    observable_array: VariantToken {
                                                        variant: ObservableArray(
                                                            "ObservableArray",
                                                        ),
                                                        trivia: " ",
                                                    },
                                                    generics: Generics {
                                                        open_angle: VariantToken {
                                                            variant: LessThan(
                                                                "<",
                                                            ),
                                                            trivia: "",
                                                        },
                                                        body: AttributedType {
                                                            attributes: Some(
                                                                Bracketed {
                                                                    open_bracket: VariantToken {
                                                                        variant: OpenBracket(
                                                                            "[",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                    body: Punctuated {
                                                                        list: [
                                                                            NoArgs(
                                                                                ExtendedAttributeNoArgs(
                                                                                    VariantToken {
                                                                                        variant: Identifier(
                                                                                            "Foo",
                                                                                        ),
                                                                                        trivia: "",
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ],
                                                                        separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                                                    },
                                                                    close_bracket: VariantToken {
                                                                        variant: CloseBracket(
                                                                            "]",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                },
                                                            ),
                                                            type_: Single(
                                                                NonAny(
                                                                    DOMString(
                                                                        MayBeNull {
                                                                            type_: VariantToken {
                                                                                variant: DOMString(
                                                                                    "DOMString",
                                                                                ),
                                                                                trivia: " ",
                                                                            },
                                                                            q_mark: None,
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        },
                                                        close_angle: VariantToken {
                                                            variant: GreaterThan(
                                                                ">",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                VariantToken {
                                    variant: Identifier(
                                        "observable",
                                    ),
                                    trivia: " ",
                                },
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "\n\n// Extracted from https://slightlyoff.github.io/ServiceWorker/spec/service_worker/ on 2014-05-08\n\n",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "ServiceWorkerClients",
                ),
                trivia: " ",
            },
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: " ",
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Type(
                                Single(
                                    Promise(
                                        PromiseType {
                                            promise: VariantToken {
                                                variant: Promise(
                                                    "Promise",
                                                ),
                                                trivia: "\n  ",
                                            },
                                            generics: Generics {
                                                open_angle: VariantToken {
                                                    variant: LessThan(
                                                        "<",
                                                    ),
                                                    trivia: "",
                                                },
                                                body: Type(
                                                    Single(
                                                        NonAny(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: VariantToken {
                                                                        variant: Identifier(
                                                                            "Client",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                    q_mark: Some(
                                                                        VariantToken {
                                                                            variant: QuestionMark(
                                                                                "?",
                                                                            ),
                                                                            trivia: "",
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                ),
                                                close_angle: VariantToken {
                                                    variant: GreaterThan(
                                                        ">",
                                                    ),
                                                    trivia: "",
                                                },
                                            },
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    VariantToken {
                                        variant: Identifier(
                                            "getServiced",
                                        ),
                                        trivia: " ",
                                    },
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Type(
                                Single(
                                    Promise(
                                        PromiseType {
                                            promise: VariantToken {
                                                variant: Promise(
                                                    "Promise",
                                                ),
                                                trivia: "\n  ",
                                            },
                                            generics: Generics {
                                                open_angle: VariantToken {
                                                    variant: LessThan(
                                                        "<",
                                                    ),
                                                    trivia: "",
                                                },
                                                body: Type(
                                                    Single(
                                                        Any(
                                                            VariantToken {
                                                                variant: Any(
                                                                    "any",
                                                                ),
                                                                trivia: "",
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: VariantToken {
                                                    variant: GreaterThan(
                                                        ">",
                                                    ),
                                                    trivia: "",
                                                },
                                            },
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    VariantToken {
                                        variant: Identifier(
                                            "reloadAll",
                                        ),
                                        trivia: " ",
                                    },
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "\n\n// Extracted from https://slightlyoff.github.io/ServiceWorker/spec/service_worker/ on 2014-05-13\n\n",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "FetchEvent",
                ),
                trivia: " ",
            },
            inheritance: Some(
                Inheritance {
                    colon: VariantToken {
                        variant: Colon(
                            ":",
                        ),
                        trivia: " ",
                    },
                    identifier: VariantToken {
                        variant: Identifier(
                            "Event",
                        ),
                        trivia: " ",
                    },
                },
            ),
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: " ",
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Type(
                                Single(
                                    Promise(
                                        PromiseType {
                                            promise: VariantToken {
                                                variant: Promise(
                                                    "Promise",
                                                ),
                                                trivia: "\n  ",
                                            },
                                            generics: Generics {
                                                open_angle: VariantToken {
                                                    variant: LessThan(
                                                        "<",
                                                    ),
                                                    trivia: "",
                                                },
                                                body: Type(
                                                    Single(
                                                        Any(
                                                            VariantToken {
                                                                variant: Any(
                                                                    "any",
                                                                ),
                                                                trivia: "",
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: VariantToken {
                                                    variant: GreaterThan(
                                                        ">",
                                                    ),
                                                    trivia: "",
                                                },
                                            },
                                        },
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    VariantToken {
                                        variant: Identifier(
                                            "default",
                                        ),
                                        trivia: " ",
                                    },
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
]
