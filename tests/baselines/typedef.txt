[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "// Extracted from http://dev.w3.org/2006/webapi/WebIDL/ on 2011-05-06\n      ",
            },
            identifier: Identifier(
                "Point",
            ),
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: "\n        ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Float(
                                                    FloatType {
                                                        unrestricted: None,
                                                        float: VariantToken {
                                                            variant: Float(
                                                                "float",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "x",
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: "\n        ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        FloatingPoint(
                                            MayBeNull {
                                                type_: Float(
                                                    FloatType {
                                                        unrestricted: None,
                                                        float: VariantToken {
                                                            variant: Float(
                                                                "float",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "y",
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n      ",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: VariantToken {
                variant: Typedef(
                    "typedef",
                ),
                trivia: "\n\n      ",
            },
            type_: AttributedType {
                attributes: None,
                type_: Single(
                    NonAny(
                        Sequence(
                            MayBeNull {
                                type_: SequenceType {
                                    sequence: VariantToken {
                                        variant: Sequence(
                                            "sequence",
                                        ),
                                        trivia: "",
                                    },
                                    generics: Generics {
                                        open_angle: VariantToken {
                                            variant: LessThan(
                                                "<",
                                            ),
                                            trivia: "",
                                        },
                                        body: AttributedType {
                                            attributes: None,
                                            type_: Single(
                                                NonAny(
                                                    Identifier(
                                                        MayBeNull {
                                                            type_: Identifier(
                                                                "Point",
                                                            ),
                                                            q_mark: None,
                                                        },
                                                    ),
                                                ),
                                            ),
                                        },
                                        close_angle: VariantToken {
                                            variant: GreaterThan(
                                                ">",
                                            ),
                                            trivia: "",
                                        },
                                    },
                                },
                                q_mark: None,
                            },
                        ),
                    ),
                ),
            },
            identifier: Identifier(
                "PointSequence",
            ),
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "\n\n      ",
            },
            identifier: Identifier(
                "Rect",
            ),
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: "\n        ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Point",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "topleft",
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: "\n        ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Point",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bottomright",
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n      ",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "\n\n  ",
            },
            identifier: Identifier(
                "Widget",
            ),
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: "\n\n    ",
                                },
                            ),
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: "",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Identifier(
                                            MayBeNull {
                                                type_: Identifier(
                                                    "Rect",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "bounds",
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Type(
                                Single(
                                    NonAny(
                                        Boolean(
                                            MayBeNull {
                                                type_: VariantToken {
                                                    variant: Boolean(
                                                        "boolean",
                                                    ),
                                                    trivia: "\n\n    ",
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "pointWithinBounds",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "Point",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "p",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Type(
                                Single(
                                    NonAny(
                                        Boolean(
                                            MayBeNull {
                                                type_: VariantToken {
                                                    variant: Boolean(
                                                        "boolean",
                                                    ),
                                                    trivia: "\n    ",
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    "allPointsWithinBounds",
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: Identifier(
                                                                        "PointSequence",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    "ps",
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n  ",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
    Typedef(
        TypedefDefinition {
            attributes: None,
            typedef: VariantToken {
                variant: Typedef(
                    "typedef",
                ),
                trivia: "\n\n  ",
            },
            type_: AttributedType {
                attributes: Some(
                    Bracketed {
                        open_bracket: VariantToken {
                            variant: OpenBracket(
                                "[",
                            ),
                            trivia: "",
                        },
                        body: Punctuated {
                            list: [
                                NoArgs(
                                    ExtendedAttributeNoArgs(
                                        Identifier(
                                            "Clamp",
                                        ),
                                    ),
                                ),
                            ],
                            separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                        },
                        close_bracket: VariantToken {
                            variant: CloseBracket(
                                "]",
                            ),
                            trivia: "",
                        },
                    },
                ),
                type_: Single(
                    NonAny(
                        Octet(
                            MayBeNull {
                                type_: VariantToken {
                                    variant: Octet(
                                        "octet",
                                    ),
                                    trivia: " ",
                                },
                                q_mark: None,
                            },
                        ),
                    ),
                ),
            },
            identifier: Identifier(
                "_value",
            ),
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
]
