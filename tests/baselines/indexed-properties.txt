[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            identifier: Identifier(
                "OrderedMap",
            ),
            inheritance: None,
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: Some(
                                ReadOnly(
                                    "readonly",
                                ),
                            ),
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned(
                                                                "unsigned",
                                                            ),
                                                        ),
                                                        long: Long(
                                                            "long",
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                Identifier(
                                    "size",
                                ),
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter(
                                        "getter",
                                    ),
                                ),
                            ),
                            return_type: Type(
                                Single(
                                    Any(
                                        Any(
                                            "any",
                                        ),
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    Identifier(
                                        "getByIndex",
                                    ),
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned(
                                                                                    "unsigned",
                                                                                ),
                                                                            ),
                                                                            long: Long(
                                                                                "long",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "index",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Setter(
                                    Setter(
                                        "setter",
                                    ),
                                ),
                            ),
                            return_type: Undefined(
                                Undefined(
                                    "undefined",
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    Identifier(
                                        "setByIndex",
                                    ),
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned(
                                                                                    "unsigned",
                                                                                ),
                                                                            ),
                                                                            long: Long(
                                                                                "long",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "index",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any(
                                                                "any",
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "value",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Deleter(
                                    Deleter(
                                        "deleter",
                                    ),
                                ),
                            ),
                            return_type: Undefined(
                                Undefined(
                                    "undefined",
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    Identifier(
                                        "removeByIndex",
                                    ),
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Integer(
                                                                MayBeNull {
                                                                    type_: Long(
                                                                        LongType {
                                                                            unsigned: Some(
                                                                                Unsigned(
                                                                                    "unsigned",
                                                                                ),
                                                                            ),
                                                                            long: Long(
                                                                                "long",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "index",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Getter(
                                    Getter(
                                        "getter",
                                    ),
                                ),
                            ),
                            return_type: Type(
                                Single(
                                    Any(
                                        Any(
                                            "any",
                                        ),
                                    ),
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    Identifier(
                                        "get",
                                    ),
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString(
                                                                        "DOMString",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "name",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Setter(
                                    Setter(
                                        "setter",
                                    ),
                                ),
                            ),
                            return_type: Undefined(
                                Undefined(
                                    "undefined",
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    Identifier(
                                        "set",
                                    ),
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString(
                                                                        "DOMString",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "name",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        Any(
                                                            Any(
                                                                "any",
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "value",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: Some(
                                Deleter(
                                    Deleter(
                                        "deleter",
                                    ),
                                ),
                            ),
                            return_type: Undefined(
                                Undefined(
                                    "undefined",
                                ),
                            ),
                            identifier: Some(
                                Identifier(
                                    Identifier(
                                        "remove",
                                    ),
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: OpenParen(
                                    "(",
                                ),
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: DOMString(
                                                                        "DOMString",
                                                                    ),
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    Identifier(
                                                        "name",
                                                    ),
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::lexer::keywords::Comma>,
                                },
                                close_paren: CloseParen(
                                    ")",
                                ),
                            },
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
]
