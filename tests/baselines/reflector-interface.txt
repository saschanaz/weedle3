[
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: Interface(
                "interface",
            ),
            mixin: Mixin(
                "mixin",
            ),
            identifier: Identifier(
                "Reflector",
            ),
            members: Braced {
                open_brace: OpenBrace(
                    "{",
                ),
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket(
                                        "[",
                                    ),
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Reflect",
                                                    ),
                                                ),
                                            ),
                                            String(
                                                ExtendedAttributeString {
                                                    lhs_identifier: Identifier(
                                                        "ReflectOnly",
                                                    ),
                                                    assign: Assign(
                                                        "=",
                                                    ),
                                                    rhs: StringLit(
                                                        "on",
                                                    ),
                                                },
                                            ),
                                        ],
                                        separator: PhantomData<weedle::lexer::keywords::Comma>,
                                    },
                                    close_bracket: CloseBracket(
                                        "]",
                                    ),
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString(
                                                    "DOMString",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "toggle",
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket(
                                        "[",
                                    ),
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: Identifier(
                                                        "Reflect",
                                                    ),
                                                    assign: Assign(
                                                        "=",
                                                    ),
                                                    rhs: Identifier(
                                                        "q",
                                                    ),
                                                },
                                            ),
                                            StringList(
                                                ExtendedAttributeStringList {
                                                    identifier: Identifier(
                                                        "ReflectOnly",
                                                    ),
                                                    assign: Assign(
                                                        "=",
                                                    ),
                                                    list: Parenthesized {
                                                        open_paren: OpenParen(
                                                            "(",
                                                        ),
                                                        body: Punctuated {
                                                            list: [
                                                                StringLit(
                                                                    "anonymous",
                                                                ),
                                                                StringLit(
                                                                    "use-credentials",
                                                                ),
                                                            ],
                                                            separator: PhantomData<weedle::lexer::keywords::Comma>,
                                                        },
                                                        close_paren: CloseParen(
                                                            ")",
                                                        ),
                                                    },
                                                },
                                            ),
                                        ],
                                        separator: PhantomData<weedle::lexer::keywords::Comma>,
                                    },
                                    close_bracket: CloseBracket(
                                        "]",
                                    ),
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        DOMString(
                                            MayBeNull {
                                                type_: DOMString(
                                                    "DOMString",
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "quarter",
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: OpenBracket(
                                        "[",
                                    ),
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    Identifier(
                                                        "Reflect",
                                                    ),
                                                ),
                                            ),
                                            IntegerList(
                                                ExtendedAttributeIntegerList {
                                                    identifier: Identifier(
                                                        "ReflectRange",
                                                    ),
                                                    assign: Assign(
                                                        "=",
                                                    ),
                                                    list: Parenthesized {
                                                        open_paren: OpenParen(
                                                            "(",
                                                        ),
                                                        body: Punctuated {
                                                            list: [
                                                                Dec(
                                                                    DecLit(
                                                                        "1",
                                                                    ),
                                                                ),
                                                                Dec(
                                                                    DecLit(
                                                                        "4",
                                                                    ),
                                                                ),
                                                            ],
                                                            separator: PhantomData<weedle::lexer::keywords::Comma>,
                                                        },
                                                        close_paren: CloseParen(
                                                            ")",
                                                        ),
                                                    },
                                                },
                                            ),
                                        ],
                                        separator: PhantomData<weedle::lexer::keywords::Comma>,
                                    },
                                    close_bracket: CloseBracket(
                                        "]",
                                    ),
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: Attribute(
                                "attribute",
                            ),
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            Unsigned(
                                                                "unsigned",
                                                            ),
                                                        ),
                                                        long: Long(
                                                            "long",
                                                        ),
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                "span",
                            ),
                            semi_colon: SemiColon(
                                ";",
                            ),
                        },
                    ),
                ],
                close_brace: CloseBrace(
                    "}",
                ),
            },
            semi_colon: SemiColon(
                ";",
            ),
        },
    ),
]
