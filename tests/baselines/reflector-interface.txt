[
    InterfaceMixin(
        InterfaceMixinDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "",
            },
            mixin: VariantToken {
                variant: Mixin(
                    "mixin",
                ),
                trivia: "",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "Reflector",
                ),
                trivia: "",
            },
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: VariantToken {
                                        variant: OpenBracket(
                                            "[",
                                        ),
                                        trivia: "\n  ",
                                    },
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    VariantToken {
                                                        variant: Identifier(
                                                            "Reflect",
                                                        ),
                                                        trivia: "",
                                                    },
                                                ),
                                            ),
                                            String(
                                                ExtendedAttributeString {
                                                    lhs_identifier: VariantToken {
                                                        variant: Identifier(
                                                            "ReflectOnly",
                                                        ),
                                                        trivia: " ",
                                                    },
                                                    assign: VariantToken {
                                                        variant: Assign(
                                                            "=",
                                                        ),
                                                        trivia: "",
                                                    },
                                                    rhs: VariantToken {
                                                        variant: StringLit(
                                                            "on",
                                                        ),
                                                        trivia: "",
                                                    },
                                                },
                                            ),
                                        ],
                                        separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                    },
                                    close_bracket: VariantToken {
                                        variant: CloseBracket(
                                            "]",
                                        ),
                                        trivia: "",
                                    },
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        DOMString(
                                            MayBeNull {
                                                type_: VariantToken {
                                                    variant: DOMString(
                                                        "DOMString",
                                                    ),
                                                    trivia: "",
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: VariantToken {
                                variant: Identifier(
                                    "toggle",
                                ),
                                trivia: "",
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: VariantToken {
                                        variant: OpenBracket(
                                            "[",
                                        ),
                                        trivia: "\n  // Parens may contain 2 to n values.\n  ",
                                    },
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: VariantToken {
                                                        variant: Identifier(
                                                            "Reflect",
                                                        ),
                                                        trivia: "",
                                                    },
                                                    assign: VariantToken {
                                                        variant: Assign(
                                                            "=",
                                                        ),
                                                        trivia: "",
                                                    },
                                                    rhs: VariantToken {
                                                        variant: Identifier(
                                                            "q",
                                                        ),
                                                        trivia: "",
                                                    },
                                                },
                                            ),
                                            StringList(
                                                ExtendedAttributeStringList {
                                                    identifier: VariantToken {
                                                        variant: Identifier(
                                                            "ReflectOnly",
                                                        ),
                                                        trivia: " ",
                                                    },
                                                    assign: VariantToken {
                                                        variant: Assign(
                                                            "=",
                                                        ),
                                                        trivia: "",
                                                    },
                                                    list: Parenthesized {
                                                        open_paren: VariantToken {
                                                            variant: OpenParen(
                                                                "(",
                                                            ),
                                                            trivia: "",
                                                        },
                                                        body: Punctuated {
                                                            list: [
                                                                VariantToken {
                                                                    variant: StringLit(
                                                                        "anonymous",
                                                                    ),
                                                                    trivia: "",
                                                                },
                                                                VariantToken {
                                                                    variant: StringLit(
                                                                        "use-credentials",
                                                                    ),
                                                                    trivia: " ",
                                                                },
                                                            ],
                                                            separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                                        },
                                                        close_paren: VariantToken {
                                                            variant: CloseParen(
                                                                ")",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                },
                                            ),
                                        ],
                                        separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                    },
                                    close_bracket: VariantToken {
                                        variant: CloseBracket(
                                            "]",
                                        ),
                                        trivia: "",
                                    },
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        DOMString(
                                            MayBeNull {
                                                type_: VariantToken {
                                                    variant: DOMString(
                                                        "DOMString",
                                                    ),
                                                    trivia: "",
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: VariantToken {
                                variant: Identifier(
                                    "quarter",
                                ),
                                trivia: "",
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeMixinMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: VariantToken {
                                        variant: OpenBracket(
                                            "[",
                                        ),
                                        trivia: "\n  ",
                                    },
                                    body: Punctuated {
                                        list: [
                                            NoArgs(
                                                ExtendedAttributeNoArgs(
                                                    VariantToken {
                                                        variant: Identifier(
                                                            "Reflect",
                                                        ),
                                                        trivia: "",
                                                    },
                                                ),
                                            ),
                                            IntegerList(
                                                ExtendedAttributeIntegerList {
                                                    identifier: VariantToken {
                                                        variant: Identifier(
                                                            "ReflectRange",
                                                        ),
                                                        trivia: " ",
                                                    },
                                                    assign: VariantToken {
                                                        variant: Assign(
                                                            "=",
                                                        ),
                                                        trivia: "",
                                                    },
                                                    list: Parenthesized {
                                                        open_paren: VariantToken {
                                                            variant: OpenParen(
                                                                "(",
                                                            ),
                                                            trivia: "",
                                                        },
                                                        body: Punctuated {
                                                            list: [
                                                                VariantToken {
                                                                    variant: Dec(
                                                                        DecLit(
                                                                            "1",
                                                                        ),
                                                                    ),
                                                                    trivia: "",
                                                                },
                                                                VariantToken {
                                                                    variant: Dec(
                                                                        DecLit(
                                                                            "4",
                                                                        ),
                                                                    ),
                                                                    trivia: " ",
                                                                },
                                                            ],
                                                            separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                                        },
                                                        close_paren: VariantToken {
                                                            variant: CloseParen(
                                                                ")",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                },
                                            ),
                                        ],
                                        separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                    },
                                    close_bracket: VariantToken {
                                        variant: CloseBracket(
                                            "]",
                                        ),
                                        trivia: "",
                                    },
                                },
                            ),
                            stringifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: " ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Integer(
                                            MayBeNull {
                                                type_: Long(
                                                    LongType {
                                                        unsigned: Some(
                                                            VariantToken {
                                                                variant: Unsigned(
                                                                    "unsigned",
                                                                ),
                                                                trivia: "",
                                                            },
                                                        ),
                                                        long: VariantToken {
                                                            variant: Long(
                                                                "long",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: VariantToken {
                                variant: Identifier(
                                    "span",
                                ),
                                trivia: "",
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
]
