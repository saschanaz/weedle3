[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "// Extracted from http://dev.w3.org/2006/webapi/WebIDL/ on 2011-05-06\n",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "Person",
                ),
                trivia: "",
            },
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: Some(
                                Bracketed {
                                    open_bracket: VariantToken {
                                        variant: OpenBracket(
                                            "[",
                                        ),
                                        trivia: "\n  ",
                                    },
                                    body: Punctuated {
                                        list: [
                                            Ident(
                                                ExtendedAttributeIdent {
                                                    lhs_identifier: VariantToken {
                                                        variant: Identifier(
                                                            "PutForwards",
                                                        ),
                                                        trivia: "",
                                                    },
                                                    assign: VariantToken {
                                                        variant: Assign(
                                                            "=",
                                                        ),
                                                        trivia: "",
                                                    },
                                                    rhs: VariantToken {
                                                        variant: Identifier(
                                                            "full",
                                                        ),
                                                        trivia: "",
                                                    },
                                                },
                                            ),
                                        ],
                                        separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                    },
                                    close_bracket: VariantToken {
                                        variant: CloseBracket(
                                            "]",
                                        ),
                                        trivia: "",
                                    },
                                },
                            ),
                            modifier: None,
                            readonly: Some(
                                VariantToken {
                                    variant: ReadOnly(
                                        "readonly",
                                    ),
                                    trivia: " ",
                                },
                            ),
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: "",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Identifier(
                                            MayBeNull {
                                                type_: VariantToken {
                                                    variant: Identifier(
                                                        "Name",
                                                    ),
                                                    trivia: "",
                                                },
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                VariantToken {
                                    variant: Identifier(
                                        "name",
                                    ),
                                    trivia: "",
                                },
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute(
                                    "attribute",
                                ),
                                trivia: "\n  ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    NonAny(
                                        Integer(
                                            MayBeNull {
                                                type_: Short(
                                                    ShortType {
                                                        unsigned: Some(
                                                            VariantToken {
                                                                variant: Unsigned(
                                                                    "unsigned",
                                                                ),
                                                                trivia: "",
                                                            },
                                                        ),
                                                        short: VariantToken {
                                                            variant: Short(
                                                                "short",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                ),
                                                q_mark: None,
                                            },
                                        ),
                                    ),
                                ),
                            },
                            identifier: Identifier(
                                VariantToken {
                                    variant: Identifier(
                                        "age",
                                    ),
                                    trivia: "",
                                },
                            ),
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
]
