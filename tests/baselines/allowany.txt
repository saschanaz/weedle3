[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface(
                    "interface",
                ),
                trivia: "// Extracted from http://dev.w3.org/2006/webapi/WebIDL/ on 2011-05-06\n",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "B",
                ),
                trivia: "",
            },
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace(
                        "{",
                    ),
                    trivia: "",
                },
                body: [
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Undefined(
                                VariantToken {
                                    variant: Undefined(
                                        "undefined",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            identifier: Some(
                                Identifier(
                                    VariantToken {
                                        variant: Identifier(
                                            "g",
                                        ),
                                        trivia: "",
                                    },
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Undefined(
                                VariantToken {
                                    variant: Undefined(
                                        "undefined",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            identifier: Some(
                                Identifier(
                                    VariantToken {
                                        variant: Identifier(
                                            "g",
                                        ),
                                        trivia: "",
                                    },
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: None,
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            Identifier(
                                                                MayBeNull {
                                                                    type_: VariantToken {
                                                                        variant: Identifier(
                                                                            "B",
                                                                        ),
                                                                        trivia: "",
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    VariantToken {
                                                        variant: Identifier(
                                                            "b",
                                                        ),
                                                        trivia: "",
                                                    },
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                    Operation(
                        OperationInterfaceMember {
                            attributes: None,
                            modifier: None,
                            special: None,
                            return_type: Undefined(
                                VariantToken {
                                    variant: Undefined(
                                        "undefined",
                                    ),
                                    trivia: "\n  ",
                                },
                            ),
                            identifier: Some(
                                Identifier(
                                    VariantToken {
                                        variant: Identifier(
                                            "g",
                                        ),
                                        trivia: "",
                                    },
                                ),
                            ),
                            args: Parenthesized {
                                open_paren: VariantToken {
                                    variant: OpenParen(
                                        "(",
                                    ),
                                    trivia: "",
                                },
                                body: Punctuated {
                                    list: [
                                        Single(
                                            SingleArgument {
                                                attributes: Some(
                                                    Bracketed {
                                                        open_bracket: VariantToken {
                                                            variant: OpenBracket(
                                                                "[",
                                                            ),
                                                            trivia: "",
                                                        },
                                                        body: Punctuated {
                                                            list: [
                                                                NoArgs(
                                                                    ExtendedAttributeNoArgs(
                                                                        VariantToken {
                                                                            variant: Identifier(
                                                                                "AllowAny",
                                                                            ),
                                                                            trivia: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                                        },
                                                        close_bracket: VariantToken {
                                                            variant: CloseBracket(
                                                                "]",
                                                            ),
                                                            trivia: "",
                                                        },
                                                    },
                                                ),
                                                optional: None,
                                                type_: AttributedType {
                                                    attributes: None,
                                                    type_: Single(
                                                        NonAny(
                                                            DOMString(
                                                                MayBeNull {
                                                                    type_: VariantToken {
                                                                        variant: DOMString(
                                                                            "DOMString",
                                                                        ),
                                                                        trivia: " ",
                                                                    },
                                                                    q_mark: None,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                                identifier: Identifier(
                                                    VariantToken {
                                                        variant: Identifier(
                                                            "s",
                                                        ),
                                                        trivia: "",
                                                    },
                                                ),
                                                default: None,
                                            },
                                        ),
                                    ],
                                    separator: PhantomData<weedle::parser::eat::VariantToken<weedle::lexer::keywords::Comma>>,
                                },
                                close_paren: VariantToken {
                                    variant: CloseParen(
                                        ")",
                                    ),
                                    trivia: "",
                                },
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon(
                                    ";",
                                ),
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace(
                        "}",
                    ),
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon(
                    ";",
                ),
                trivia: "",
            },
        },
    ),
]
