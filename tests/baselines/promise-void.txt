[
    Interface(
        InterfaceDefinition {
            attributes: None,
            interface: VariantToken {
                variant: Interface,
                trivia: "",
            },
            identifier: VariantToken {
                variant: Identifier(
                    "Cat",
                ),
                trivia: " ",
            },
            inheritance: None,
            members: Braced {
                open_brace: VariantToken {
                    variant: OpenBrace,
                    trivia: " ",
                },
                body: [
                    Attribute(
                        AttributeInterfaceMember {
                            attributes: None,
                            modifier: None,
                            readonly: None,
                            attribute: VariantToken {
                                variant: Attribute,
                                trivia: "\n    ",
                            },
                            type_: AttributedType {
                                attributes: None,
                                type_: Single(
                                    Promise(
                                        PromiseType {
                                            promise: VariantToken {
                                                variant: Promise,
                                                trivia: " ",
                                            },
                                            generics: Generics {
                                                open_angle: VariantToken {
                                                    variant: LessThan,
                                                    trivia: "",
                                                },
                                                body: Single(
                                                    Distinguishable(
                                                        Identifier(
                                                            MayBeNull {
                                                                type_: VariantToken {
                                                                    variant: Identifier(
                                                                        "void",
                                                                    ),
                                                                    trivia: "",
                                                                },
                                                                q_mark: None,
                                                            },
                                                        ),
                                                    ),
                                                ),
                                                close_angle: VariantToken {
                                                    variant: GreaterThan,
                                                    trivia: "",
                                                },
                                            },
                                        },
                                    ),
                                ),
                            },
                            identifier: VariantToken {
                                variant: Identifier(
                                    "meow",
                                ),
                                trivia: " ",
                            },
                            semi_colon: VariantToken {
                                variant: SemiColon,
                                trivia: "",
                            },
                        },
                    ),
                ],
                close_brace: VariantToken {
                    variant: CloseBrace,
                    trivia: "\n",
                },
            },
            semi_colon: VariantToken {
                variant: SemiColon,
                trivia: "",
            },
        },
    ),
]
